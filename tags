!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    namespace A {$/;"	n	namespace:__anon65	file:
A	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^struct A {};$/;"	s	file:
A	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace A {$/;"	n	file:
ADD_TRAIT_TEST_CASE	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Traits.tests.cpp	14;"	d	file:
ADD_TRAIT_TEST_CASE	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Traits.tests.cpp	45;"	d	file:
ADL_empty	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    struct ADL_empty {$/;"	s	namespace:unrelated
ADL_size	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    struct ADL_size {$/;"	s	namespace:unrelated
AND_GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	170;"	d
AND_GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	216;"	d
AND_THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	174;"	d
AND_THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	220;"	d
AND_WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	172;"	d
AND_WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	218;"	d
ANSI	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ANSI,$/;"	m	class:Catch::ColourMode
ANSI	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        ANSI,$/;"	m	class:Catch::ColourMode
ANSIColourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        ANSIColourImpl( IStream* stream ): ColourImpl( stream ) {}$/;"	f	class:Catch::__anon115::final
ANSIColourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        ANSIColourImpl( IStream* stream ): ColourImpl( stream ) {}$/;"	f	class:Catch::__anon33::final
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	590;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	593;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	596;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	599;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	602;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	606;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	608;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	610;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	614;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	617;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	620;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	625;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	631;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	636;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	639;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	642;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	645;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	648;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	651;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	654;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	657;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	660;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	663;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	666;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	671;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	674;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	677;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	680;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	683;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	686;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	691;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	694;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	699;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	702;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	705;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	708;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	711;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	715;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	718;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	723;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	726;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	729;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	732;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	735;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	738;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	741;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	745;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	569;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	572;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	575;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	578;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	581;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	585;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	587;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	589;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	593;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	596;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	599;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	604;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	607;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	610;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	615;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	618;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	621;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	624;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	627;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	630;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	633;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	636;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	639;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	642;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	645;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	650;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	653;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	656;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	659;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	662;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	665;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	670;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	673;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	678;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	681;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	684;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	687;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	690;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	694;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	697;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	702;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	705;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	708;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	711;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	714;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	717;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	720;"	d	file:
ARCHITECTURE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	724;"	d	file:
AllMatch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        AllMatchMatcher<Matcher> AllMatch(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
AllMatchMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^            AllMatchMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
AllTrue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        AllTrueMatcher AllTrue() { return AllTrueMatcher{}; }$/;"	f	namespace:Catch::Matchers
AllTrue	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^        AllTrueMatcher AllTrue() { return AllTrueMatcher{}; }$/;"	f	namespace:Catch::Matchers
Always	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Always,$/;"	m	class:Catch::ShowDurations
Always	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Always,$/;"	m	class:Catch::ShowDurations
AnyMatch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        AnyMatchMatcher<Matcher> AnyMatch(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
AnyMatchMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^            AnyMatchMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
AnyTrue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        AnyTrueMatcher AnyTrue() { return AnyTrueMatcher{}; }$/;"	f	namespace:Catch::Matchers
AnyTrue	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^        AnyTrueMatcher AnyTrue() { return AnyTrueMatcher{}; }$/;"	f	namespace:Catch::Matchers
Approx	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Approx::Approx ( double value )$/;"	f	class:Catch::Approx
Approx	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    Approx::Approx ( double value )$/;"	f	class:Catch::Approx
Approx	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        explicit Approx( T const& value ): Approx(static_cast<double>(value))$/;"	f	class:Catch::Approx
Approx	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^    class Approx {$/;"	c	namespace:Catch
Approx	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    ApproxMatcher<T, AllocComp, AllocMatch> Approx( std::vector<T, AllocComp> const& comparator ) {$/;"	f	namespace:Catch::Matchers
ApproxMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        ApproxMatcher(std::vector<T, AllocComp> const& comparator):$/;"	f	class:Catch::Matchers::final
Arch	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            enum Arch { Big, Little };$/;"	g	struct:Catch::Detail::__anon111::Endianness	file:
Arch	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	g	struct:Catch::Detail::__anon16::Endianness	file:
Arg	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        class Arg : public Detail::ParserRefImpl<Arg> {$/;"	c	namespace:Catch::Clara
Arg	leak_demo/Catch2/third_party/clara.hpp	/^    class Arg : public ParserRefImpl<Arg> {$/;"	c	namespace:clara::detail
Args	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Args::Args(int argc, char const* const* argv) :$/;"	f	class:Catch::Clara::Args
Args	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Args::Args(std::initializer_list<StringRef> args) :$/;"	f	class:Catch::Clara::Args
Args	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Args::Args(int argc, char const* const* argv) :$/;"	f	class:Catch::Clara::Args
Args	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Args::Args(std::initializer_list<StringRef> args) :$/;"	f	class:Catch::Clara::Args
Args	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        class Args {$/;"	c	namespace:Catch::Clara
Args	leak_demo/Catch2/third_party/clara.hpp	/^        Args( int argc, char const* const* argv )$/;"	f	class:clara::detail::Args
Args	leak_demo/Catch2/third_party/clara.hpp	/^        Args( std::initializer_list<std::string> args )$/;"	f	class:clara::detail::Args
Args	leak_demo/Catch2/third_party/clara.hpp	/^    class Args {$/;"	c	namespace:clara::detail
AssertionHandler	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionHandler::AssertionHandler$/;"	f	class:Catch::AssertionHandler
AssertionHandler	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    AssertionHandler::AssertionHandler$/;"	f	class:Catch::AssertionHandler
AssertionHandler	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^    class AssertionHandler {$/;"	c	namespace:Catch
AssertionInfo	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	/^    struct AssertionInfo {$/;"	s	namespace:Catch
AssertionOrBenchmarkResult	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        AssertionOrBenchmarkResult::AssertionOrBenchmarkResult($/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
AssertionOrBenchmarkResult	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^        AssertionOrBenchmarkResult::AssertionOrBenchmarkResult($/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
AssertionOrBenchmarkResult	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        class AssertionOrBenchmarkResult {$/;"	c	namespace:Catch::Detail
AssertionPrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessages, ColourImpl* colourImpl_)$/;"	f	class:Catch::__anon130::AssertionPrinter
AssertionPrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^class AssertionPrinter {$/;"	c	namespace:Catch::__anon130	file:
AssertionPrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    AssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, bool _printInfoMessages, ColourImpl* colourImpl_)$/;"	f	class:Catch::__anon9::AssertionPrinter
AssertionPrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^class AssertionPrinter {$/;"	c	namespace:Catch::__anon9	file:
AssertionReaction	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^    struct AssertionReaction {$/;"	s	namespace:Catch
AssertionResult	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionResult::AssertionResult( AssertionInfo const& info, AssertionResultData&& data )$/;"	f	class:Catch::AssertionResult
AssertionResult	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    AssertionResult::AssertionResult( AssertionInfo const& info, AssertionResultData&& data )$/;"	f	class:Catch::AssertionResult
AssertionResult	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^    class AssertionResult {$/;"	c	namespace:Catch
AssertionResultData	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionResultData::AssertionResultData(ResultWas::OfType _resultType, LazyExpression const & _lazyExpression):$/;"	f	class:Catch::AssertionResultData
AssertionResultData	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    AssertionResultData::AssertionResultData(ResultWas::OfType _resultType, LazyExpression const & _lazyExpression):$/;"	f	class:Catch::AssertionResultData
AssertionResultData	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^    struct AssertionResultData$/;"	s	namespace:Catch
AssertionStartingListener	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^        AssertionStartingListener( Catch::IConfig const* config ):$/;"	f	class:__anon45::AssertionStartingListener
AssertionStartingListener	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    class AssertionStartingListener : public Catch::EventListenerBase {$/;"	c	namespace:__anon45	file:
AssertionStats	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionStats::AssertionStats( AssertionResult const& _assertionResult,$/;"	f	class:Catch::AssertionStats
AssertionStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    AssertionStats::AssertionStats( AssertionResult const& _assertionResult,$/;"	f	class:Catch::AssertionStats
AssertionStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    struct AssertionStats {$/;"	s	namespace:Catch
Auto	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Auto,$/;"	m	class:Catch::__anon131::Duration::Unit	file:
Auto	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^        Auto,$/;"	m	class:Catch::__anon12::Duration::Unit	file:
AutoReg	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^struct AutoReg : Detail::NonCopyable {$/;"	s	namespace:Catch
AutoTestReg	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^        AutoTestReg() {$/;"	f	struct:__anon62::AutoTestReg
AutoTestReg	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    struct AutoTestReg {$/;"	s	namespace:__anon62	file:
AutomakeReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^        AutomakeReporter(ReporterConfig&& _config):$/;"	f	class:Catch::final
Awkward	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Awkward$/;"	s	file:
B	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        namespace B {$/;"	n	namespace:__anon65::A	file:
B	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^struct B : private A {$/;"	s	file:
B	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace B {$/;"	n	file:
Bar	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    struct Bar {$/;"	s	namespace:__anon62	file:
BasicResult	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                BasicResult( ResultType type,$/;"	f	class:Catch::Clara::Detail::BasicResult
BasicResult	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BasicResult( BasicResult<U> const& other ):$/;"	f	class:Catch::Clara::Detail::BasicResult
BasicResult	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class BasicResult : public ResultValueBase<T> {$/;"	c	namespace:Catch::Clara::Detail
BasicResult	leak_demo/Catch2/third_party/clara.hpp	/^        BasicResult( ResultBase::Type type, std::string const &message )$/;"	f	class:clara::detail::BasicResult
BasicResult	leak_demo/Catch2/third_party/clara.hpp	/^        explicit BasicResult( BasicResult<U> const &other )$/;"	f	class:clara::detail::BasicResult
BasicResult	leak_demo/Catch2/third_party/clara.hpp	/^    class BasicResult : public ResultValueBase<T> {$/;"	c	namespace:clara::detail
BeforeExit	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        BeforeExit = 2,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeExit	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        BeforeExit = 2,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStart	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        BeforeStart = 1,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStart	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        BeforeStart = 1,$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStartAndExit	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        BeforeStartAndExit = BeforeStart | BeforeExit$/;"	e	enum:Catch::WaitForKeypress::When
BeforeStartAndExit	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        BeforeStartAndExit = BeforeStart | BeforeExit$/;"	e	enum:Catch::WaitForKeypress::When
Begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        const_iterator Begin() const { return m_elements.begin(); }$/;"	f	class:unrelated::needs_ADL_begin
Benchmark	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            Benchmark(std::string&& benchmarkName , FUN &&func)$/;"	f	struct:Catch::Benchmark::Benchmark
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            Benchmark(std::string&& benchmarkName)$/;"	f	struct:Catch::Benchmark::Benchmark
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^        struct Benchmark {$/;"	s	namespace:Catch::Benchmark
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_clock.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_measure.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^    namespace Benchmark {$/;"	n	namespace:Catch	file:
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	/^    namespace Benchmark {$/;"	n	namespace:Catch
Benchmark	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        Benchmark = 1 << 6$/;"	m	class:Catch::TestCaseProperties
BenchmarkFunction	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                    BenchmarkFunction(Fun&& fun)$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                BenchmarkFunction()$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                BenchmarkFunction(model<T>* c) : f(c) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            struct BenchmarkFunction {$/;"	s	namespace:Catch::Benchmark::Detail
BenchmarkFunction	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                    BenchmarkFunction(Fun&& fun)$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction()$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction(model<T>* c) : f(c) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction
BenchmarkFunction	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^            struct BenchmarkFunction {$/;"	s	namespace:Catch::Benchmark::Detail
BenchmarkInfo	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct BenchmarkInfo {$/;"	s	namespace:Catch
BenchmarkInfo	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^    struct BenchmarkInfo {$/;"	s	namespace:Catch
BenchmarkStats	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct BenchmarkStats {$/;"	s	namespace:Catch
BenchmarkStats	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^    struct BenchmarkStats {$/;"	s	namespace:Catch
Big	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon111::Endianness::Arch	file:
Big	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon16::Endianness::Arch	file:
Bikeshed	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^namespace Bikeshed {$/;"	n	file:
BinaryExpr	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        constexpr BinaryExpr( bool comparisonResult, LhsT lhs, StringRef op, RhsT rhs )$/;"	f	class:Catch::BinaryExpr
BinaryExpr	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    class BinaryExpr  : public ITransientExpression {$/;"	c	namespace:Catch
Blue	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Blue,$/;"	e	enum:Catch::ColourMode::Code
Boolable	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    explicit Boolable( bool value ) : m_value( value ) {}$/;"	f	struct:Boolable
Boolable	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Boolable$/;"	s	file:
BoundFlagLambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BoundFlagLambda( L const& lambda ):$/;"	f	struct:Catch::Clara::Detail::BoundFlagLambda
BoundFlagLambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <typename L> struct BoundFlagLambda : BoundFlagRefBase {$/;"	s	namespace:Catch::Clara::Detail
BoundFlagLambda	leak_demo/Catch2/third_party/clara.hpp	/^        explicit BoundFlagLambda( L const &lambda ) : m_lambda( lambda ) {}$/;"	f	struct:clara::detail::BoundFlagLambda
BoundFlagLambda	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundFlagLambda : BoundFlagRefBase {$/;"	s	namespace:clara::detail
BoundFlagRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BoundFlagRef( bool& ref ): m_ref( ref ) {}$/;"	f	struct:Catch::Clara::Detail::BoundFlagRef
BoundFlagRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct BoundFlagRef : BoundFlagRefBase {$/;"	s	namespace:Catch::Clara::Detail
BoundFlagRef	leak_demo/Catch2/third_party/clara.hpp	/^        explicit BoundFlagRef( bool &ref ) : m_ref( ref ) {}$/;"	f	struct:clara::detail::BoundFlagRef
BoundFlagRef	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundFlagRef : BoundFlagRefBase {$/;"	s	namespace:clara::detail
BoundFlagRefBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct BoundFlagRefBase : BoundRef {$/;"	s	namespace:Catch::Clara::Detail
BoundFlagRefBase	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundFlagRefBase : BoundRef {$/;"	s	namespace:clara::detail
BoundLambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BoundLambda( L const& lambda ): m_lambda( lambda ) {}$/;"	f	struct:Catch::Clara::Detail::BoundLambda
BoundLambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <typename L> struct BoundLambda : BoundValueRefBase {$/;"	s	namespace:Catch::Clara::Detail
BoundLambda	leak_demo/Catch2/third_party/clara.hpp	/^        explicit BoundLambda( L const &lambda ) : m_lambda( lambda ) {}$/;"	f	struct:clara::detail::BoundLambda
BoundLambda	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundLambda : BoundValueRefBase {$/;"	s	namespace:clara::detail
BoundManyLambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BoundManyLambda( L const& lambda ): BoundLambda<L>( lambda ) {}$/;"	f	struct:Catch::Clara::Detail::BoundManyLambda
BoundManyLambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <typename L> struct BoundManyLambda : BoundLambda<L> {$/;"	s	namespace:Catch::Clara::Detail
BoundRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct BoundRef : Catch::Detail::NonCopyable {$/;"	s	namespace:Catch::Clara::Detail
BoundRef	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundRef : NonCopyable {$/;"	s	namespace:clara::detail
BoundValueRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BoundValueRef( T& ref ): m_ref( ref ) {}$/;"	f	struct:Catch::Clara::Detail::BoundValueRef
BoundValueRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit BoundValueRef( std::vector<T>& ref ): m_ref( ref ) {}$/;"	f	struct:Catch::Clara::Detail::BoundValueRef
BoundValueRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct BoundValueRef<std::vector<T>> : BoundValueRefBase {$/;"	s	namespace:Catch::Clara::Detail
BoundValueRef	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <typename T> struct BoundValueRef : BoundValueRefBase {$/;"	s	namespace:Catch::Clara::Detail
BoundValueRef	leak_demo/Catch2/third_party/clara.hpp	/^        explicit BoundValueRef( T &ref ) : m_ref( ref ) {}$/;"	f	struct:clara::detail::BoundValueRef
BoundValueRef	leak_demo/Catch2/third_party/clara.hpp	/^        explicit BoundValueRef( std::vector<T> &ref ) : m_ref( ref ) {}$/;"	f	struct:clara::detail::BoundValueRef
BoundValueRef	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundValueRef : BoundValueRefBase {$/;"	s	namespace:clara::detail
BoundValueRef	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundValueRef<std::vector<T>> : BoundValueRefBase {$/;"	s	namespace:clara::detail
BoundValueRefBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct BoundValueRefBase : BoundRef {$/;"	s	namespace:Catch::Clara::Detail
BoundValueRefBase	leak_demo/Catch2/third_party/clara.hpp	/^    struct BoundValueRefBase : BoundRef {$/;"	s	namespace:clara::detail
Bright	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Bright = 0x10,$/;"	e	enum:Catch::ColourMode::Code
BrightGreen	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            BrightGreen = Bright | Green,$/;"	e	enum:Catch::ColourMode::Code
BrightRed	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            BrightRed = Bright | Red,$/;"	e	enum:Catch::ColourMode::Code
BrightWhite	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            BrightWhite = Bright | White,$/;"	e	enum:Catch::ColourMode::Code
BrightYellow	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            BrightYellow = Bright | Yellow,$/;"	e	enum:Catch::ColourMode::Code
BuilderSettings	leak_demo/Catch2/.conan/build.py	/^class BuilderSettings(object):$/;"	c
BySectionInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            BySectionInfo( SectionInfo const& other ): m_other( other ) {}$/;"	f	struct:Catch::__anon132::BySectionInfo
BySectionInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        struct BySectionInfo {$/;"	s	namespace:Catch::__anon132	file:
BySectionInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^            BySectionInfo( SectionInfo const& other ): m_other( other ) {}$/;"	f	struct:Catch::__anon4::BySectionInfo
BySectionInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^        struct BySectionInfo {$/;"	s	namespace:Catch::__anon4	file:
CATCH_ALL_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	34;"	d
CATCH_ALL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_all.hpp	23;"	d
CATCH_AMALGAMATED_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	16;"	d
CATCH_ANALYSE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.hpp	11;"	d
CATCH_AND_GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	117;"	d
CATCH_AND_GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	72;"	d
CATCH_AND_THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	121;"	d
CATCH_AND_THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	76;"	d
CATCH_AND_WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	119;"	d
CATCH_AND_WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	74;"	d
CATCH_APPROX_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_approx.hpp	9;"	d
CATCH_ASSERTION_HANDLER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	9;"	d
CATCH_ASSERTION_INFO_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	9;"	d
CATCH_ASSERTION_RESULT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	9;"	d
CATCH_BENCHMARK	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	134;"	d
CATCH_BENCHMARK_ADVANCED	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	136;"	d
CATCH_BENCHMARK_ALL_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	52;"	d
CATCH_BENCHMARK_ALL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark_all.hpp	22;"	d
CATCH_BENCHMARK_FUNCTION_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1379;"	d
CATCH_BENCHMARK_FUNCTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	11;"	d
CATCH_BENCHMARK_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	59;"	d
CATCH_BENCHMARK_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	11;"	d
CATCH_BENCHMARK_STATS_FWD_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	956;"	d
CATCH_BENCHMARK_STATS_FWD_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats_fwd.hpp	9;"	d
CATCH_BENCHMARK_STATS_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1264;"	d
CATCH_BENCHMARK_STATS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	9;"	d
CATCH_BREAK_INTO_DEBUGGER	leak_demo/Catch2/src/catch2/internal/catch_debugger.hpp	61;"	d
CATCH_BREAK_INTO_DEBUGGER	leak_demo/Catch2/tests/ExtraTests/X12-CustomDebugBreakMacro.cpp	19;"	d	file:
CATCH_CAPTURE	leak_demo/Catch2/src/catch2/catch_message.hpp	122;"	d
CATCH_CASE_INSENSITIVE_COMPARISONS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.hpp	9;"	d
CATCH_CASE_SENSITIVE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_case_sensitive.hpp	9;"	d
CATCH_CATCH_ALL	leak_demo/Catch2/extras/catch_amalgamated.hpp	502;"	d
CATCH_CATCH_ALL	leak_demo/Catch2/extras/catch_amalgamated.hpp	506;"	d
CATCH_CATCH_ALL	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	417;"	d
CATCH_CATCH_ALL	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	421;"	d
CATCH_CATCH_ANON	leak_demo/Catch2/extras/catch_amalgamated.hpp	503;"	d
CATCH_CATCH_ANON	leak_demo/Catch2/extras/catch_amalgamated.hpp	507;"	d
CATCH_CATCH_ANON	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	418;"	d
CATCH_CATCH_ANON	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	422;"	d
CATCH_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	33;"	d
CATCH_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	87;"	d
CATCH_CHECKED_ELSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	36;"	d
CATCH_CHECKED_ELSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	90;"	d
CATCH_CHECKED_IF	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	35;"	d
CATCH_CHECKED_IF	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	89;"	d
CATCH_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	34;"	d
CATCH_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	88;"	d
CATCH_CHECK_NOFAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	37;"	d
CATCH_CHECK_NOFAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	91;"	d
CATCH_CHECK_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	41;"	d
CATCH_CHECK_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	95;"	d
CATCH_CHECK_THAT	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	199;"	d
CATCH_CHECK_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	39;"	d
CATCH_CHECK_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	93;"	d
CATCH_CHECK_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	40;"	d
CATCH_CHECK_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	94;"	d
CATCH_CHECK_THROWS_MATCHES	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	197;"	d
CATCH_CHECK_THROWS_WITH	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	196;"	d
CATCH_CHRONOMETER_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1386;"	d
CATCH_CHRONOMETER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	11;"	d
CATCH_CLARA_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	9;"	d
CATCH_CLOCK_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	963;"	d
CATCH_CLOCK_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_clock.hpp	11;"	d
CATCH_COMMANDLINE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_commandline.hpp	9;"	d
CATCH_COMPARE_TRAITS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_compare_traits.hpp	9;"	d
CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	64;"	d
CATCH_COMPILER_CAPABILITIES_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	9;"	d
CATCH_COMPLETE_INVOKE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	11;"	d
CATCH_CONFIG_ANDROID_LOGWRITE	leak_demo/Catch2/src/catch2/internal/catch_config_android_logwrite.hpp	30;"	d
CATCH_CONFIG_ANDROID_LOGWRITE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_config_android_logwrite.hpp	18;"	d
CATCH_CONFIG_COLOUR_WIN32	leak_demo/Catch2/extras/catch_amalgamated.hpp	518;"	d
CATCH_CONFIG_COLOUR_WIN32	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	433;"	d
CATCH_CONFIG_CONSOLE_WIDTH	leak_demo/Catch2/src/catch2/internal/catch_console_width.hpp	16;"	d
CATCH_CONFIG_CONSOLE_WIDTH	leak_demo/build/Catch2/generated-includes/catch2/catch_user_config.hpp	212;"	d
CATCH_CONFIG_COUNTER	leak_demo/Catch2/extras/catch_amalgamated.hpp	649;"	d
CATCH_CONFIG_COUNTER	leak_demo/Catch2/src/catch2/internal/catch_config_counter.hpp	30;"	d
CATCH_CONFIG_COUNTER_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	639;"	d
CATCH_CONFIG_COUNTER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_config_counter.hpp	19;"	d
CATCH_CONFIG_CPP11_TO_STRING	leak_demo/Catch2/extras/catch_amalgamated.hpp	403;"	d
CATCH_CONFIG_CPP11_TO_STRING	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	318;"	d
CATCH_CONFIG_CPP17_BYTE	leak_demo/Catch2/extras/catch_amalgamated.hpp	419;"	d
CATCH_CONFIG_CPP17_BYTE	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	334;"	d
CATCH_CONFIG_CPP17_OPTIONAL	leak_demo/Catch2/extras/catch_amalgamated.hpp	407;"	d
CATCH_CONFIG_CPP17_OPTIONAL	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	322;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	leak_demo/Catch2/extras/catch_amalgamated.hpp	411;"	d
CATCH_CONFIG_CPP17_STRING_VIEW	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	326;"	d
CATCH_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	leak_demo/Catch2/src/catch2/internal/catch_config_uncaught_exceptions.hpp	42;"	d
CATCH_CONFIG_CPP17_VARIANT	leak_demo/Catch2/extras/catch_amalgamated.hpp	415;"	d
CATCH_CONFIG_CPP17_VARIANT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	330;"	d
CATCH_CONFIG_CPP20_COMPARE_OVERLOADS	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	122;"	d
CATCH_CONFIG_DEFAULT_REPORTER	leak_demo/build/Catch2/generated-includes/catch2/catch_user_config.hpp	211;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	leak_demo/Catch2/extras/catch_amalgamated.hpp	434;"	d
CATCH_CONFIG_DISABLE_EXCEPTIONS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	349;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	leak_demo/Catch2/src/catch2/catch_tostring.hpp	366;"	d
CATCH_CONFIG_ENABLE_OPTIONAL_STRINGMAKER	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringOptional.tests.cpp	9;"	d	file:
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	leak_demo/Catch2/src/catch2/catch_tostring.hpp	363;"	d
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	9;"	d	file:
CATCH_CONFIG_ENABLE_PAIR_STRINGMAKER	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringPair.tests.cpp	9;"	d	file:
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	leak_demo/Catch2/src/catch2/catch_tostring.hpp	364;"	d
CATCH_CONFIG_ENABLE_TUPLE_STRINGMAKER	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringTuple.tests.cpp	9;"	d	file:
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	leak_demo/Catch2/src/catch2/catch_tostring.hpp	365;"	d
CATCH_CONFIG_ENABLE_VARIANT_STRINGMAKER	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	9;"	d	file:
CATCH_CONFIG_EXPERIMENTAL_STATIC_ANALYSIS_SUPPORT	leak_demo/Catch2/src/catch2/internal/catch_config_static_analysis_support.hpp	30;"	d
CATCH_CONFIG_GETENV	leak_demo/Catch2/extras/catch_amalgamated.hpp	399;"	d
CATCH_CONFIG_GETENV	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	314;"	d
CATCH_CONFIG_GLOBAL_NEXTAFTER	leak_demo/Catch2/extras/catch_amalgamated.hpp	446;"	d
CATCH_CONFIG_GLOBAL_NEXTAFTER	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	361;"	d
CATCH_CONFIG_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_config.hpp	9;"	d
CATCH_CONFIG_INTERNAL_MSVC_UMUL128	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	25;"	d
CATCH_CONFIG_INTERNAL_UINT128	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	23;"	d
CATCH_CONFIG_MAIN	leak_demo/Catch2/tests/ExtraTests/X12-CustomDebugBreakMacro.cpp	21;"	d	file:
CATCH_CONFIG_MSVC_UMUL128	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	37;"	d
CATCH_CONFIG_NEW_CAPTURE	leak_demo/Catch2/extras/catch_amalgamated.hpp	428;"	d
CATCH_CONFIG_NEW_CAPTURE	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	343;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	leak_demo/Catch2/extras/catch_amalgamated.hpp	379;"	d
CATCH_CONFIG_NO_CPP17_VARIANT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	294;"	d
CATCH_CONFIG_POLYFILL_ISNAN	leak_demo/Catch2/extras/catch_amalgamated.hpp	438;"	d
CATCH_CONFIG_POLYFILL_ISNAN	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	353;"	d
CATCH_CONFIG_POLYFILL_NONMEMBER_CONTAINER_ACCESS	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	28;"	d
CATCH_CONFIG_POLYFILL_NONMEMBER_CONTAINER_ACCESS	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	32;"	d
CATCH_CONFIG_POSIX_SIGNALS	leak_demo/Catch2/extras/catch_amalgamated.hpp	395;"	d
CATCH_CONFIG_POSIX_SIGNALS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	310;"	d
CATCH_CONFIG_PREFIX_MESSAGES	leak_demo/Catch2/src/catch2/internal/catch_config_prefix_messages.hpp	26;"	d
CATCH_CONFIG_PREFIX_MESSAGES_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_config_prefix_messages.hpp	21;"	d
CATCH_CONFIG_STATIC_ANALYSIS_SUPPORT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_config_static_analysis_support.hpp	19;"	d
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	leak_demo/Catch2/extras/catch_amalgamated.hpp	511;"	d
CATCH_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	426;"	d
CATCH_CONFIG_UINT128	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	31;"	d
CATCH_CONFIG_UNCAUGHT_EXCEPTIONS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_config_uncaught_exceptions.hpp	18;"	d
CATCH_CONFIG_USE_ASYNC	leak_demo/Catch2/extras/catch_amalgamated.hpp	442;"	d
CATCH_CONFIG_USE_ASYNC	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	357;"	d
CATCH_CONFIG_WCHAR	leak_demo/Catch2/src/catch2/internal/catch_config_wchar.hpp	32;"	d
CATCH_CONFIG_WCHAR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_config_wchar.hpp	18;"	d
CATCH_CONFIG_WINDOWS_SEH	leak_demo/Catch2/extras/catch_amalgamated.hpp	391;"	d
CATCH_CONFIG_WINDOWS_SEH	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	306;"	d
CATCH_CONSOLE_COLOUR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	9;"	d
CATCH_CONSOLE_WIDTH_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_console_width.hpp	9;"	d
CATCH_CONSTRUCTOR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	11;"	d
CATCH_CONTAINER_NONMEMBERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	9;"	d
CATCH_CONTEXT_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	536;"	d
CATCH_CONTEXT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	9;"	d
CATCH_CPP17_OR_GREATER	leak_demo/Catch2/extras/catch_amalgamated.hpp	118;"	d
CATCH_CPP17_OR_GREATER	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	33;"	d
CATCH_CPP20_OR_GREATER	leak_demo/Catch2/extras/catch_amalgamated.hpp	122;"	d
CATCH_CPP20_OR_GREATER	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	37;"	d
CATCH_DEBUGGER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_debugger.hpp	9;"	d
CATCH_DEBUG_CONSOLE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_debug_console.hpp	9;"	d
CATCH_DECOMPOSER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	9;"	d
CATCH_DEFER	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	39;"	d
CATCH_DEFINE_COMPARABLE_TRAIT	leak_demo/Catch2/src/catch2/internal/catch_compare_traits.hpp	38;"	d
CATCH_DEFINE_COMPARABLE_TRAIT	leak_demo/Catch2/src/catch2/internal/catch_compare_traits.hpp	62;"	d
CATCH_DYNAMIC_SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	102;"	d
CATCH_DYNAMIC_SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	48;"	d
CATCH_EMPTY	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	38;"	d
CATCH_ENFORCE	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	50;"	d
CATCH_ENFORCE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	9;"	d
CATCH_ENUM_VALUES_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.hpp	9;"	d
CATCH_ENVIRONMENT_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1350;"	d
CATCH_ENVIRONMENT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	11;"	d
CATCH_ERRNO_GUARD_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.hpp	9;"	d
CATCH_ERROR	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	44;"	d
CATCH_ESTIMATE_CLOCK_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	11;"	d
CATCH_ESTIMATE_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1271;"	d
CATCH_ESTIMATE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	11;"	d
CATCH_EXCEPTION_TRANSLATOR_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.hpp	9;"	d
CATCH_EXECUTION_PLAN_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1372;"	d
CATCH_EXECUTION_PLAN_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	11;"	d
CATCH_EXPORT	leak_demo/Catch2/extras/catch_amalgamated.hpp	524;"	d
CATCH_EXPORT	leak_demo/Catch2/extras/catch_amalgamated.hpp	526;"	d
CATCH_EXPORT	leak_demo/Catch2/extras/catch_amalgamated.hpp	529;"	d
CATCH_EXPORT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	439;"	d
CATCH_EXPORT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	441;"	d
CATCH_EXPORT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	444;"	d
CATCH_FAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	103;"	d
CATCH_FAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	49;"	d
CATCH_FAIL_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	104;"	d
CATCH_FAIL_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	50;"	d
CATCH_FATAL_CONDITION_HANDLER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	9;"	d
CATCH_FLOATING_POINT_HELPERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.hpp	9;"	d
CATCH_FORWARD	leak_demo/Catch2/extras/catch_amalgamated.hpp	589;"	d
CATCH_FORWARD	leak_demo/Catch2/src/catch2/internal/catch_move_and_forward.hpp	17;"	d
CATCH_GENERATORS_ADAPTERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	9;"	d
CATCH_GENERATORS_ALL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/generators/catch_generators_all.hpp	22;"	d
CATCH_GENERATORS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	9;"	d
CATCH_GENERATORS_RANDOM_HPP_INCLUDED	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	9;"	d
CATCH_GENERATORS_RANGE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	9;"	d
CATCH_GENERATOR_EXCEPTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.hpp	9;"	d
CATCH_GETENV_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_getenv.hpp	9;"	d
CATCH_GET_RANDOM_SEED_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_get_random_seed.hpp	9;"	d
CATCH_GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	116;"	d
CATCH_GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	71;"	d
CATCH_INFO	leak_demo/Catch2/src/catch2/catch_message.hpp	119;"	d
CATCH_INTERFACES_ALL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_all.hpp	23;"	d
CATCH_INTERFACES_CAPTURE_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	666;"	d
CATCH_INTERFACES_CAPTURE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_capture.hpp	9;"	d
CATCH_INTERFACES_CONFIG_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1088;"	d
CATCH_INTERFACES_CONFIG_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	9;"	d
CATCH_INTERFACES_ENUM_VALUES_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	9;"	d
CATCH_INTERFACES_EXCEPTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_exception.hpp	9;"	d
CATCH_INTERFACES_GENERATORTRACKER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	9;"	d
CATCH_INTERFACES_REGISTRY_HUB_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1204;"	d
CATCH_INTERFACES_REGISTRY_HUB_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_registry_hub.hpp	9;"	d
CATCH_INTERFACES_REPORTER_FACTORY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter_factory.hpp	9;"	d
CATCH_INTERFACES_REPORTER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	9;"	d
CATCH_INTERFACES_TAG_ALIAS_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_tag_alias_registry.hpp	9;"	d
CATCH_INTERFACES_TESTCASE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_testcase.hpp	9;"	d
CATCH_INTERFACES_TEST_INVOKER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_test_invoker.hpp	9;"	d
CATCH_INTERNAL_CONFIG_ANDROID_LOGWRITE	leak_demo/Catch2/src/catch2/internal/catch_config_android_logwrite.hpp	23;"	d
CATCH_INTERNAL_CONFIG_COUNTER	leak_demo/Catch2/extras/catch_amalgamated.hpp	643;"	d
CATCH_INTERNAL_CONFIG_COUNTER	leak_demo/Catch2/src/catch2/internal/catch_config_counter.hpp	24;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	leak_demo/Catch2/extras/catch_amalgamated.hpp	368;"	d
CATCH_INTERNAL_CONFIG_CPP17_BYTE	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	283;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	leak_demo/Catch2/extras/catch_amalgamated.hpp	361;"	d
CATCH_INTERNAL_CONFIG_CPP17_OPTIONAL	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	276;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	leak_demo/Catch2/extras/catch_amalgamated.hpp	356;"	d
CATCH_INTERNAL_CONFIG_CPP17_STRING_VIEW	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	271;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	leak_demo/Catch2/src/catch2/internal/catch_config_uncaught_exceptions.hpp	24;"	d
CATCH_INTERNAL_CONFIG_CPP17_UNCAUGHT_EXCEPTIONS	leak_demo/Catch2/src/catch2/internal/catch_config_uncaught_exceptions.hpp	34;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	leak_demo/Catch2/extras/catch_amalgamated.hpp	381;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	leak_demo/Catch2/extras/catch_amalgamated.hpp	384;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	296;"	d
CATCH_INTERNAL_CONFIG_CPP17_VARIANT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	299;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	leak_demo/Catch2/extras/catch_amalgamated.hpp	327;"	d
CATCH_INTERNAL_CONFIG_EXCEPTIONS_ENABLED	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	242;"	d
CATCH_INTERNAL_CONFIG_GETENV	leak_demo/Catch2/extras/catch_amalgamated.hpp	249;"	d
CATCH_INTERNAL_CONFIG_GETENV	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	164;"	d
CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER	leak_demo/Catch2/extras/catch_amalgamated.hpp	349;"	d
CATCH_INTERNAL_CONFIG_GLOBAL_NEXTAFTER	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	264;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	leak_demo/Catch2/extras/catch_amalgamated.hpp	424;"	d
CATCH_INTERNAL_CONFIG_NEW_CAPTURE	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	339;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	leak_demo/Catch2/extras/catch_amalgamated.hpp	344;"	d
CATCH_INTERNAL_CONFIG_NO_ASYNC	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	259;"	d
CATCH_INTERNAL_CONFIG_NO_COLOUR_WIN32	leak_demo/Catch2/extras/catch_amalgamated.hpp	303;"	d
CATCH_INTERNAL_CONFIG_NO_COLOUR_WIN32	leak_demo/Catch2/extras/catch_amalgamated.hpp	345;"	d
CATCH_INTERNAL_CONFIG_NO_COLOUR_WIN32	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	218;"	d
CATCH_INTERNAL_CONFIG_NO_COLOUR_WIN32	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	260;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	leak_demo/Catch2/extras/catch_amalgamated.hpp	255;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	leak_demo/Catch2/extras/catch_amalgamated.hpp	282;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	170;"	d
CATCH_INTERNAL_CONFIG_NO_CPP11_TO_STRING	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	197;"	d
CATCH_INTERNAL_CONFIG_NO_GETENV	leak_demo/Catch2/extras/catch_amalgamated.hpp	247;"	d
CATCH_INTERNAL_CONFIG_NO_GETENV	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	162;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	leak_demo/Catch2/extras/catch_amalgamated.hpp	267;"	d
CATCH_INTERNAL_CONFIG_NO_NEW_CAPTURE	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	182;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	leak_demo/Catch2/extras/catch_amalgamated.hpp	237;"	d
CATCH_INTERNAL_CONFIG_NO_POSIX_SIGNALS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	152;"	d
CATCH_INTERNAL_CONFIG_NO_WCHAR	leak_demo/Catch2/src/catch2/internal/catch_config_wchar.hpp	26;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	leak_demo/Catch2/extras/catch_amalgamated.hpp	261;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	leak_demo/Catch2/extras/catch_amalgamated.hpp	343;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	176;"	d
CATCH_INTERNAL_CONFIG_NO_WINDOWS_SEH	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	258;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	leak_demo/Catch2/extras/catch_amalgamated.hpp	334;"	d
CATCH_INTERNAL_CONFIG_POLYFILL_ISNAN	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	249;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	leak_demo/Catch2/extras/catch_amalgamated.hpp	239;"	d
CATCH_INTERNAL_CONFIG_POSIX_SIGNALS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	154;"	d
CATCH_INTERNAL_CONFIG_STATIC_ANALYSIS_SUPPORT	leak_demo/Catch2/src/catch2/internal/catch_config_static_analysis_support.hpp	24;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	leak_demo/Catch2/extras/catch_amalgamated.hpp	313;"	d
CATCH_INTERNAL_CONFIG_TRADITIONAL_MSVC_PREPROCESSOR	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	228;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	leak_demo/Catch2/extras/catch_amalgamated.hpp	321;"	d
CATCH_INTERNAL_CONFIG_USE_ASYNC	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	236;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	leak_demo/Catch2/extras/catch_amalgamated.hpp	305;"	d
CATCH_INTERNAL_CONFIG_WINDOWS_SEH	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	220;"	d
CATCH_INTERNAL_DEFINE_EXPRESSION_COMPARISON_OPERATOR	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	330;"	d
CATCH_INTERNAL_DEFINE_EXPRESSION_COMPARISON_OPERATOR	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	379;"	d
CATCH_INTERNAL_DEFINE_EXPRESSION_EQUALITY_OPERATOR	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	276;"	d
CATCH_INTERNAL_DEFINE_EXPRESSION_EQUALITY_OPERATOR	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	327;"	d
CATCH_INTERNAL_DEFINE_EXPRESSION_OPERATOR	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	382;"	d
CATCH_INTERNAL_DEFINE_EXPRESSION_OPERATOR	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	403;"	d
CATCH_INTERNAL_ERROR	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	41;"	d
CATCH_INTERNAL_GENERATOR_STRINGIZE	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	229;"	d
CATCH_INTERNAL_GENERATOR_STRINGIZE_IMPL	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	228;"	d
CATCH_INTERNAL_HAS_ISATTY	leak_demo/Catch2/extras/catch_amalgamated.cpp	3511;"	d	file:
CATCH_INTERNAL_HAS_ISATTY	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	165;"	d	file:
CATCH_INTERNAL_IGNORE_BUT_WARN	leak_demo/Catch2/extras/catch_amalgamated.hpp	150;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	leak_demo/Catch2/extras/catch_amalgamated.hpp	199;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	leak_demo/Catch2/extras/catch_amalgamated.hpp	490;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	114;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	405;"	d
CATCH_INTERNAL_IGNORE_BUT_WARN	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	65;"	d
CATCH_INTERNAL_LINEINFO	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	34;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	130;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	155;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	163;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	175;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	294;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	453;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	209;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	368;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	45;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	70;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	78;"	d
CATCH_INTERNAL_START_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	90;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	131;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	156;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	164;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	176;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	296;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/extras/catch_amalgamated.hpp	456;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	211;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	371;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	46;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	71;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	79;"	d
CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	91;"	d
CATCH_INTERNAL_STRINGIFY	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_internal_stringify.hpp	14;"	d
CATCH_INTERNAL_STRINGIFY	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_internal_stringify.hpp	16;"	d
CATCH_INTERNAL_SUPPRESS_COMMA_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	219;"	d
CATCH_INTERNAL_SUPPRESS_COMMA_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	480;"	d
CATCH_INTERNAL_SUPPRESS_COMMA_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	134;"	d
CATCH_INTERNAL_SUPPRESS_COMMA_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	395;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	203;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	462;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	118;"	d
CATCH_INTERNAL_SUPPRESS_GLOBALS_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	377;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	135;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	207;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	459;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	122;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	374;"	d
CATCH_INTERNAL_SUPPRESS_PARENTHESES_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	50;"	d
CATCH_INTERNAL_SUPPRESS_SHADOW_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	147;"	d
CATCH_INTERNAL_SUPPRESS_SHADOW_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	222;"	d
CATCH_INTERNAL_SUPPRESS_SHADOW_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	483;"	d
CATCH_INTERNAL_SUPPRESS_SHADOW_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	137;"	d
CATCH_INTERNAL_SUPPRESS_SHADOW_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	398;"	d
CATCH_INTERNAL_SUPPRESS_SHADOW_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	62;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_RESULT	leak_demo/Catch2/extras/catch_amalgamated.hpp	138;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_RESULT	leak_demo/Catch2/extras/catch_amalgamated.hpp	465;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_RESULT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	380;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_RESULT	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	53;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	216;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	477;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	494;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	496;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	131;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	392;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	409;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_TEMPLATE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	411;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	141;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	157;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	165;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	167;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	210;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	468;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	125;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	383;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	56;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	72;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	80;"	d
CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	82;"	d
CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	144;"	d
CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	471;"	d
CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	386;"	d
CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	59;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	213;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	leak_demo/Catch2/extras/catch_amalgamated.hpp	474;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	128;"	d
CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	389;"	d
CATCH_ISTREAM_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_istream.hpp	9;"	d
CATCH_IS_PERMUTATION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	9;"	d
CATCH_JSONWRITER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	9;"	d
CATCH_LAZY_EXPR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	9;"	d
CATCH_LEAK_DETECTOR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_leak_detector.hpp	9;"	d
CATCH_LIST_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	9;"	d
CATCH_LOGICAL_TRAITS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_logical_traits.hpp	9;"	d
CATCH_MAKE_MSG	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	38;"	d
CATCH_MATCHERS_ALL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_all.hpp	21;"	d
CATCH_MATCHERS_CONTAINER_PROPERTIES_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	9;"	d
CATCH_MATCHERS_CONTAINS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	9;"	d
CATCH_MATCHERS_EXCEPTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	9;"	d
CATCH_MATCHERS_FLOATING_POINT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	9;"	d
CATCH_MATCHERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	9;"	d
CATCH_MATCHERS_IMPL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	9;"	d
CATCH_MATCHERS_PREDICATE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	9;"	d
CATCH_MATCHERS_QUANTIFIERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	9;"	d
CATCH_MATCHERS_RANGE_EQUALS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	9;"	d
CATCH_MATCHERS_STRING_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	9;"	d
CATCH_MATCHERS_TEMPLATED_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	9;"	d
CATCH_MATCHERS_VECTOR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	9;"	d
CATCH_MEASURE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_measure.hpp	11;"	d
CATCH_MESSAGE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_message.hpp	9;"	d
CATCH_MESSAGE_INFO_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	9;"	d
CATCH_META_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1463;"	d
CATCH_META_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_meta.hpp	9;"	d
CATCH_METHOD_AS_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	45;"	d
CATCH_METHOD_AS_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	99;"	d
CATCH_MOVE	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        m_info( CATCH_MOVE( old.m_info ) ) {$/;"	f	namespace:Catch
CATCH_MOVE	leak_demo/Catch2/extras/catch_amalgamated.hpp	586;"	d
CATCH_MOVE	leak_demo/Catch2/src/catch2/catch_message.cpp	/^        m_info( CATCH_MOVE( old.m_info ) ) {$/;"	f	namespace:Catch
CATCH_MOVE	leak_demo/Catch2/src/catch2/internal/catch_move_and_forward.hpp	14;"	d
CATCH_MOVE_AND_FORWARD_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	581;"	d
CATCH_MOVE_AND_FORWARD_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_move_and_forward.hpp	9;"	d
CATCH_NONCOPYABLE_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1093;"	d
CATCH_NONCOPYABLE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_noncopyable.hpp	9;"	d
CATCH_OPTIMIZER_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1393;"	d
CATCH_OPTIMIZER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	11;"	d
CATCH_OPTIONAL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	9;"	d
CATCH_OUTLIER_CLASSIFICATION_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	1291;"	d
CATCH_OUTLIER_CLASSIFICATION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	11;"	d
CATCH_OUTPUT_REDIRECT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	9;"	d
CATCH_PARSE_NUMBERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_parse_numbers.hpp	9;"	d
CATCH_PLATFORM_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	85;"	d
CATCH_PLATFORM_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	9;"	d
CATCH_PLATFORM_IPHONE	leak_demo/Catch2/extras/catch_amalgamated.hpp	95;"	d
CATCH_PLATFORM_IPHONE	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	22;"	d
CATCH_PLATFORM_LINUX	leak_demo/Catch2/extras/catch_amalgamated.hpp	99;"	d
CATCH_PLATFORM_LINUX	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	26;"	d
CATCH_PLATFORM_MAC	leak_demo/Catch2/extras/catch_amalgamated.hpp	93;"	d
CATCH_PLATFORM_MAC	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	20;"	d
CATCH_PLATFORM_PLAYSTATION	leak_demo/Catch2/extras/catch_amalgamated.hpp	109;"	d
CATCH_PLATFORM_PLAYSTATION	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	36;"	d
CATCH_PLATFORM_WINDOWS	leak_demo/Catch2/extras/catch_amalgamated.hpp	102;"	d
CATCH_PLATFORM_WINDOWS	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	29;"	d
CATCH_PLATFORM_WINDOWS_UWP	leak_demo/Catch2/extras/catch_amalgamated.hpp	105;"	d
CATCH_PLATFORM_WINDOWS_UWP	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	32;"	d
CATCH_POLYFILLS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_polyfills.hpp	9;"	d
CATCH_PREPROCESSOR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	9;"	d
CATCH_PREPROCESSOR_INTERNAL_STRINGIFY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_internal_stringify.hpp	9;"	d
CATCH_PREPROCESSOR_REMOVE_PARENS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_remove_parens.hpp	9;"	d
CATCH_RANDOM_FLOATING_POINT_HELPERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	10;"	d
CATCH_RANDOM_INTEGER_HELPERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	10;"	d
CATCH_RANDOM_NUMBER_GENERATOR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	9;"	d
CATCH_RANDOM_SEED_GENERATION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.hpp	9;"	d
CATCH_RECURSE	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	30;"	d
CATCH_RECURSE	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	32;"	d
CATCH_RECURSION_LEVEL0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	19;"	d
CATCH_RECURSION_LEVEL1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	20;"	d
CATCH_RECURSION_LEVEL2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	21;"	d
CATCH_RECURSION_LEVEL3	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	22;"	d
CATCH_RECURSION_LEVEL4	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	23;"	d
CATCH_RECURSION_LEVEL5	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	24;"	d
CATCH_RECURSION_LEVEL6	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	29;"	d
CATCH_REC_END	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	35;"	d
CATCH_REC_GET_END	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	43;"	d
CATCH_REC_GET_END1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	42;"	d
CATCH_REC_GET_END2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	41;"	d
CATCH_REC_LIST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	61;"	d
CATCH_REC_LIST0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	48;"	d
CATCH_REC_LIST0_UD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	52;"	d
CATCH_REC_LIST1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	49;"	d
CATCH_REC_LIST1_UD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	53;"	d
CATCH_REC_LIST2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	50;"	d
CATCH_REC_LIST2_UD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	54;"	d
CATCH_REC_LIST_UD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	59;"	d
CATCH_REC_NEXT	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	46;"	d
CATCH_REC_NEXT0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	44;"	d
CATCH_REC_NEXT1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	45;"	d
CATCH_REC_OUT	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	36;"	d
CATCH_REGISTER_ENUM	leak_demo/Catch2/src/catch2/catch_tostring.hpp	668;"	d
CATCH_REGISTER_LISTENER	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	115;"	d
CATCH_REGISTER_REPORTER	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	106;"	d
CATCH_REGISTER_TAG_ALIAS	leak_demo/Catch2/src/catch2/catch_tag_alias_autoregistrar.hpp	23;"	d
CATCH_REGISTER_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	100;"	d
CATCH_REGISTER_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	46;"	d
CATCH_REPEAT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	11;"	d
CATCH_REPORTERS_ALL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporters_all.hpp	22;"	d
CATCH_REPORTER_AUTOMAKE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	9;"	d
CATCH_REPORTER_COMMON_BASE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	9;"	d
CATCH_REPORTER_COMPACT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	9;"	d
CATCH_REPORTER_CONSOLE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	9;"	d
CATCH_REPORTER_CUMULATIVE_BASE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	9;"	d
CATCH_REPORTER_EVENT_LISTENER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	9;"	d
CATCH_REPORTER_HELPERS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.hpp	9;"	d
CATCH_REPORTER_JSON_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	10;"	d
CATCH_REPORTER_JUNIT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	9;"	d
CATCH_REPORTER_MULTI_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	9;"	d
CATCH_REPORTER_REGISTRARS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	9;"	d
CATCH_REPORTER_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.hpp	9;"	d
CATCH_REPORTER_SONARQUBE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	9;"	d
CATCH_REPORTER_SPEC_PARSER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	9;"	d
CATCH_REPORTER_STREAMING_BASE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	9;"	d
CATCH_REPORTER_TAP_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	9;"	d
CATCH_REPORTER_TEAMCITY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	9;"	d
CATCH_REPORTER_XML_HPP_INCLUDED	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	9;"	d
CATCH_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	26;"	d
CATCH_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	80;"	d
CATCH_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	27;"	d
CATCH_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	81;"	d
CATCH_REQUIRE_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	31;"	d
CATCH_REQUIRE_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	85;"	d
CATCH_REQUIRE_THAT	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	200;"	d
CATCH_REQUIRE_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	29;"	d
CATCH_REQUIRE_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	83;"	d
CATCH_REQUIRE_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	30;"	d
CATCH_REQUIRE_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	84;"	d
CATCH_REQUIRE_THROWS_MATCHES	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	194;"	d
CATCH_REQUIRE_THROWS_WITH	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	193;"	d
CATCH_RESULT_TYPE_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	792;"	d
CATCH_RESULT_TYPE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	9;"	d
CATCH_REUSABLE_STRING_STREAM_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.hpp	9;"	d
CATCH_RUNTIME_ERROR	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	47;"	d
CATCH_RUN_CONTEXT_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	9;"	d
CATCH_RUN_FOR_AT_LEAST_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	11;"	d
CATCH_SAMPLE_ANALYSIS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	11;"	d
CATCH_SCENARIO	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	114;"	d
CATCH_SCENARIO	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	69;"	d
CATCH_SCENARIO_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	115;"	d
CATCH_SCENARIO_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	70;"	d
CATCH_SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	101;"	d
CATCH_SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	47;"	d
CATCH_SECTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	9;"	d
CATCH_SECTION_INFO_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_section_info.hpp	9;"	d
CATCH_SESSION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_session.hpp	9;"	d
CATCH_SHARDING_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_sharding.hpp	9;"	d
CATCH_SINGLETONS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_singletons.hpp	9;"	d
CATCH_SKIP	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	106;"	d
CATCH_SKIP	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	52;"	d
CATCH_SOURCE_LINE_INFO_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	9;"	d
CATCH_STARTUP_EXCEPTION_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.hpp	9;"	d
CATCH_STATIC_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	110;"	d
CATCH_STATIC_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	58;"	d
CATCH_STATIC_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	63;"	d
CATCH_STATIC_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	111;"	d
CATCH_STATIC_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	59;"	d
CATCH_STATIC_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	64;"	d
CATCH_STATIC_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	108;"	d
CATCH_STATIC_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	56;"	d
CATCH_STATIC_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	61;"	d
CATCH_STATIC_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	109;"	d
CATCH_STATIC_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	57;"	d
CATCH_STATIC_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	62;"	d
CATCH_STATS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	11;"	d
CATCH_STDSTREAMS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_stdstreams.hpp	10;"	d
CATCH_STREAM_END_STOP_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_stream_end_stop.hpp	9;"	d
CATCH_STRINGREF_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	674;"	d
CATCH_STRINGREF_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	9;"	d
CATCH_STRING_MANIP_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_string_manip.hpp	9;"	d
CATCH_SUCCEED	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	105;"	d
CATCH_SUCCEED	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	51;"	d
CATCH_TAG_ALIAS_AUTOREGISTRAR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_tag_alias_autoregistrar.hpp	9;"	d
CATCH_TAG_ALIAS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_tag_alias.hpp	9;"	d
CATCH_TAG_ALIAS_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	9;"	d
CATCH_TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	36;"	d
CATCH_TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	47;"	d
CATCH_TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	70;"	d
CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	37;"	d
CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	48;"	d
CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	71;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	32;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	43;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	66;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	34;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	45;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	68;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	35;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	46;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	69;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	33;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	44;"	d
CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	67;"	d
CATCH_TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	28;"	d
CATCH_TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	39;"	d
CATCH_TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	54;"	d
CATCH_TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	59;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	30;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	41;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	56;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	61;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	31;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	42;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	57;"	d
CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	62;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	29;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	40;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	55;"	d
CATCH_TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	60;"	d
CATCH_TEMPLATE_TEST_MACROS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	9;"	d
CATCH_TEMPLATE_TEST_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	9;"	d
CATCH_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	43;"	d
CATCH_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	97;"	d
CATCH_TEST_CASE_INFO_HASHER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.hpp	9;"	d
CATCH_TEST_CASE_INFO_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	9;"	d
CATCH_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	44;"	d
CATCH_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	98;"	d
CATCH_TEST_CASE_REGISTRY_IMPL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	9;"	d
CATCH_TEST_CASE_TRACKER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	9;"	d
CATCH_TEST_FAILURE_EXCEPTION_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	595;"	d
CATCH_TEST_FAILURE_EXCEPTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.hpp	9;"	d
CATCH_TEST_HELPERS_PARSE_TEST_SPEC_HPP_INCLUDED	leak_demo/Catch2/tests/SelfTest/helpers/parse_test_spec.hpp	10;"	d
CATCH_TEST_HELPERS_RANGE_TEST_HELPERS_HPP_INCLUDED	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	10;"	d
CATCH_TEST_HELPERS_TYPE_WITH_LIT_0_COMPARISONS_HPP_INCLUDED	leak_demo/Catch2/tests/SelfTest/helpers/type_with_lit_0_comparisons.hpp	10;"	d
CATCH_TEST_MACROS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	9;"	d
CATCH_TEST_MACRO_IMPL_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	9;"	d
CATCH_TEST_REGISTRY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	9;"	d
CATCH_TEST_RUN_INFO_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_run_info.hpp	9;"	d
CATCH_TEST_SPEC_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	9;"	d
CATCH_TEST_SPEC_PARSER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	9;"	d
CATCH_TEXTFLOW_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	9;"	d
CATCH_THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	120;"	d
CATCH_THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	75;"	d
CATCH_TIMER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_timer.hpp	9;"	d
CATCH_TIMING_HPP_INCLUDED	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	11;"	d
CATCH_TOSTRING_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_tostring.hpp	9;"	d
CATCH_TOTALS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_totals.hpp	9;"	d
CATCH_TO_STRING_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_to_string.hpp	9;"	d
CATCH_TRANSLATE_EXCEPTION	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	82;"	d
CATCH_TRANSLATE_EXCEPTION	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^CATCH_TRANSLATE_EXCEPTION( CustomException const& ex ) {$/;"	f
CATCH_TRANSLATE_EXCEPTION	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^CATCH_TRANSLATE_EXCEPTION( CustomStdException const& ex ) {$/;"	f
CATCH_TRANSLATE_EXCEPTION	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^CATCH_TRANSLATE_EXCEPTION( double const& ex ) {$/;"	f
CATCH_TRANSLATE_EXCEPTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	9;"	d
CATCH_TRAP	leak_demo/Catch2/src/catch2/internal/catch_debugger.hpp	20;"	d
CATCH_TRY	leak_demo/Catch2/extras/catch_amalgamated.hpp	501;"	d
CATCH_TRY	leak_demo/Catch2/extras/catch_amalgamated.hpp	505;"	d
CATCH_TRY	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	416;"	d
CATCH_TRY	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	420;"	d
CATCH_UNCAUGHT_EXCEPTIONS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_uncaught_exceptions.hpp	9;"	d
CATCH_UNIFORM_FLOATING_POINT_DISTRIBUTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	10;"	d
CATCH_UNIFORM_INTEGER_DISTRIBUTION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	10;"	d
CATCH_UNIQUE_NAME_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	624;"	d
CATCH_UNIQUE_NAME_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_unique_name.hpp	9;"	d
CATCH_UNIQUE_PTR_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.hpp	844;"	d
CATCH_UNIQUE_PTR_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	9;"	d
CATCH_UNSCOPED_INFO	leak_demo/Catch2/src/catch2/catch_message.hpp	120;"	d
CATCH_USER_CONFIG_HPP_INCLUDED	leak_demo/build/Catch2/generated-includes/catch2/catch_user_config.hpp	18;"	d
CATCH_VERSION_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_version.hpp	9;"	d
CATCH_VERSION_MACROS_HPP_INCLUDED	leak_demo/Catch2/src/catch2/catch_version_macros.hpp	9;"	d
CATCH_VERSION_MAJOR	leak_demo/Catch2/src/catch2/catch_version_macros.hpp	11;"	d
CATCH_VERSION_MINOR	leak_demo/Catch2/src/catch2/catch_version_macros.hpp	12;"	d
CATCH_VERSION_PATCH	leak_demo/Catch2/src/catch2/catch_version_macros.hpp	13;"	d
CATCH_VOID_TYPE_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_void_type.hpp	9;"	d
CATCH_WARN	leak_demo/Catch2/src/catch2/catch_message.hpp	121;"	d
CATCH_WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	118;"	d
CATCH_WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	73;"	d
CATCH_WILDCARD_PATTERN_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	9;"	d
CATCH_WINDOWS_H_PROXY_HPP_INCLUDED	leak_demo/Catch2/extras/catch_amalgamated.cpp	20;"	d	file:
CATCH_WINDOWS_H_PROXY_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_windows_h_proxy.hpp	9;"	d
CATCH_XMLWRITER_HPP_INCLUDED	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	9;"	d
CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	132;"	d
CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	185;"	d
CHECKED_ELSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	135;"	d
CHECKED_ELSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	188;"	d
CHECKED_IF	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	134;"	d
CHECKED_IF	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	187;"	d
CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	133;"	d
CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	186;"	d
CHECK_NOFAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	136;"	d
CHECK_NOFAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	189;"	d
CHECK_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	140;"	d
CHECK_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	193;"	d
CHECK_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	138;"	d
CHECK_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	191;"	d
CHECK_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	139;"	d
CHECK_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	192;"	d
CLARA_CONFIG_CONSOLE_WIDTH	leak_demo/Catch2/third_party/clara.hpp	14;"	d
CLARA_CONFIG_OPTIONAL_TYPE	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	27;"	d
CLARA_CONFIG_OPTIONAL_TYPE	leak_demo/Catch2/third_party/clara.hpp	25;"	d
CLARA_HPP_INCLUDED	leak_demo/Catch2/third_party/clara.hpp	11;"	d
CLARA_PLATFORM_WINDOWS	leak_demo/Catch2/third_party/clara.hpp	383;"	d
CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	leak_demo/Catch2/third_party/clara.hpp	18;"	d
CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH	leak_demo/Catch2/third_party/clara.hpp	51;"	d
CLARA_TEXTFLOW_HPP_INCLUDED	leak_demo/Catch2/third_party/clara.hpp	43;"	d
COMPILATION_TEST_DEFINE_UNIVERSAL_OPERATOR	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	283;"	d	file:
COMPILATION_TEST_DEFINE_UNIVERSAL_OPERATOR	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	299;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	198;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	228;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	241;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	339;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	360;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	386;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	404;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	414;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	169;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	192;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	266;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	275;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	290;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	305;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	320;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	396;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
COMPILER_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	336;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	411;"	d	file:
COMPILER_VERSION_INTERNAL	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
COMPILER_VERSION_INTERNAL_STR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_INTERNAL_STR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_INTERNAL_STR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
COMPILER_VERSION_INTERNAL_STR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	243;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	321;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	333;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	350;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	377;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	388;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	407;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	430;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	207;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	269;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	338;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	366;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	399;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	408;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	413;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	81;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	250;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	351;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	436;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	202;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	255;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	329;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	350;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	371;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	400;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	290;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	312;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	418;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	423;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	432;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	437;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	107;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	284;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	311;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	323;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	34;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	385;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	388;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	400;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	392;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	402;"	d	file:
COMPILER_VERSION_TWEAK	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
CXX_STD	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	812;"	d	file:
CXX_STD	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	814;"	d	file:
CXX_STD	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	817;"	d	file:
CXX_STD	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	820;"	d	file:
CXX_STD	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	822;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	832;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	834;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	837;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	839;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	841;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	843;"	d	file:
C_VERSION	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	845;"	d	file:
Capturer	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Capturer::Capturer( StringRef macroName,$/;"	f	class:Catch::Capturer
Capturer	leak_demo/Catch2/src/catch2/catch_message.cpp	/^    Capturer::Capturer( StringRef macroName,$/;"	f	class:Catch::Capturer
Capturer	leak_demo/Catch2/src/catch2/catch_message.hpp	/^    class Capturer {$/;"	c	namespace:Catch
CapturingListener	leak_demo/Catch2/tests/ExtraTests/X25-ListenerCanAskForCapturedStdout.cpp	/^	class CapturingListener : public Catch::EventListenerBase {$/;"	c	namespace:__anon43	file:
CapturingListener	leak_demo/Catch2/tests/ExtraTests/X25-ListenerCanAskForCapturedStdout.cpp	/^        CapturingListener( Catch::IConfig const* config ):$/;"	f	class:__anon43::CapturingListener
CarryBits	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	100;"	d
CarryBits	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	83;"	d
CarryBits	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Integer.tests.cpp	42;"	d	file:
CarryBits	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Integer.tests.cpp	66;"	d	file:
CaseInsensitiveEqualTo	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.hpp	/^        struct CaseInsensitiveEqualTo {$/;"	s	namespace:Catch::Detail
CaseInsensitiveLess	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.hpp	/^        struct CaseInsensitiveLess {$/;"	s	namespace:Catch::Detail
CaseSensitive	leak_demo/Catch2/src/catch2/internal/catch_case_sensitive.hpp	/^    enum class CaseSensitive { Yes, No };$/;"	c	namespace:Catch
CasedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    CasedString::CasedString( std::string const& str, CaseSensitive caseSensitivity )$/;"	f	class:Catch::Matchers::CasedString
CasedString	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    CasedString::CasedString( std::string const& str, CaseSensitive caseSensitivity )$/;"	f	class:Catch::Matchers::CasedString
CasedString	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    struct CasedString {$/;"	s	namespace:Catch::Matchers
Catch	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_clock.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats_fwd.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_measure.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_config.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_config.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_get_random_seed.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_get_random_seed.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_message.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_message.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_session.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_session.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_tag_alias.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_tag_alias_autoregistrar.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_tag_alias_autoregistrar.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_timer.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_timer.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_translate_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/catch_version.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/catch_version.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/generators/catch_generators.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_capture.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_capture.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_exception.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_registry_hub.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_registry_hub.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter_factory.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter_factory.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_tag_alias_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_test_invoker.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_testcase.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_testcase.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_case_sensitive.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_commandline.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_commandline.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_compare_traits.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_debug_console.cpp	/^    namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_debug_console.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_debugger.cpp	/^    namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_debugger.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_decomposer.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_enforce.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_getenv.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_getenv.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_istream.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_leak_detector.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_leak_detector.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_logical_traits.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_main.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_message_info.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_meta.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_noncopyable.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_parse_numbers.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_parse_numbers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_polyfills.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_result_type.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_section.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_sharding.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_singletons.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_singletons.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_stdstreams.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_stdstreams.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_stream_end_stop.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_string_manip.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_stringref.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_registry.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_run_info.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_to_string.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_uncaught_exceptions.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_uncaught_exceptions.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_void_type.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^namespace Catch$/;"	n
Catch	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/tests/ExtraTests/X04-DisabledExceptions-CustomHandler.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/tests/SelfTest/helpers/parse_test_spec.cpp	/^namespace Catch {$/;"	n	file:
Catch	leak_demo/Catch2/tests/SelfTest/helpers/parse_test_spec.hpp	/^namespace Catch {$/;"	n
Catch	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^namespace Catch {$/;"	n
CatchConan	leak_demo/Catch2/conanfile.py	/^class CatchConan(ConanFile):$/;"	c
Catch_global_namespace_dummy	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^struct Catch_global_namespace_dummy{};$/;"	s
CerrStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            CerrStream(): m_os( Catch::cerr().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anon119::CerrStream
CerrStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class CerrStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon119	file:
CerrStream	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            CerrStream(): m_os( Catch::cerr().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anon30::CerrStream
CerrStream	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^        class CerrStream : public IStream {$/;"	c	namespace:Catch::Detail::__anon30	file:
CheckedTestingGenericMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct CheckedTestingGenericMatcher : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
CheckedTestingMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct CheckedTestingMatcher : Catch::Matchers::MatcherBase<int> {$/;"	s	file:
Chronometer	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            Chronometer(Detail::ChronometerConcept& meter, int repeats_)$/;"	f	struct:Catch::Benchmark::Chronometer
Chronometer	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        struct Chronometer {$/;"	s	namespace:Catch::Benchmark
Chronometer	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            Chronometer(Detail::ChronometerConcept& meter, int repeats_)$/;"	f	struct:Catch::Benchmark::Chronometer
Chronometer	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^        struct Chronometer {$/;"	s	namespace:Catch::Benchmark
ChronometerConcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            struct ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
ChronometerConcept	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            struct ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
ChunkGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        ChunkGenerator(size_t size, GeneratorWrapper<T> generator) :$/;"	f	class:Catch::Generators::final
Clara	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Clara {$/;"	n	namespace:Catch	file:
Clara	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^    namespace Clara {$/;"	n	namespace:Catch	file:
Clara	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^    namespace Clara {$/;"	n	namespace:Catch
ClassName	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^class ClassName {};$/;"	c	file:
Code	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^        enum Code {$/;"	g	class:Catch::ColourMode
ColourGuard	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl::ColourGuard::ColourGuard( Colour::Code code,$/;"	f	class:Catch::ColourImpl::ColourGuard
ColourGuard	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    ColourImpl::ColourGuard::ColourGuard( Colour::Code code,$/;"	f	class:Catch::ColourImpl::ColourGuard
ColourGuard	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^        class ColourGuard {$/;"	c	class:Catch::ColourImpl
ColourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^        ColourImpl( IStream* stream ): m_stream( stream ) {}$/;"	f	class:Catch::ColourImpl
ColourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^    class ColourImpl {$/;"	c	namespace:Catch
ColourMode	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    enum class ColourMode : std::uint8_t {$/;"	c	namespace:Catch
ColourMode	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    enum class ColourMode : std::uint8_t {$/;"	c	namespace:Catch
ColourMode	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    enum class ColourMode : std::uint8_t;$/;"	c	namespace:Catch
ColourMode	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^    enum class ColourMode : std::uint8_t;$/;"	c	namespace:Catch
ColourMode	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^    enum class ColourMode : std::uint8_t;$/;"	c	namespace:Catch
Colours	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	c	namespace:Bikeshed	file:
Column	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            explicit Column( std::string const& text ): m_string( text ) {}$/;"	f	class:Catch::TextFlow::Column
Column	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            explicit Column( std::string&& text ):$/;"	f	class:Catch::TextFlow::Column
Column	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^        class Column {$/;"	c	namespace:Catch::TextFlow
Column	leak_demo/Catch2/third_party/clara.hpp	/^        explicit Column( std::string const& text ) { m_strings.push_back( text ); }$/;"	f	class:clara::TextFlow::Column
Column	leak_demo/Catch2/third_party/clara.hpp	/^    class Column {$/;"	c	namespace:clara::TextFlow
ColumnBreak	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^struct ColumnBreak {};$/;"	s	namespace:Catch::__anon131	file:
ColumnBreak	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^struct ColumnBreak {};$/;"	s	namespace:Catch::__anon12	file:
ColumnInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^struct ColumnInfo {$/;"	s	namespace:Catch	file:
ColumnInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^struct ColumnInfo {$/;"	s	namespace:Catch	file:
Columns	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^        class Columns {$/;"	c	namespace:Catch::TextFlow
Columns	leak_demo/Catch2/third_party/clara.hpp	/^        auto operator + ( Column const& other ) -> Columns;$/;"	m	class:clara::TextFlow::Column
Columns	leak_demo/Catch2/third_party/clara.hpp	/^    class Columns {$/;"	c	namespace:clara::TextFlow
CommutativeMultCheck	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Integer.tests.cpp	/^    CommutativeMultCheck( Int a, Int b, Int upper_result, Int lower_result ) {$/;"	f	namespace:__anon87
CompleteInvoker	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteInvoker {$/;"	s	namespace:Catch::Benchmark::Detail
CompleteInvoker	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteInvoker<void> {$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType { using type = T; };$/;"	s	namespace:Catch::Benchmark::Detail
CompleteType	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	namespace:Catch::Benchmark::Detail
CompletedCycle	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            CompletedCycle$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
CompletedSuccessfully	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            CompletedSuccessfully,$/;"	e	enum:Catch::TestCaseTracking::ITracker::CycleState
ComposableParserImpl	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class ComposableParserImpl : public ParserBase {$/;"	c	namespace:Catch::Clara::Detail
ComposableParserImpl	leak_demo/Catch2/third_party/clara.hpp	/^    class ComposableParserImpl : public ParserBase {$/;"	c	namespace:clara::detail
Config	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Config::Config( ConfigData const& data ):$/;"	f	class:Catch::Config
Config	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    Config::Config( ConfigData const& data ):$/;"	f	class:Catch::Config
Config	leak_demo/Catch2/src/catch2/catch_config.hpp	/^    class Config : public IConfig {$/;"	c	namespace:Catch
ConfigData	leak_demo/Catch2/src/catch2/catch_config.hpp	/^    struct ConfigData {$/;"	s	namespace:Catch
ConsoleAssertionPrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ConsoleAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, ColourImpl* colourImpl_, bool _printInfoMessages)$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter
ConsoleAssertionPrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^class ConsoleAssertionPrinter {$/;"	c	namespace:Catch::__anon131	file:
ConsoleAssertionPrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    ConsoleAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, ColourImpl* colourImpl_, bool _printInfoMessages)$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter
ConsoleAssertionPrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^class ConsoleAssertionPrinter {$/;"	c	namespace:Catch::__anon12	file:
ConsoleReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^ConsoleReporter::ConsoleReporter(ReporterConfig&& config):$/;"	f	class:Catch::ConsoleReporter
ConsoleReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^ConsoleReporter::ConsoleReporter(ReporterConfig&& config):$/;"	f	class:Catch::ConsoleReporter
ContainerIsRandomAccess	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^static constexpr bool ContainerIsRandomAccess( const Container& ) {$/;"	f	file:
Contains	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^        ContainsElementMatcher<T, Equality> Contains(T&& elem, Equality&& eq) {$/;"	f	namespace:Catch::Matchers
Contains	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^        ContainsElementMatcher<T, std::equal_to<>>> Contains(T&& elem) {$/;"	f	namespace:Catch::Matchers
Contains	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^        ContainsMatcherMatcher<Matcher>> Contains(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
Contains	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    ContainsMatcher<T, AllocComp, AllocMatch> Contains( std::vector<T, AllocComp> const& comparator ) {$/;"	f	namespace:Catch::Matchers
ContainsElementMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            ContainsElementMatcher(T2&& target, Equality2&& predicate):$/;"	f	class:Catch::Matchers::final
ContainsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        ContainsMatcher(std::vector<T, AllocComp> const& comparator):$/;"	f	class:Catch::Matchers::final
ContainsMatcherMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            ContainsMatcherMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
ContainsSubstring	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringContainsMatcher ContainsSubstring( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
ContainsSubstring	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StringContainsMatcher ContainsSubstring( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Context	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class Context {$/;"	c	namespace:Catch
Context	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^    class Context {$/;"	c	namespace:Catch
ContinueOnFailure	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ContinueOnFailure	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        ContinueOnFailure = 0x02,   \/\/ Failures fail test, but execution continues$/;"	e	enum:Catch::ResultDisposition::Flags
ConvertibleToBool	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    struct ConvertibleToBool$/;"	s	namespace:__anon51	file:
Counts	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^    struct Counts {$/;"	s	namespace:Catch
CoutStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            CoutStream() : m_os( Catch::cout().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anon119::final
CoutStream	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            CoutStream() : m_os( Catch::cout().rdbuf() ) {}$/;"	f	class:Catch::Detail::__anon30::final
CumulativeBenchmarkReporter	leak_demo/Catch2/tests/ExtraTests/X22-BenchmarksInCumulativeReporter.cpp	/^    CumulativeBenchmarkReporter(Catch::ReporterConfig&& _config) :$/;"	f	class:final
CumulativeReporterBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        CumulativeReporterBase(ReporterConfig&& _config):$/;"	f	class:Catch::CumulativeReporterBase
CumulativeReporterBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^    class CumulativeReporterBase : public ReporterBase {$/;"	c	namespace:Catch
Custom	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Json.tests.cpp	/^    struct Custom {};$/;"	s	namespace:__anon80	file:
CustomAllocator	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    CustomAllocator( const CustomAllocator& other ):$/;"	f	struct:CustomAllocator
CustomAllocator	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    template <typename U> CustomAllocator( const CustomAllocator<U>& ) {}$/;"	f	struct:CustomAllocator
CustomAllocator	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^template <typename T> struct CustomAllocator : private std::allocator<T> {$/;"	s	file:
CustomException	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        explicit CustomException(const std::string& msg)$/;"	f	class:__anon71::CustomException
CustomException	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^    class CustomException {$/;"	c	namespace:__anon71	file:
CustomStdException	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        explicit CustomStdException(const std::string& msg)$/;"	f	class:__anon71::CustomStdException
CustomStdException	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^    class CustomStdException : public std::exception {$/;"	c	namespace:__anon71	file:
CustomStringifyGenerator	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    class CustomStringifyGenerator$/;"	c	namespace:__anon94	file:
Cyan	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Cyan,$/;"	e	enum:Catch::ColourMode::Code
CycleState	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        enum CycleState {$/;"	g	class:Catch::TestCaseTracking::ITracker
DBConnection	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^class DBConnection$/;"	c	file:
DEC	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	749;"	d	file:
DEC	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	728;"	d	file:
DEFINE_COMP_OP	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	352;"	d	file:
DEFINE_COMP_OP	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	369;"	d	file:
DEFINE_COMP_OP	leak_demo/Catch2/tests/SelfTest/helpers/type_with_lit_0_comparisons.hpp	29;"	d
DEFINE_COMP_OP	leak_demo/Catch2/tests/SelfTest/helpers/type_with_lit_0_comparisons.hpp	46;"	d
DYNAMIC_SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	147;"	d
DYNAMIC_SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	200;"	d
Data	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^struct Data { std::string str; size_t len; };$/;"	s	file:
DebugOutStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            DebugOutStream()$/;"	f	class:Catch::Detail::__anon119::final
DebugOutStream	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            DebugOutStream()$/;"	f	class:Catch::Detail::__anon30::final
Declared	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Declared,$/;"	m	class:Catch::TestRunOrder
Declared	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Declared,$/;"	m	class:Catch::TestRunOrder
Decomposer	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    struct Decomposer {$/;"	s	namespace:Catch
DefaultForReporter	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        DefaultForReporter,$/;"	m	class:Catch::ShowDurations
DefaultForReporter	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        DefaultForReporter,$/;"	m	class:Catch::ShowDurations
DerivedException	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    struct DerivedException : std::exception {$/;"	s	namespace:__anon75	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Generators	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
Detail	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_measure.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark	file:
Detail	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Benchmark
Detail	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/catch_translate_exception.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/generators/catch_generators.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators	file:
Detail	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators
Detail	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Generators	file:
Detail	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^namespace Detail {$/;"	n	namespace:Catch::Generators
Detail	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        namespace Detail {$/;"	n	namespace:Catch::Clara
Detail	leak_demo/Catch2/src/catch2/internal/catch_compare_traits.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_getenv.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_getenv.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_logical_traits.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_noncopyable.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/internal/catch_void_type.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers
Detail	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
Detail	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers
Detail	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^namespace Detail {$/;"	n	namespace:Catch::Matchers
Detail	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.cpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers	file:
Detail	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^    namespace Detail {$/;"	n	namespace:Catch::Matchers
Detail	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
Detail	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.cpp	/^    namespace Detail {$/;"	n	namespace:Catch	file:
Detail	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^    namespace Detail {$/;"	n	namespace:Catch
DidntThrowException	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
DidntThrowException	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        DidntThrowException = Exception | 2,$/;"	e	enum:Catch::ResultWas::OfType
Digits	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	101;"	d
Digits	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	84;"	d
Digits	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Integer.tests.cpp	43;"	d	file:
Digits	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Integer.tests.cpp	67;"	d	file:
DistanceTypePicker	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	/^        struct DistanceTypePicker<double> {$/;"	s	namespace:Catch::Detail
DistanceTypePicker	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	/^        struct DistanceTypePicker<float> {$/;"	s	namespace:Catch::Detail
Duration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    explicit Duration(double inNanoseconds, Unit units = Unit::Auto)$/;"	f	class:Catch::__anon131::Duration
Duration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^class Duration {$/;"	c	namespace:Catch::__anon131	file:
Duration	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    explicit Duration(double inNanoseconds, Unit units = Unit::Auto)$/;"	f	class:Catch::__anon12::Duration
Duration	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^class Duration {$/;"	c	namespace:Catch::__anon12	file:
Empty	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        bool Empty() const { return true; }$/;"	f	struct:unrelated::ADL_empty
End	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        const_iterator End() const { return m_elements.end(); }$/;"	f	class:unrelated::needs_ADL_begin
EndTag	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                struct EndTag {};$/;"	s	class:Catch::TextFlow::Column::const_iterator
EndTag	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                struct EndTag {};$/;"	s	class:Catch::TextFlow::Columns::iterator
EndTag	leak_demo/Catch2/third_party/clara.hpp	/^            struct EndTag {};$/;"	s	class:clara::TextFlow::Columns::iterator
Endianness	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        struct Endianness {$/;"	s	namespace:Catch::Detail::__anon111	file:
Endianness	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^        struct Endianness {$/;"	s	namespace:Catch::Detail::__anon16	file:
EndsWith	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    EndsWithMatcher EndsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
EndsWith	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    EndsWithMatcher EndsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
EndsWithMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    EndsWithMatcher::EndsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "ends with"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::EndsWithMatcher
EndsWithMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    EndsWithMatcher::EndsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "ends with"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::EndsWithMatcher
Enum1	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum1 { Enum1Value0, Enum1Value1 };$/;"	g	namespace:__anon73	file:
Enum1Value0	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum1 { Enum1Value0, Enum1Value1 };$/;"	e	enum:__anon73::Enum1	file:
Enum1Value1	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum1 { Enum1Value0, Enum1Value1 };$/;"	e	enum:__anon73::Enum1	file:
Enum2	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum2 { Enum2Value0, Enum2Value1 };$/;"	g	namespace:__anon73	file:
Enum2Value0	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum2 { Enum2Value0, Enum2Value1 };$/;"	e	enum:__anon73::Enum2	file:
Enum2Value1	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum Enum2 { Enum2Value0, Enum2Value1 };$/;"	e	enum:__anon73::Enum2	file:
EnumBitFieldTests	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace EnumBitFieldTests$/;"	n	file:
EnumClass1	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass1 { EnumClass1Value0, EnumClass1Value1 };$/;"	c	namespace:__anon74	file:
EnumClass1Value0	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass1 { EnumClass1Value0, EnumClass1Value1 };$/;"	m	class:__anon74::EnumClass1	file:
EnumClass2	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass2 { EnumClass2Value0, EnumClass2Value1 };$/;"	c	namespace:__anon74	file:
EnumClass2Value0	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass2 { EnumClass2Value0, EnumClass2Value1 };$/;"	m	class:__anon74::EnumClass2	file:
EnumClass3	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	c	file:
EnumClass3	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	c	file:
EnumInfo	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^        struct EnumInfo {$/;"	s	namespace:Catch::Detail
EnumValuesRegistry	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.hpp	/^        class EnumValuesRegistry : public IMutableEnumValuesRegistry {$/;"	c	namespace:Catch::Detail
Environment	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        struct Environment {$/;"	s	namespace:Catch::Benchmark
Environment	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^        struct Environment {$/;"	s	namespace:Catch::Benchmark
EnvironmentEstimate	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        struct EnvironmentEstimate {$/;"	s	namespace:Catch::Benchmark
EnvironmentEstimate	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^        struct EnvironmentEstimate {$/;"	s	namespace:Catch::Benchmark
Equals	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringEqualsMatcher Equals( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Equals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StringEqualsMatcher Equals( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
Equals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    EqualsMatcher<T, AllocComp, AllocMatch> Equals( std::vector<T, AllocComp> const& comparator ) {$/;"	f	namespace:Catch::Matchers
EqualsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        EqualsMatcher(std::vector<T, AllocComp> const& comparator):$/;"	f	class:Catch::Matchers::final
EqualsRangeMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    EqualsRangeMatcher( Range const& range ): m_range{ range } {}$/;"	f	struct:EqualsRangeMatcher
EqualsRangeMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct EqualsRangeMatcher : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
ErrnoGuard	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        ErrnoGuard::ErrnoGuard():m_oldErrno(errno){}$/;"	f	class:Catch::ErrnoGuard
ErrnoGuard	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.cpp	/^        ErrnoGuard::ErrnoGuard():m_oldErrno(errno){}$/;"	f	class:Catch::ErrnoGuard
ErrnoGuard	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.hpp	/^    class ErrnoGuard {$/;"	c	namespace:Catch
Error	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Error = BrightRed,$/;"	e	enum:Catch::ColourMode::Code
EscapedName	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
Estimate	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        struct Estimate {$/;"	s	namespace:Catch::Benchmark
Estimate	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^        struct Estimate {$/;"	s	namespace:Catch::Benchmark
EventCounter	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    struct EventCounter {$/;"	s	class:ValidatingTestListener	file:
EventListenerBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^    class EventListenerBase : public IEventListener {$/;"	c	namespace:Catch
EventListenerFactory	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter_factory.hpp	/^    class EventListenerFactory {$/;"	c	namespace:Catch
EvilAddressOfOperatorUsed	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct EvilAddressOfOperatorUsed : std::exception {$/;"	s	file:
EvilCommaOperatorUsed	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct EvilCommaOperatorUsed : std::exception {$/;"	s	file:
EvilMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct EvilMatcher : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
Exception	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
Exception	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        Exception = 0x100 | FailureBit,$/;"	e	enum:Catch::ResultWas::OfType
ExceptionMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^        ExceptionMatcher( int i ): m_expected( i ) {}$/;"	f	class:__anon75::ExceptionMatcher
ExceptionMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    class ExceptionMatcher$/;"	c	namespace:__anon75	file:
ExceptionMessageMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^    ExceptionMessageMatcher(std::string const& message):$/;"	f	class:Catch::Matchers::final
ExceptionMessageMatchesMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^    ExceptionMessageMatchesMatcher( StringMatcherType matcher ):$/;"	f	class:Catch::Matchers::final
ExceptionTranslator	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^            ExceptionTranslator( std::string(*translateFunction)( T const& ) )$/;"	f	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator
ExceptionTranslator	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^        class ExceptionTranslator : public IExceptionTranslator {$/;"	c	class:Catch::ExceptionTranslatorRegistrar
ExceptionTranslatorRegistrar	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^        ExceptionTranslatorRegistrar( std::string(*translateFunction)( T const& ) ) {$/;"	f	class:Catch::ExceptionTranslatorRegistrar
ExceptionTranslatorRegistrar	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^    class ExceptionTranslatorRegistrar {$/;"	c	namespace:Catch
ExceptionTranslatorRegistry	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.hpp	/^    class ExceptionTranslatorRegistry : public IExceptionTranslatorRegistry {$/;"	c	namespace:Catch
ExeName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        ExeName::ExeName() :$/;"	f	class:Catch::Clara::ExeName
ExeName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        ExeName::ExeName(std::string& ref) : ExeName() {$/;"	f	class:Catch::Clara::ExeName
ExeName	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        ExeName::ExeName() :$/;"	f	class:Catch::Clara::ExeName
ExeName	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        ExeName::ExeName(std::string& ref) : ExeName() {$/;"	f	class:Catch::Clara::ExeName
ExeName	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            explicit ExeName(LambdaT const& lambda) : ExeName() {$/;"	f	class:Catch::Clara::ExeName
ExeName	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        class ExeName : public Detail::ComposableParserImpl<ExeName> {$/;"	c	namespace:Catch::Clara
ExeName	leak_demo/Catch2/third_party/clara.hpp	/^        ExeName() : m_name( std::make_shared<std::string>( "<executable>" ) ) {}$/;"	f	class:clara::detail::ExeName
ExeName	leak_demo/Catch2/third_party/clara.hpp	/^        explicit ExeName( LambdaT const& lambda ) : ExeName() {$/;"	f	class:clara::detail::ExeName
ExeName	leak_demo/Catch2/third_party/clara.hpp	/^        explicit ExeName( std::string &ref ) : ExeName() {$/;"	f	class:clara::detail::ExeName
ExeName	leak_demo/Catch2/third_party/clara.hpp	/^    class ExeName : public ComposableParserImpl<ExeName> {$/;"	c	namespace:clara::detail
Executing	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            Executing,$/;"	e	enum:Catch::TestCaseTracking::ITracker::CycleState
Executing	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            Executing,$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
ExecutingChildren	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            ExecutingChildren,$/;"	e	enum:Catch::TestCaseTracking::ITracker::CycleState
ExecutionPlan	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^        struct ExecutionPlan {$/;"	s	namespace:Catch::Benchmark
ExplicitFailure	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitFailure	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        ExplicitFailure = FailureBit | 2,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitSkip	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ExplicitSkip = 4,$/;"	e	enum:Catch::ResultWas::OfType
ExplicitSkip	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        ExplicitSkip = 4,$/;"	e	enum:Catch::ResultWas::OfType
ExprLhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        explicit constexpr ExprLhs( LhsT lhs ) : m_lhs( lhs ) {}$/;"	f	class:Catch::ExprLhs
ExprLhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    class ExprLhs {$/;"	c	namespace:Catch
ExpressionFailed	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExpressionFailed	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        ExpressionFailed = FailureBit | 1,$/;"	e	enum:Catch::ResultWas::OfType
ExtendedMultResult	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^        struct ExtendedMultResult {$/;"	s	namespace:Catch::Detail
FAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	148;"	d
FAIL	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	201;"	d
FAIL_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	149;"	d
FAIL_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	202;"	d
Factorial	leak_demo/Catch2/.conan/test_package/test_package.cpp	/^int Factorial( int number ) {$/;"	f
Factorial	leak_demo/Catch2/examples/010-TestCase.cpp	/^static int Factorial( int number ) {$/;"	f	file:
Factorial	leak_demo/Catch2/examples/020-TestCase-2.cpp	/^static int Factorial( int number ) {$/;"	f	file:
Factorial	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static unsigned int Factorial(unsigned int number) {$/;"	f	namespace:__anon62
Failed	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            Failed$/;"	e	enum:Catch::TestCaseTracking::ITracker::CycleState
FailureBit	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FailureBit	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        FailureBit = 0x10,$/;"	e	enum:Catch::ResultWas::OfType
FalseTest	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FalseTest	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        FalseTest = 0x04,           \/\/ Prefix expression with !$/;"	e	enum:Catch::ResultDisposition::Flags
FatalConditionHandler	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    FatalConditionHandler::FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
FatalConditionHandler	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^    class FatalConditionHandler {$/;"	c	namespace:Catch
FatalConditionHandlerGuard	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^        FatalConditionHandlerGuard(FatalConditionHandler* handler):$/;"	f	class:Catch::FatalConditionHandlerGuard
FatalConditionHandlerGuard	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^    class FatalConditionHandlerGuard {$/;"	c	namespace:Catch
FatalErrorCondition	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
FatalErrorCondition	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        FatalErrorCondition = 0x200 | FailureBit$/;"	e	enum:Catch::ResultWas::OfType
Fibonacci	leak_demo/Catch2/tests/SelfTest/UsageTests/Benchmark.tests.cpp	/^    std::uint64_t Fibonacci(std::uint64_t number) {$/;"	f	namespace:__anon72
FileName	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            FileName = LightGrey,$/;"	e	enum:Catch::ColourMode::Code
FileStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            FileStream( std::string const& filename ) {$/;"	f	class:Catch::Detail::__anon119::final
FileStream	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            FileStream( std::string const& filename ) {$/;"	f	class:Catch::Detail::__anon30::final
Filter	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        struct Filter {$/;"	s	class:Catch::TestSpec
FilterGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        FilterGenerator(P&& pred, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::final
FilterMatch	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        struct FilterMatch {$/;"	s	class:Catch::TestSpec
FixedValuesGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        FixedValuesGenerator( std::initializer_list<T> values ) : m_values( values ) {}$/;"	f	class:Catch::Generators::final
Fixture	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^struct Fixture {$/;"	s	file:
Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^        Fixture(): d_counter( 0 ) {}$/;"	f	struct:__anon52::Fixture
Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^    struct Fixture {$/;"	s	namespace:__anon52	file:
Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        Fixture(): m_a( 1 ) {}$/;"	f	struct:__anon64::Fixture
Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    struct Fixture {$/;"	s	namespace:__anon64	file:
Fixture_1245	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^struct Fixture_1245 {};$/;"	s	file:
Flags	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Flags	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^    struct ResultDisposition { enum Flags {$/;"	g	struct:Catch::ResultDisposition
Float	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Float,$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind	file:
Float	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^        Float,$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind	file:
FloatingPointKind	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    enum class FloatingPointKind : uint8_t {$/;"	c	namespace:Catch::Matchers::Detail	file:
FloatingPointKind	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    enum class FloatingPointKind : uint8_t {$/;"	c	namespace:Catch::Matchers::Detail	file:
FloatingPointKind	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        enum class FloatingPointKind : uint8_t;$/;"	c	namespace:Catch::Matchers::Detail
Foo	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    struct Foo {$/;"	s	namespace:__anon62	file:
ForAttributes	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:Catch::XmlEncode::ForWhat
ForTextNodes	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:Catch::XmlEncode::ForWhat
ForWhat	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	g	class:Catch::XmlEncode
GENERATE	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	231;"	d
GENERATE_COPY	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	235;"	d
GENERATE_REF	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	239;"	d
GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	169;"	d
GIVEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	215;"	d
GenerateFrom	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.hpp	/^    enum class GenerateFrom {$/;"	c	namespace:Catch
GeneratorException	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.hpp	/^        GeneratorException(const char* msg):$/;"	f	class:Catch::GeneratorException
GeneratorException	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.hpp	/^    class GeneratorException : public std::exception {$/;"	c	namespace:Catch
GeneratorTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                GeneratorTracker($/;"	f	struct:Catch::Generators::__anon123::final
GeneratorTracker	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^                GeneratorTracker($/;"	f	struct:Catch::Generators::__anon21::final
GeneratorUntypedBase	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^        class GeneratorUntypedBase {$/;"	c	namespace:Catch::Generators
GeneratorWrapper	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        GeneratorWrapper(GeneratorPtr<T> generator):$/;"	f	class:Catch::Generators::final
GeneratorWrapper	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        GeneratorWrapper(IGenerator<T>* generator):$/;"	f	class:Catch::Generators::final
Generators	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
Generators	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace Generators {$/;"	n	namespace:Catch	file:
Generators	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators.cpp	/^namespace Generators {$/;"	n	namespace:Catch	file:
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        Generators(Gs &&... moreGenerators) {$/;"	f	class:Catch::Generators::Generators
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    class Generators : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_capture.hpp	/^    namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
Generators	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^    namespace Generators {$/;"	n	namespace:Catch
Generators	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    namespace Generators {$/;"	n	namespace:Catch	file:
GetLength	leak_demo/Catch2/examples/302-Gen-Table.cpp	/^    size_t GetLength( const std::string& input ) const { return input.size(); }$/;"	f	struct:TestSubject
Green	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Green,$/;"	e	enum:Catch::ColourMode::Code
Green	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	m	class:Bikeshed::Colours	file:
Grey	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Grey,$/;"	e	enum:Catch::ColourMode::Code
HEX	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	760;"	d	file:
HEX	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	739;"	d	file:
HasBitOperators	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct HasBitOperators {$/;"	s	namespace:__anon57	file:
HasSizeMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^            explicit HasSizeMatcher(std::size_t target_size):$/;"	f	class:Catch::Matchers::final
Headers	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Headers = White$/;"	e	enum:Catch::ColourMode::Code
Help	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Help::Help( bool& showHelpFlag ):$/;"	f	class:Catch::Clara::Help
Help	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Help::Help( bool& showHelpFlag ):$/;"	f	class:Catch::Clara::Help
Help	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        struct Help : Opt {$/;"	s	namespace:Catch::Clara
Help	leak_demo/Catch2/third_party/clara.hpp	/^        Help( bool &showHelpFlag )$/;"	f	struct:clara::detail::Help
Help	leak_demo/Catch2/third_party/clara.hpp	/^    struct Help : Opt {$/;"	s	namespace:clara::detail
HelpColumns	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct HelpColumns {$/;"	s	namespace:Catch::Clara::Detail
HelpColumns	leak_demo/Catch2/third_party/clara.hpp	/^    struct HelpColumns {$/;"	s	namespace:clara::detail
Hidden	leak_demo/Catch2/tests/ExtraTests/X11-DisableStringification.cpp	/^    struct Hidden {};$/;"	s	namespace:__anon44	file:
IConfig	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class IConfig : public Detail::NonCopyable {$/;"	c	namespace:Catch
IConfig	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    class IConfig : public Detail::NonCopyable {$/;"	c	namespace:Catch
ID_VOID_MAIN	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IEventListener	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        IEventListener( IConfig const* config ): m_config( config ) {}$/;"	f	class:Catch::IEventListener
IEventListener	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    class IEventListener {$/;"	c	namespace:Catch
IExceptionTranslator	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_exception.hpp	/^    class IExceptionTranslator {$/;"	c	namespace:Catch
IExceptionTranslatorRegistry	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_exception.hpp	/^    class IExceptionTranslatorRegistry {$/;"	c	namespace:Catch
IGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    class IGenerator : public GeneratorUntypedBase {$/;"	c	namespace:Catch::Generators
IGeneratorTracker	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^    class IGeneratorTracker {$/;"	c	namespace:Catch
IMutableEnumValuesRegistry	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^    class IMutableEnumValuesRegistry {$/;"	c	namespace:Catch
IMutableRegistryHub	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class IMutableRegistryHub {$/;"	c	namespace:Catch
IMutableRegistryHub	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_registry_hub.hpp	/^    class IMutableRegistryHub {$/;"	c	namespace:Catch
INTERNAL_CATCH_BENCHMARK	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	124;"	d
INTERNAL_CATCH_BENCHMARK_ADVANCED	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	128;"	d
INTERNAL_CATCH_CAPTURE	leak_demo/Catch2/src/catch2/catch_message.hpp	101;"	d
INTERNAL_CATCH_CATCH	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	32;"	d
INTERNAL_CATCH_CATCH	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	37;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	223;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	233;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	150;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	151;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	219;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	229;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	194;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	195;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_METHOD_X	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	201;"	d
INTERNAL_CATCH_DECLARE_SIG_TEST_X	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	154;"	d
INTERNAL_CATCH_DEF	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_remove_parens.hpp	13;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	222;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	232;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	158;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	159;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	218;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	228;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	207;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	208;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_METHOD_X	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	211;"	d
INTERNAL_CATCH_DEFINE_SIG_TEST_X	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	162;"	d
INTERNAL_CATCH_DYNAMIC_SECTION	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	51;"	d
INTERNAL_CATCH_ELSE	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	65;"	d
INTERNAL_CATCH_EXPAND1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_remove_parens.hpp	11;"	d
INTERNAL_CATCH_EXPAND2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_remove_parens.hpp	12;"	d
INTERNAL_CATCH_EXPAND_VARGS	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	27;"	d
INTERNAL_CATCH_GET_1_ARG	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	121;"	d
INTERNAL_CATCH_GET_2_ARG	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	122;"	d
INTERNAL_CATCH_IF	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	60;"	d
INTERNAL_CATCH_INFO	leak_demo/Catch2/src/catch2/catch_message.hpp	109;"	d
INTERNAL_CATCH_MAKE_NAMESPACE	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	75;"	d
INTERNAL_CATCH_MAKE_NAMESPACE2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	74;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	79;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	82;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	78;"	d
INTERNAL_CATCH_MAKE_TYPE_LIST2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	81;"	d
INTERNAL_CATCH_MAKE_TYPE_LISTS_FROM_TYPES	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	85;"	d
INTERNAL_CATCH_METHOD_AS_TEST_CASE	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	148;"	d
INTERNAL_CATCH_MSG	leak_demo/Catch2/src/catch2/catch_message.hpp	93;"	d
INTERNAL_CATCH_NOINTERNAL_CATCH_DEF	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_remove_parens.hpp	14;"	d
INTERNAL_CATCH_NO_THROW	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	70;"	d
INTERNAL_CATCH_NTTP_0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	216;"	d
INTERNAL_CATCH_NTTP_0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	226;"	d
INTERNAL_CATCH_NTTP_1	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	135;"	d
INTERNAL_CATCH_NTTP_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	217;"	d
INTERNAL_CATCH_NTTP_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	227;"	d
INTERNAL_CATCH_NTTP_REGISTER	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	173;"	d
INTERNAL_CATCH_NTTP_REGISTER0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	166;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	187;"	d
INTERNAL_CATCH_NTTP_REGISTER_METHOD0	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	180;"	d
INTERNAL_CATCH_NTTP_REG_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	221;"	d
INTERNAL_CATCH_NTTP_REG_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	231;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	220;"	d
INTERNAL_CATCH_NTTP_REG_METHOD_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	230;"	d
INTERNAL_CATCH_REACT	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	41;"	d
INTERNAL_CATCH_REGISTER_ENUM	leak_demo/Catch2/src/catch2/catch_tostring.hpp	658;"	d
INTERNAL_CATCH_REGISTER_TESTCASE	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	163;"	d
INTERNAL_CATCH_REMOVE_PARENS	leak_demo/Catch2/src/catch2/internal/catch_preprocessor_remove_parens.hpp	16;"	d
INTERNAL_CATCH_REMOVE_PARENS_10_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	97;"	d
INTERNAL_CATCH_REMOVE_PARENS_11_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	98;"	d
INTERNAL_CATCH_REMOVE_PARENS_1_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	88;"	d
INTERNAL_CATCH_REMOVE_PARENS_2_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	89;"	d
INTERNAL_CATCH_REMOVE_PARENS_3_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	90;"	d
INTERNAL_CATCH_REMOVE_PARENS_4_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	91;"	d
INTERNAL_CATCH_REMOVE_PARENS_5_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	92;"	d
INTERNAL_CATCH_REMOVE_PARENS_6_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	93;"	d
INTERNAL_CATCH_REMOVE_PARENS_7_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	94;"	d
INTERNAL_CATCH_REMOVE_PARENS_8_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	95;"	d
INTERNAL_CATCH_REMOVE_PARENS_9_ARG	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	96;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	224;"	d
INTERNAL_CATCH_REMOVE_PARENS_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	234;"	d
INTERNAL_CATCH_SECTION	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	43;"	d
INTERNAL_CATCH_STRINGIZE	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	63;"	d
INTERNAL_CATCH_STRINGIZE2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	65;"	d
INTERNAL_CATCH_STRINGIZE2	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	69;"	d
INTERNAL_CATCH_STRINGIZE3	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	70;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	66;"	d
INTERNAL_CATCH_STRINGIZE_WITHOUT_PARENS	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	71;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	198;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	169;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	333;"	d
INTERNAL_CATCH_TEMPLATE_LIST_TEST_CASE_METHOD_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	301;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	154;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	157;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	118;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	286;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	289;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	248;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	294;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	297;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	162;"	d
INTERNAL_CATCH_TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	165;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	103;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	106;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	71;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	233;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	236;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	202;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	53;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	56;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_NO_REGISTRATION_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	28;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	241;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	244;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	61;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_METHOD_SIG_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	64;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	37;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	40;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_NO_REGISTRATION_2	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	26;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	111;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	114;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	45;"	d
INTERNAL_CATCH_TEMPLATE_TEST_CASE_SIG_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_template_test_registry.hpp	48;"	d
INTERNAL_CATCH_TEST	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	44;"	d
INTERNAL_CATCH_TESTCASE	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	88;"	d
INTERNAL_CATCH_TESTCASE2	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	80;"	d
INTERNAL_CATCH_TESTCASE_METHOD_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	67;"	d
INTERNAL_CATCH_TESTCASE_NO_REGISTRATION	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	65;"	d
INTERNAL_CATCH_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	143;"	d
INTERNAL_CATCH_TEST_CASE_METHOD2	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	127;"	d
INTERNAL_CATCH_THROWS	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	87;"	d
INTERNAL_CATCH_THROWS_AS	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	108;"	d
INTERNAL_CATCH_THROWS_MATCHES	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	68;"	d
INTERNAL_CATCH_THROWS_STR_MATCHES	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	135;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	72;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION2	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	64;"	d
INTERNAL_CATCH_TRANSLATE_EXCEPTION_NO_REG	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	75;"	d
INTERNAL_CATCH_TRY	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	31;"	d
INTERNAL_CATCH_TRY	leak_demo/Catch2/src/catch2/internal/catch_test_macro_impl.hpp	36;"	d
INTERNAL_CATCH_TYPE_GEN	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	102;"	d
INTERNAL_CATCH_UNIQUE_NAME	leak_demo/Catch2/extras/catch_amalgamated.hpp	657;"	d
INTERNAL_CATCH_UNIQUE_NAME	leak_demo/Catch2/src/catch2/internal/catch_unique_name.hpp	15;"	d
INTERNAL_CATCH_UNIQUE_NAME	leak_demo/Catch2/src/catch2/internal/catch_unique_name.hpp	17;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	leak_demo/Catch2/extras/catch_amalgamated.hpp	655;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE	leak_demo/Catch2/src/catch2/internal/catch_unique_name.hpp	13;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	leak_demo/Catch2/extras/catch_amalgamated.hpp	654;"	d
INTERNAL_CATCH_UNIQUE_NAME_LINE2	leak_demo/Catch2/src/catch2/internal/catch_unique_name.hpp	12;"	d
INTERNAL_CATCH_UNSCOPED_INFO	leak_demo/Catch2/src/catch2/catch_message.hpp	113;"	d
INTERNAL_CATCH_VA_NARGS_IMPL	leak_demo/Catch2/src/catch2/internal/catch_preprocessor.hpp	100;"	d
INTERNAL_CHECK_THAT	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	57;"	d
IRegistryHub	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class IRegistryHub {$/;"	c	namespace:Catch
IRegistryHub	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_registry_hub.hpp	/^    class IRegistryHub {$/;"	c	namespace:Catch
IReporterFactory	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter_factory.hpp	/^    class IReporterFactory {$/;"	c	namespace:Catch
IResultCapture	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class IResultCapture {$/;"	c	namespace:Catch
IResultCapture	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_capture.hpp	/^    class IResultCapture {$/;"	c	namespace:Catch
ISingleton	leak_demo/Catch2/src/catch2/internal/catch_singletons.hpp	/^    struct ISingleton {$/;"	s	namespace:Catch
IStream	leak_demo/Catch2/src/catch2/internal/catch_istream.hpp	/^    class IStream {$/;"	c	namespace:Catch
ITagAliasRegistry	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_tag_alias_registry.hpp	/^    class ITagAliasRegistry {$/;"	c	namespace:Catch
ITestCaseRegistry	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_testcase.hpp	/^    class ITestCaseRegistry {$/;"	c	namespace:Catch
ITestInvoker	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_test_invoker.hpp	/^    class ITestInvoker {$/;"	c	namespace:Catch
ITracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        ITracker( NameAndLocation&& nameAndLoc, ITracker* parent ):$/;"	f	class:Catch::TestCaseTracking::ITracker
ITracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^    class ITracker {$/;"	c	namespace:Catch::TestCaseTracking
ITransientExpression	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        constexpr ITransientExpression( bool isBinaryExpression, bool result )$/;"	f	class:Catch::ITransientExpression
ITransientExpression	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    class ITransientExpression {$/;"	c	namespace:Catch
ImmovableMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct ImmovableMatcher : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
ImmovableType	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct ImmovableType {$/;"	s	namespace:__anon58	file:
Indent	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        Indent = 0x01,$/;"	m	class:Catch::XmlFormatting
Info	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Info	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        Info = 1,$/;"	e	enum:Catch::ResultWas::OfType
Inner	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^namespace Inner$/;"	n	file:
InternalParseResult	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                    -> InternalParseResult = 0;$/;"	m	class:Catch::Clara::Detail::ParserBase
InternalParseResult	leak_demo/Catch2/third_party/clara.hpp	/^        virtual auto parse( std::string const& exeName, TokenStream const &tokens) const -> InternalParseResult  = 0;$/;"	m	class:clara::detail::ParserBase
IsEmpty	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IsEmptyMatcher IsEmpty() {$/;"	f	namespace:Catch::Matchers
IsEmpty	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.cpp	/^    IsEmptyMatcher IsEmpty() {$/;"	f	namespace:Catch::Matchers
IsHidden	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        IsHidden = 1 << 1,$/;"	m	class:Catch::TestCaseProperties
IsNaN	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^IsNaNMatcher IsNaN() { return IsNaNMatcher(); }$/;"	f	namespace:Catch::Matchers
IsNaN	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^IsNaNMatcher IsNaN() { return IsNaNMatcher(); }$/;"	f	namespace:Catch::Matchers
IsStreamInsertable	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        class IsStreamInsertable {$/;"	c	namespace:Catch::Detail
IteratorGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    IteratorGenerator(InputIterator first, InputSentinel last):m_elems(first, last) {$/;"	f	class:Catch::Generators::final
JsonArrayWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter::JsonArrayWriter( std::ostream& os ):$/;"	f	class:Catch::JsonArrayWriter
JsonArrayWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter::JsonArrayWriter( std::ostream& os,$/;"	f	class:Catch::JsonArrayWriter
JsonArrayWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonArrayWriter::JsonArrayWriter( std::ostream& os ):$/;"	f	class:Catch::JsonArrayWriter
JsonArrayWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonArrayWriter::JsonArrayWriter( std::ostream& os,$/;"	f	class:Catch::JsonArrayWriter
JsonArrayWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^    class JsonArrayWriter {$/;"	c	namespace:Catch
JsonObjectWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter::JsonObjectWriter( std::ostream& os ):$/;"	f	class:Catch::JsonObjectWriter
JsonObjectWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter::JsonObjectWriter( std::ostream& os,$/;"	f	class:Catch::JsonObjectWriter
JsonObjectWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonObjectWriter::JsonObjectWriter( std::ostream& os ):$/;"	f	class:Catch::JsonObjectWriter
JsonObjectWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonObjectWriter::JsonObjectWriter( std::ostream& os,$/;"	f	class:Catch::JsonObjectWriter
JsonObjectWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^    class JsonObjectWriter {$/;"	c	namespace:Catch
JsonReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonReporter::JsonReporter( ReporterConfig&& config ):$/;"	f	class:Catch::JsonReporter
JsonReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    JsonReporter::JsonReporter( ReporterConfig&& config ):$/;"	f	class:Catch::JsonReporter
JsonReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^    class JsonReporter : public StreamingReporterBase {$/;"	c	namespace:Catch
JsonUtils	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^    struct JsonUtils {$/;"	s	namespace:Catch
JsonValueWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonValueWriter::JsonValueWriter( std::ostream& os ):$/;"	f	class:Catch::JsonValueWriter
JsonValueWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonValueWriter::JsonValueWriter( std::ostream& os,$/;"	f	class:Catch::JsonValueWriter
JsonValueWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonValueWriter::JsonValueWriter( std::ostream& os ):$/;"	f	class:Catch::JsonValueWriter
JsonValueWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonValueWriter::JsonValueWriter( std::ostream& os,$/;"	f	class:Catch::JsonValueWriter
JsonValueWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^    class JsonValueWriter {$/;"	c	namespace:Catch
JunitReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JunitReporter::JunitReporter( ReporterConfig&& _config )$/;"	f	class:Catch::JunitReporter
JunitReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    JunitReporter::JunitReporter( ReporterConfig&& _config )$/;"	f	class:Catch::JunitReporter
Justification	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^enum class Justification { Left, Right };$/;"	c	namespace:Catch	file:
Justification	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^enum class Justification { Left, Right };$/;"	c	namespace:Catch	file:
LLVMFuzzerTestOneInput	leak_demo/Catch2/fuzzing/fuzz_TestSpecParser.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	leak_demo/Catch2/fuzzing/fuzz_XmlWriter.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LLVMFuzzerTestOneInput	leak_demo/Catch2/fuzzing/fuzz_textflow.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f
LambdaInvoker	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <> struct LambdaInvoker<void> {$/;"	s	namespace:Catch::Clara::Detail
LambdaInvoker	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <typename ReturnType> struct LambdaInvoker {$/;"	s	namespace:Catch::Clara::Detail
LambdaInvoker	leak_demo/Catch2/third_party/clara.hpp	/^    struct LambdaInvoker {$/;"	s	namespace:clara::detail
LambdaInvoker	leak_demo/Catch2/third_party/clara.hpp	/^    struct LambdaInvoker<void> {$/;"	s	namespace:clara::detail
LazyExpression	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^        LazyExpression( bool isNegated ):$/;"	f	class:Catch::LazyExpression
LazyExpression	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^    class LazyExpression {$/;"	c	namespace:Catch
LeakDetector	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    LeakDetector::LeakDetector() {$/;"	f	class:Catch::LeakDetector
LeakDetector	leak_demo/Catch2/src/catch2/internal/catch_leak_detector.cpp	/^    LeakDetector::LeakDetector() {$/;"	f	class:Catch::LeakDetector
LeakDetector	leak_demo/Catch2/src/catch2/internal/catch_leak_detector.hpp	/^    struct LeakDetector {$/;"	s	namespace:Catch
Left	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^enum class Justification { Left, Right };$/;"	m	class:Catch::Justification	file:
Left	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^enum class Justification { Left, Right };$/;"	m	class:Catch::Justification	file:
LessThanMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        explicit LessThanMatcher(size_t target):$/;"	f	class:__anon50::final
LexicographicallySorted	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        LexicographicallySorted,$/;"	m	class:Catch::TestRunOrder
LexicographicallySorted	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        LexicographicallySorted,$/;"	m	class:Catch::TestRunOrder
LightGrey	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            LightGrey = Bright | Grey,$/;"	e	enum:Catch::ColourMode::Code
LineGenerator	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^    explicit LineGenerator( std::string const& lines ) {$/;"	f	class:__anon102::final
ListenerDescription	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^    struct ListenerDescription {$/;"	s	namespace:Catch
ListenerRegistrar	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^        ListenerRegistrar(StringRef listenerName) {$/;"	f	class:Catch::ListenerRegistrar
ListenerRegistrar	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^    class ListenerRegistrar {$/;"	c	namespace:Catch
Little	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon111::Endianness::Arch	file:
Little	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^            enum Arch { Big, Little };$/;"	e	enum:Catch::Detail::__anon16::Endianness::Arch	file:
LogicError	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                LogicError,  \/\/\/< Error in user-specified arguments for$/;"	m	class:Catch::Clara::Detail::ResultType
LogicError	leak_demo/Catch2/third_party/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:clara::detail::ResultBase::Type
Lt	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    LessThanMatcher Lt(size_t sz) {$/;"	f	namespace:__anon50
METHOD_AS_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	144;"	d
METHOD_AS_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	197;"	d
MapGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        MapGenerator(F2&& function, GeneratorWrapper<U>&& generator) :$/;"	f	class:Catch::Generators::final
MatchAllOfGeneric	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAllOfGeneric(MatcherTs const&... matchers) : m_matchers{ {std::addressof(matchers)...} } {}$/;"	f	class:Catch::Matchers::Detail::final
MatchAllOfGeneric	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            explicit MatchAllOfGeneric(std::array<void const*, sizeof...(MatcherTs)> matchers) : m_matchers{matchers} {}$/;"	f	class:Catch::Matchers::Detail::final
MatchAnyOfGeneric	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAnyOfGeneric(MatcherTs const&... matchers) : m_matchers{ {std::addressof(matchers)...} } {}$/;"	f	class:Catch::Matchers::Detail::final
MatchAnyOfGeneric	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            explicit MatchAnyOfGeneric(std::array<void const*, sizeof...(MatcherTs)> matchers) : m_matchers{matchers} {}$/;"	f	class:Catch::Matchers::Detail::final
MatchExpr	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^        MatchExpr( ArgT && arg, MatcherT const& matcher )$/;"	f	class:Catch::MatchExpr
MatchExpr	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^    class MatchExpr : public ITransientExpression {$/;"	c	namespace:Catch
MatchNotOf	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            explicit MatchNotOf( MatcherBase<ArgT> const& underlyingMatcher ):$/;"	f	class:Catch::Matchers::Detail::final
MatchNotOfGeneric	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            explicit MatchNotOfGeneric(MatcherT const& matcher) : m_matcher{matcher} {}$/;"	f	class:Catch::Matchers::Detail::final
Matched	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Matched,$/;"	m	class:Catch::Clara::ParseResultType
Matched	leak_demo/Catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	m	class:clara::detail::ParseResultType
MatcherA	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct MatcherA : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
MatcherB	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct MatcherB : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
MatcherBase	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^    class MatcherBase : public MatcherUntypedBase {$/;"	c	namespace:Catch::Matchers
MatcherC	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct MatcherC : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
MatcherD	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct MatcherD : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
MatcherGenericBase	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^    class MatcherGenericBase : public MatcherUntypedBase {$/;"	c	namespace:Catch::Matchers
MatcherUntypedBase	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^    class MatcherUntypedBase {$/;"	c	namespace:Catch::Matchers
MatcherWasMovedOrCopied	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct MatcherWasMovedOrCopied : std::exception {$/;"	s	file:
Matchers	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^    namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.cpp	/^namespace Matchers {$/;"	n	namespace:Catch	file:
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^namespace Matchers {$/;"	n	namespace:Catch
Matchers	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^    namespace Matchers {$/;"	n	namespace:Catch
Matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RegexMatcher Matches(std::string const& regex, CaseSensitive caseSensitivity) {$/;"	f	namespace:Catch::Matchers
Matches	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    RegexMatcher Matches(std::string const& regex, CaseSensitive caseSensitivity) {$/;"	f	namespace:Catch::Matchers
MaxExitCode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        const int MaxExitCode = 255;$/;"	m	namespace:Catch::__anon108	file:
MaxExitCode	leak_demo/Catch2/src/catch2/catch_session.cpp	/^        const int MaxExitCode = 255;$/;"	m	namespace:Catch::__anon36	file:
MayFail	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        MayFail = 1 << 3,$/;"	m	class:Catch::TestCaseProperties
Message	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^ExceptionMessageMatcher Message(std::string const& message) {$/;"	f	namespace:Catch::Matchers
Message	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.cpp	/^ExceptionMessageMatcher Message(std::string const& message) {$/;"	f	namespace:Catch::Matchers
MessageBuilder	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        MessageBuilder( StringRef macroName,$/;"	f	struct:Catch::MessageBuilder
MessageBuilder	leak_demo/Catch2/src/catch2/catch_message.hpp	/^    struct MessageBuilder : MessageStream {$/;"	s	namespace:Catch
MessageInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    MessageInfo::MessageInfo(   StringRef _macroName,$/;"	f	class:Catch::MessageInfo
MessageInfo	leak_demo/Catch2/src/catch2/internal/catch_message_info.cpp	/^    MessageInfo::MessageInfo(   StringRef _macroName,$/;"	f	class:Catch::MessageInfo
MessageInfo	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^    struct MessageInfo {$/;"	s	namespace:Catch
MessageMatches	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^MessageMatches( StringMatcherType&& matcher ) {$/;"	f	namespace:Catch::Matchers
MessageStream	leak_demo/Catch2/src/catch2/catch_message.hpp	/^    struct MessageStream {$/;"	s	namespace:Catch
Microseconds	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Microseconds,$/;"	m	class:Catch::__anon131::Duration::Unit	file:
Microseconds	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^        Microseconds,$/;"	m	class:Catch::__anon12::Duration::Unit	file:
Milliseconds	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Milliseconds,$/;"	m	class:Catch::__anon131::Duration::Unit	file:
Milliseconds	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^        Milliseconds,$/;"	m	class:Catch::__anon12::Duration::Unit	file:
MockListener	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        MockListener( std::string witness,$/;"	f	class:__anon98::MockListener
MockListener	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    class MockListener : public Catch::EventListenerBase {$/;"	c	namespace:__anon98	file:
MockReporter	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        MockReporter( std::string witness,$/;"	f	class:__anon98::MockReporter
MockReporter	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    class MockReporter : public Catch::StreamingReporterBase {$/;"	c	namespace:__anon98	file:
Mode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	g	class:Catch::TestSpecParser
MoveChecker	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Details.tests.cpp	/^    struct MoveChecker {$/;"	s	namespace:__anon89	file:
MoveOnlyTestElement	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    MoveOnlyTestElement(int n) :num(n) {}$/;"	f	struct:MoveOnlyTestElement
MoveOnlyTestElement	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^struct MoveOnlyTestElement {$/;"	s	file:
MultipleImplicitConstructors	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        MultipleImplicitConstructors( double ) {}$/;"	f	struct:__anon60::MultipleImplicitConstructors
MultipleImplicitConstructors	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        MultipleImplicitConstructors( int64_t ) {}$/;"	f	struct:__anon60::MultipleImplicitConstructors
MultipleImplicitConstructors	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct MultipleImplicitConstructors {$/;"	s	namespace:__anon60	file:
MyListener	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^struct MyListener : Catch::EventListenerBase {$/;"	s	namespace:__anon103	file:
MyType1	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    [[noreturn]] MyType1(MyType1 const&) { throw 1; }$/;"	f	struct:MyType1
MyType1	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^struct MyType1 {$/;"	s	file:
MyType2	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    [[noreturn]] MyType2(MyType2 const&) { throw 2; }$/;"	f	struct:MyType2
MyType2	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^struct MyType2 {$/;"	s	file:
NOMINMAX	leak_demo/Catch2/extras/catch_amalgamated.cpp	28;"	d	file:
NOMINMAX	leak_demo/Catch2/src/catch2/internal/catch_windows_h_proxy.hpp	18;"	d
NORMAL_MOD	leak_demo_2.0/prog.c	2;"	d	file:
Name	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
NameAndLocation	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    NameAndLocation::NameAndLocation( std::string&& _name, SourceLineInfo const& _location )$/;"	f	class:Catch::TestCaseTracking::NameAndLocation
NameAndLocation	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    NameAndLocation::NameAndLocation( std::string&& _name, SourceLineInfo const& _location )$/;"	f	class:Catch::TestCaseTracking::NameAndLocation
NameAndLocation	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^    struct NameAndLocation {$/;"	s	namespace:Catch::TestCaseTracking
NameAndLocationRef	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        constexpr NameAndLocationRef( StringRef name_,$/;"	f	struct:Catch::TestCaseTracking::NameAndLocationRef
NameAndLocationRef	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^    struct NameAndLocationRef {$/;"	s	namespace:Catch::TestCaseTracking
NameAndTags	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^struct NameAndTags {$/;"	s	namespace:Catch
NamePattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpec::NamePattern::NamePattern( std::string const& name, std::string const& filterString )$/;"	f	class:Catch::TestSpec::NamePattern
NamePattern	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    TestSpec::NamePattern::NamePattern( std::string const& name, std::string const& filterString )$/;"	f	class:Catch::TestSpec::NamePattern
NamePattern	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        class NamePattern : public Pattern {$/;"	c	class:Catch::TestSpec
Nanoseconds	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Nanoseconds,$/;"	m	class:Catch::__anon131::Duration::Unit	file:
Nanoseconds	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^        Nanoseconds,$/;"	m	class:Catch::__anon12::Duration::Unit	file:
NeedsAnotherRun	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            NeedsAnotherRun,$/;"	e	enum:Catch::TestCaseTracking::ITracker::CycleState
Never	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Never,$/;"	e	enum:Catch::WaitForKeypress::When
Never	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Never,$/;"	e	enum:Catch::WaitForKeypress::When
Newline	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        Newline = 0x02,$/;"	m	class:Catch::XmlFormatting
NoAssertions	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        NoAssertions = 0x01,$/;"	e	enum:Catch::WarnAbout::What
NoAssertions	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        NoAssertions = 0x01,$/;"	e	enum:Catch::WarnAbout::What
NoColourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            NoColourImpl( IStream* stream ): ColourImpl( stream ) {}$/;"	f	class:Catch::__anon113::final
NoColourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^            NoColourImpl( IStream* stream ): ColourImpl( stream ) {}$/;"	f	class:Catch::__anon31::final
NoMatch	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            NoMatch,$/;"	m	class:Catch::Clara::ParseResultType
NoMatch	leak_demo/Catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	m	class:clara::detail::ParseResultType
NoWildcard	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^            NoWildcard = 0,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
Node	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            explicit Node( T const& _value ) : value( _value ) {}$/;"	f	struct:Catch::CumulativeReporterBase::Node
Node	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        struct Node {$/;"	s	class:Catch::CumulativeReporterBase
NonCapturingListener	leak_demo/Catch2/tests/ExtraTests/X24-ListenerStdoutCaptureInMultireporter.cpp	/^	class NonCapturingListener : public Catch::EventListenerBase {$/;"	c	namespace:__anon42	file:
NonCapturingListener	leak_demo/Catch2/tests/ExtraTests/X24-ListenerStdoutCaptureInMultireporter.cpp	/^        NonCapturingListener( Catch::IConfig const* config ):$/;"	f	class:__anon42::NonCapturingListener
NonCopyable	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        class NonCopyable {$/;"	c	namespace:Catch::Detail
NonCopyable	leak_demo/Catch2/src/catch2/internal/catch_noncopyable.hpp	/^        class NonCopyable {$/;"	c	namespace:Catch::Detail
NonCopyable	leak_demo/Catch2/third_party/clara.hpp	/^    struct NonCopyable {$/;"	s	namespace:clara::detail
NonCopyableAndNonMovableType	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    auto operator=(NonCopyableAndNonMovableType &&) -> NonCopyableAndNonMovableType & = delete;$/;"	m	struct:NonCopyableAndNonMovableType	file:
NonCopyableAndNonMovableType	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    auto operator=(NonCopyableAndNonMovableType const &) -> NonCopyableAndNonMovableType & = delete;$/;"	m	struct:NonCopyableAndNonMovableType	file:
NonCopyableAndNonMovableType	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^struct NonCopyableAndNonMovableType {$/;"	s	file:
NonDefaultConstructibleType	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^struct NonDefaultConstructibleType {$/;"	s	file:
NonPortable	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        NonPortable = 1 << 5,$/;"	m	class:Catch::TestCaseProperties
None	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        None = 0,$/;"	m	class:Catch::TestCaseProperties
None	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            None = 0,$/;"	e	enum:Catch::ColourMode::Code
None	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
None	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        None = 0x00,$/;"	m	class:Catch::XmlFormatting
NoneMatch	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        NoneMatchMatcher<Matcher> NoneMatch(Matcher&& matcher) {$/;"	f	namespace:Catch::Matchers
NoneMatchMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^            NoneMatchMatcher(Matcher matcher):$/;"	f	class:Catch::Matchers::final
NoneTrue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        NoneTrueMatcher NoneTrue() { return NoneTrueMatcher{}; }$/;"	f	namespace:Catch::Matchers
NoneTrue	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^        NoneTrueMatcher NoneTrue() { return NoneTrueMatcher{}; }$/;"	f	namespace:Catch::Matchers
Normal	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
Normal	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Normal,$/;"	m	class:Catch::Verbosity
Normal	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Normal,$/;"	m	class:Catch::Verbosity
Normal	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        Normal = 0x01,$/;"	e	enum:Catch::ResultDisposition::Flags
NotStarted	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            NotStarted,$/;"	e	enum:Catch::TestCaseTracking::ITracker::CycleState
NotStarted	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^            NotStarted,$/;"	e	enum:Catch::TestCaseTracking::TrackerContext::RunState
Nothing	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Nothing = 0x00,$/;"	e	enum:Catch::WarnAbout::What
Nothing	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Nothing = 0x00,$/;"	e	enum:Catch::WarnAbout::What
Nttp_Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    template <int V> struct Nttp_Fixture { int value = V; };$/;"	s	namespace:__anon64	file:
NullOStream	leak_demo/Catch2/fuzzing/NullOStream.h	/^  NullOStream() : std::ostream(this) {}$/;"	f	class:final
NullStreambuf	leak_demo/Catch2/fuzzing/NullOStream.h	/^class NullStreambuf : public std::streambuf {$/;"	c
Obj	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    Obj():prop(&p){}$/;"	f	struct:Obj
Obj	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Obj$/;"	s	file:
Object	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^            Object,$/;"	m	class:Catch::JsonReporter::Writer
Object	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct Object$/;"	s	namespace:ObjectWithConversions	file:
ObjectStorage	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                ObjectStorage(ObjectStorage&& other)$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
ObjectStorage	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                ObjectStorage(const ObjectStorage& other)$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
ObjectStorage	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^            struct ObjectStorage$/;"	s	namespace:Catch::Benchmark::Detail
ObjectWithConversions	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^namespace ObjectWithConversions$/;"	n	file:
OfType	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
OfType	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^    struct ResultWas { enum OfType {$/;"	g	struct:Catch::ResultWas
Ok	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                Ok,          \/\/\/< No errors$/;"	m	class:Catch::Clara::Detail::ResultType
Ok	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        Ok = 0,$/;"	e	enum:Catch::ResultWas::OfType
Ok	leak_demo/Catch2/third_party/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:clara::detail::ResultBase::Type
Opaque	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^struct Opaque$/;"	s	file:
OperatorException	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct OperatorException : std::exception {$/;"	s	namespace:__anon61	file:
Opt	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Opt::Opt(bool& ref) :$/;"	f	class:Catch::Clara::Opt
Opt	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Opt::Opt(bool& ref) :$/;"	f	class:Catch::Clara::Opt
Opt	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Opt( LambdaT const& ref, StringRef hint ):$/;"	f	class:Catch::Clara::Opt
Opt	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Opt( T& ref, StringRef hint ):$/;"	f	class:Catch::Clara::Opt
Opt	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Opt( accept_many_t, LambdaT const& ref, StringRef hint ):$/;"	f	class:Catch::Clara::Opt
Opt	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            explicit Opt(LambdaT const& ref) :$/;"	f	class:Catch::Clara::Opt
Opt	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        class Opt : public Detail::ParserRefImpl<Opt> {$/;"	c	namespace:Catch::Clara
Opt	leak_demo/Catch2/third_party/clara.hpp	/^        Opt( LambdaT const &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:clara::detail::Opt
Opt	leak_demo/Catch2/third_party/clara.hpp	/^        Opt( T &ref, std::string const &hint ) : ParserRefImpl( ref, hint ) {}$/;"	f	class:clara::detail::Opt
Opt	leak_demo/Catch2/third_party/clara.hpp	/^        explicit Opt( LambdaT const &ref ) : ParserRefImpl( std::make_shared<BoundFlagLambda<LambdaT>>( ref ) ) {}$/;"	f	class:clara::detail::Opt
Opt	leak_demo/Catch2/third_party/clara.hpp	/^        explicit Opt( bool &ref ) : ParserRefImpl( std::make_shared<BoundFlagRef>( ref ) ) {}$/;"	f	class:clara::detail::Opt
Opt	leak_demo/Catch2/third_party/clara.hpp	/^    class Opt : public ParserRefImpl<Opt> {$/;"	c	namespace:clara::detail
Option	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            enum class TokenType { Option, Argument };$/;"	m	class:Catch::Clara::Detail::TokenType
Option	leak_demo/Catch2/third_party/clara.hpp	/^        Option, Argument$/;"	m	class:clara::detail::TokenType
Optional	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            enum class Optionality { Optional, Required };$/;"	m	class:Catch::Clara::Detail::Optionality
Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional( Optional const& _other ):$/;"	f	class:Catch::Optional
Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional( Optional&& _other ):$/;"	f	class:Catch::Optional
Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional( T const& _value ):$/;"	f	class:Catch::Optional
Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional( T&& _value ):$/;"	f	class:Catch::Optional
Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional(): nullableValue( nullptr ) {}$/;"	f	class:Catch::Optional
Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^    class Optional {$/;"	c	namespace:Catch
Optional	leak_demo/Catch2/third_party/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	m	class:clara::detail::Optionality
Optionality	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            enum class Optionality { Optional, Required };$/;"	c	namespace:Catch::Clara::Detail
Optionality	leak_demo/Catch2/third_party/clara.hpp	/^    enum class Optionality { Optional, Required };$/;"	c	namespace:clara::detail
OriginalExpression	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            OriginalExpression = Cyan,$/;"	e	enum:Catch::ColourMode::Code
OutlierClassification	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        struct OutlierClassification {$/;"	s	namespace:Catch::Benchmark
OutlierClassification	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^        struct OutlierClassification {$/;"	s	namespace:Catch::Benchmark
OutputDebugWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        struct OutputDebugWriter {$/;"	s	namespace:Catch::Detail::__anon119	file:
OutputDebugWriter	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^        struct OutputDebugWriter {$/;"	s	namespace:Catch::Detail::__anon30	file:
OutputFlush	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^struct OutputFlush {};$/;"	s	namespace:Catch::__anon131	file:
OutputFlush	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^struct OutputFlush {};$/;"	s	namespace:Catch::__anon12	file:
OutputRedirect	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    OutputRedirect::OutputRedirect(std::string& stdout_dest, std::string& stderr_dest) :$/;"	f	class:Catch::OutputRedirect
OutputRedirect	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    OutputRedirect::OutputRedirect(std::string& stdout_dest, std::string& stderr_dest) :$/;"	f	class:Catch::OutputRedirect
OutputRedirect	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^    class OutputRedirect {$/;"	c	namespace:Catch
PImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            PImpl( long double a, long double b, uint32_t seed ):$/;"	f	struct:Catch::Generators::RandomFloatingGenerator::PImpl
PImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        struct RandomFloatingGenerator<long double>::PImpl {$/;"	s	class:Catch::Generators::RandomFloatingGenerator	file:
PImpl	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^            PImpl( long double a, long double b, uint32_t seed ):$/;"	f	struct:Catch::Generators::RandomFloatingGenerator::PImpl
PImpl	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^        struct RandomFloatingGenerator<long double>::PImpl {$/;"	s	class:Catch::Generators::RandomFloatingGenerator	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	473;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	476;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	479;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	482;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	485;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	488;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	491;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	494;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	497;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	500;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	503;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	506;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	509;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	512;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	515;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	518;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	521;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	527;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	530;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	533;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	536;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	539;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	542;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	545;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	549;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	552;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	558;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	561;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	564;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	569;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	572;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	576;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	579;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	452;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	455;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	458;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	461;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	464;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	467;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	470;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	473;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	476;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	479;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	482;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	485;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	488;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	491;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	494;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	497;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	500;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	503;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	506;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	509;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	512;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	515;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	518;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	521;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	524;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	528;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	531;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	534;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	537;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	540;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	543;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	548;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	551;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	555;"	d	file:
PLATFORM_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
PROGRAM_PATH	leak_demo/simple_test.cpp	/^constexpr const char* PROGRAM_PATH = "\/home\/fedor\/c\/database_binary_and_hash_search\/leak_demo\/prog";$/;"	v
ParseResultType	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        enum class ParseResultType {$/;"	c	namespace:Catch::Clara
ParseResultType	leak_demo/Catch2/third_party/clara.hpp	/^    enum class ParseResultType {$/;"	c	namespace:clara::detail
ParseState	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ParseState::ParseState( ParseResultType type,$/;"	f	class:Catch::Clara::Detail::ParseState
ParseState	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            ParseState::ParseState( ParseResultType type,$/;"	f	class:Catch::Clara::Detail::ParseState
ParseState	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class ParseState {$/;"	c	namespace:Catch::Clara::Detail
ParseState	leak_demo/Catch2/third_party/clara.hpp	/^        ParseState( ParseResultType type, TokenStream const &remainingTokens )$/;"	f	class:clara::detail::ParseState
ParseState	leak_demo/Catch2/third_party/clara.hpp	/^    class ParseState {$/;"	c	namespace:clara::detail
Parser	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                auto operator|( T const& other ) const -> Parser;$/;"	m	class:Catch::Clara::Detail::ComposableParserImpl
Parser	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        class Parser : Detail::ParserBase {$/;"	c	namespace:Catch::Clara
Parser	leak_demo/Catch2/third_party/clara.hpp	/^        auto operator+( T const &other ) const -> Parser;$/;"	m	class:clara::detail::ComposableParserImpl
Parser	leak_demo/Catch2/third_party/clara.hpp	/^        auto operator|( T const &other ) const -> Parser;$/;"	m	class:clara::detail::ComposableParserImpl
Parser	leak_demo/Catch2/third_party/clara.hpp	/^    struct Parser : ParserBase {$/;"	s	namespace:clara::detail
ParserBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class ParserBase {$/;"	c	namespace:Catch::Clara::Detail
ParserBase	leak_demo/Catch2/third_party/clara.hpp	/^    class ParserBase {$/;"	c	namespace:clara::detail
ParserRefImpl	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ParserRefImpl( LambdaT const& ref, StringRef hint ):$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ParserRefImpl( T& ref, StringRef hint ):$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ParserRefImpl( accept_many_t,$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit ParserRefImpl( std::shared_ptr<BoundRef> const& ref ):$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class ParserRefImpl : public ComposableParserImpl<DerivedT> {$/;"	c	namespace:Catch::Clara::Detail
ParserRefImpl	leak_demo/Catch2/third_party/clara.hpp	/^        ParserRefImpl( LambdaT const &ref, std::string const &hint )$/;"	f	class:clara::detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/third_party/clara.hpp	/^        ParserRefImpl( T &ref, std::string const &hint )$/;"	f	class:clara::detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/third_party/clara.hpp	/^        explicit ParserRefImpl( std::shared_ptr<BoundRef> const &ref ) : m_ref( ref ) {}$/;"	f	class:clara::detail::ParserRefImpl
ParserRefImpl	leak_demo/Catch2/third_party/clara.hpp	/^    class ParserRefImpl : public ComposableParserImpl<DerivedT> {$/;"	c	namespace:clara::detail
ParserResult	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                    -> ParserResult = 0;$/;"	m	struct:Catch::Clara::Detail::BoundValueRefBase
ParserResult	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                virtual auto setFlag( bool flag ) -> ParserResult = 0;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRefBase
ParserResult	leak_demo/Catch2/third_party/clara.hpp	/^        virtual auto setFlag( bool flag ) -> ParserResult = 0;$/;"	m	struct:clara::detail::BoundFlagRefBase
ParserResult	leak_demo/Catch2/third_party/clara.hpp	/^        virtual auto setValue( std::string const &arg ) -> ParserResult = 0;$/;"	m	struct:clara::detail::BoundValueRefBase
PartialReporter	leak_demo/Catch2/tests/ExtraTests/X21-PartialTestCaseEvents.cpp	/^class PartialReporter : public Catch::StreamingReporterBase {$/;"	c	file:
Pattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpec::Pattern::Pattern( std::string const& name )$/;"	f	class:Catch::TestSpec::Pattern
Pattern	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    TestSpec::Pattern::Pattern( std::string const& name )$/;"	f	class:Catch::TestSpec::Pattern
Pattern	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        class Pattern {$/;"	c	class:Catch::TestSpec
PlatformDefault	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        PlatformDefault,$/;"	m	class:Catch::ColourMode
PlatformDefault	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        PlatformDefault,$/;"	m	class:Catch::ColourMode
Predicate	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^    PredicateMatcher<T, Pred> Predicate(Pred&& predicate, std::string const& description = "") {$/;"	f	namespace:Catch::Matchers
PredicateMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^    PredicateMatcher(Predicate&& elem, std::string const& descr)$/;"	f	class:Catch::Matchers::final
PreferenceListener	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        PreferenceListener( bool redirectStdout,$/;"	f	class:__anon99::PreferenceListener
PreferenceListener	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    class PreferenceListener : public Catch::EventListenerBase {$/;"	c	namespace:__anon99	file:
PreferenceReporter	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        PreferenceReporter( bool redirectStdout,$/;"	f	class:__anon99::PreferenceReporter
PreferenceReporter	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    class PreferenceReporter : public Catch::StreamingReporterBase {$/;"	c	namespace:__anon99	file:
ProcessedReporterSpec	leak_demo/Catch2/src/catch2/catch_config.hpp	/^    struct ProcessedReporterSpec {$/;"	s	namespace:Catch
Quiet	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Quiet = 0,$/;"	m	class:Catch::Verbosity
Quiet	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Quiet = 0,$/;"	m	class:Catch::Verbosity
QuotedName	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
REGISTER_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	145;"	d
REGISTER_TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	198;"	d
REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	125;"	d
REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	178;"	d
REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	126;"	d
REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	179;"	d
REQUIRE_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	130;"	d
REQUIRE_NOTHROW	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	183;"	d
REQUIRE_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	128;"	d
REQUIRE_THROWS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	181;"	d
REQUIRE_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	129;"	d
REQUIRE_THROWS_AS	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	182;"	d
RandomDevice	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.hpp	/^        RandomDevice,$/;"	m	class:Catch::GenerateFrom
RandomFloatingGenerator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        RandomFloatingGenerator<long double>::RandomFloatingGenerator($/;"	f	class:Catch::Generators::RandomFloatingGenerator
RandomFloatingGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^        RandomFloatingGenerator<long double>::RandomFloatingGenerator($/;"	f	class:Catch::Generators::RandomFloatingGenerator
RandomFloatingGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    RandomFloatingGenerator( Float a, Float b, std::uint32_t seed ):$/;"	f	class:Catch::Generators::final
RandomIntGenerator	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^    RandomIntGenerator(int low, int high):$/;"	f	class:__anon101::final
RandomIntegerGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    RandomIntegerGenerator( Integer a, Integer b, std::uint32_t seed ):$/;"	f	class:Catch::Generators::final
RangeEquals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^        RangeEquals( RangeLike&& range ) {$/;"	f	namespace:Catch::Matchers
RangeEquals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^        RangeEquals( RangeLike&& range, Equality&& predicate ) {$/;"	f	namespace:Catch::Matchers
RangeEqualsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^            RangeEqualsMatcher( TargetRangeLike2&& range,$/;"	f	class:Catch::Matchers::final
RangeGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    RangeGenerator(T const& start, T const& end):$/;"	f	class:Catch::Generators::final
RangeGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    RangeGenerator(T const& start, T const& end, T const& step):$/;"	f	class:Catch::Generators::final
ReconstructedExpression	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ReconstructedExpression = BrightYellow,$/;"	e	enum:Catch::ColourMode::Code
Red	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Red,$/;"	e	enum:Catch::ColourMode::Code
Red	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^    enum class Colours { Red, Green, Blue };$/;"	m	class:Bikeshed::Colours	file:
RedirectedStdErr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RedirectedStdErr::RedirectedStdErr()$/;"	f	class:Catch::RedirectedStdErr
RedirectedStdErr	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    RedirectedStdErr::RedirectedStdErr()$/;"	f	class:Catch::RedirectedStdErr
RedirectedStdErr	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^    class RedirectedStdErr {$/;"	c	namespace:Catch
RedirectedStdOut	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RedirectedStdOut::RedirectedStdOut() : m_cout( Catch::cout(), m_rss.get() ) {}$/;"	f	class:Catch::RedirectedStdOut
RedirectedStdOut	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    RedirectedStdOut::RedirectedStdOut() : m_cout( Catch::cout(), m_rss.get() ) {}$/;"	f	class:Catch::RedirectedStdOut
RedirectedStdOut	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^    class RedirectedStdOut {$/;"	c	namespace:Catch
RedirectedStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RedirectedStream::RedirectedStream( std::ostream& originalStream, std::ostream& redirectionStream )$/;"	f	class:Catch::RedirectedStream
RedirectedStream	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    RedirectedStream::RedirectedStream( std::ostream& originalStream, std::ostream& redirectionStream )$/;"	f	class:Catch::RedirectedStream
RedirectedStream	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^    class RedirectedStream {$/;"	c	namespace:Catch
RedirectedStreams	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RedirectedStreams::RedirectedStreams(std::string& redirectedCout, std::string& redirectedCerr)$/;"	f	class:Catch::RedirectedStreams
RedirectedStreams	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    RedirectedStreams::RedirectedStreams(std::string& redirectedCout, std::string& redirectedCerr)$/;"	f	class:Catch::RedirectedStreams
RedirectedStreams	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^    class RedirectedStreams {$/;"	c	namespace:Catch
ReferencingMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct ReferencingMatcher : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
RegexMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RegexMatcher::RegexMatcher(std::string regex, CaseSensitive caseSensitivity): m_regex(CATCH_MOVE(regex)), m_caseSensitivity(caseSensitivity) {}$/;"	f	class:Catch::Matchers::RegexMatcher
RegexMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    RegexMatcher::RegexMatcher(std::string regex, CaseSensitive caseSensitivity): m_regex(CATCH_MOVE(regex)), m_caseSensitivity(caseSensitivity) {}$/;"	f	class:Catch::Matchers::RegexMatcher
RegistrarForTagAliases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RegistrarForTagAliases::RegistrarForTagAliases(char const* alias, char const* tag, SourceLineInfo const& lineInfo) {$/;"	f	class:Catch::RegistrarForTagAliases
RegistrarForTagAliases	leak_demo/Catch2/src/catch2/catch_tag_alias_autoregistrar.cpp	/^    RegistrarForTagAliases::RegistrarForTagAliases(char const* alias, char const* tag, SourceLineInfo const& lineInfo) {$/;"	f	class:Catch::RegistrarForTagAliases
RegistrarForTagAliases	leak_demo/Catch2/src/catch2/catch_tag_alias_autoregistrar.hpp	/^    struct RegistrarForTagAliases {$/;"	s	namespace:Catch
RegistryHub	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class RegistryHub : public IRegistryHub,$/;"	c	namespace:Catch::__anon107	file:
RegistryHub	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^        class RegistryHub : public IRegistryHub,$/;"	c	namespace:Catch::__anon15	file:
RepeatGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        RepeatGenerator(size_t repeats, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::final
ReporterBase	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterBase::ReporterBase( ReporterConfig&& config ):$/;"	f	class:Catch::ReporterBase
ReporterBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.cpp	/^    ReporterBase::ReporterBase( ReporterConfig&& config ):$/;"	f	class:Catch::ReporterBase
ReporterBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^    class ReporterBase : public IEventListener {$/;"	c	namespace:Catch
ReporterConfig	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterConfig::ReporterConfig($/;"	f	class:Catch::ReporterConfig
ReporterConfig	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    ReporterConfig::ReporterConfig($/;"	f	class:Catch::ReporterConfig
ReporterDescription	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^    struct ReporterDescription {$/;"	s	namespace:Catch
ReporterFactory	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^    class ReporterFactory : public IReporterFactory {$/;"	c	namespace:Catch
ReporterPreferences	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    struct ReporterPreferences {$/;"	s	namespace:Catch
ReporterRegistrar	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^        explicit ReporterRegistrar( std::string const& name ) {$/;"	f	class:Catch::ReporterRegistrar
ReporterRegistrar	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^    class ReporterRegistrar {$/;"	c	namespace:Catch
ReporterRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterRegistry::ReporterRegistry():$/;"	f	class:Catch::ReporterRegistry
ReporterRegistry	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    ReporterRegistry::ReporterRegistry():$/;"	f	class:Catch::ReporterRegistry
ReporterRegistry	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.hpp	/^    class ReporterRegistry {$/;"	c	namespace:Catch
ReporterRegistryImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    struct ReporterRegistry::ReporterRegistryImpl {$/;"	s	class:Catch::ReporterRegistry	file:
ReporterRegistryImpl	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    struct ReporterRegistry::ReporterRegistryImpl {$/;"	s	class:Catch::ReporterRegistry	file:
ReporterSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^ReporterSpec::ReporterSpec($/;"	f	class:Catch::ReporterSpec
ReporterSpec	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^ReporterSpec::ReporterSpec($/;"	f	class:Catch::ReporterSpec
ReporterSpec	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^    class ReporterSpec {$/;"	c	namespace:Catch
ResultBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultBase( ResultType type ): m_type( type ) {}$/;"	f	class:Catch::Clara::Detail::ResultBase
ResultBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class ResultBase {$/;"	c	namespace:Catch::Clara::Detail
ResultBase	leak_demo/Catch2/third_party/clara.hpp	/^        ResultBase( Type type ) : m_type( type ) {}$/;"	f	class:clara::detail::ResultBase
ResultBase	leak_demo/Catch2/third_party/clara.hpp	/^    class ResultBase {$/;"	c	namespace:clara::detail
ResultDisposition	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultDisposition	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^    struct ResultDisposition { enum Flags {$/;"	s	namespace:Catch
ResultError	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ResultError = BrightRed,$/;"	e	enum:Catch::ColourMode::Code
ResultExpectedFailure	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ResultExpectedFailure = Warning,$/;"	e	enum:Catch::ColourMode::Code
ResultSuccess	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ResultSuccess = BrightGreen,$/;"	e	enum:Catch::ColourMode::Code
ResultType	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            enum class ResultType {$/;"	c	namespace:Catch::Clara::Detail
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase( ResultType type ): ResultBase( type ) {}$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase( ResultType, T const& value ):$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase( ResultType, T&& value ):$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase( ResultValueBase const& other ):$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase( ResultValueBase&& other ):$/;"	f	class:Catch::Clara::Detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class ResultValueBase : public ResultBase {$/;"	c	namespace:Catch::Clara::Detail
ResultValueBase	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            template <> class ResultValueBase<void> : public ResultBase {$/;"	c	namespace:Catch::Clara::Detail
ResultValueBase	leak_demo/Catch2/third_party/clara.hpp	/^        ResultValueBase( ResultValueBase const &other ) : ResultBase( other ) {$/;"	f	class:clara::detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/third_party/clara.hpp	/^        ResultValueBase( Type type ) : ResultBase( type ) {}$/;"	f	class:clara::detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/third_party/clara.hpp	/^        ResultValueBase( Type, T const &value ) : ResultBase( Ok ) {$/;"	f	class:clara::detail::ResultValueBase
ResultValueBase	leak_demo/Catch2/third_party/clara.hpp	/^    class ResultValueBase : public ResultBase {$/;"	c	namespace:clara::detail
ResultValueBase	leak_demo/Catch2/third_party/clara.hpp	/^    class ResultValueBase<void> : public ResultBase {$/;"	c	namespace:clara::detail
ResultWas	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ResultWas	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^    struct ResultWas { enum OfType {$/;"	s	namespace:Catch
ReusableStringStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReusableStringStream::ReusableStringStream()$/;"	f	class:Catch::ReusableStringStream
ReusableStringStream	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^    ReusableStringStream::ReusableStringStream()$/;"	f	class:Catch::ReusableStringStream
ReusableStringStream	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.hpp	/^    class ReusableStringStream : Detail::NonCopyable {$/;"	c	namespace:Catch
RowBreak	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^struct RowBreak {};$/;"	s	namespace:Catch::__anon131	file:
RowBreak	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^struct RowBreak {};$/;"	s	namespace:Catch::__anon12	file:
RunContext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RunContext::RunContext(IConfig const* _config, IEventListenerPtr&& reporter)$/;"	f	class:Catch::RunContext
RunContext	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    RunContext::RunContext(IConfig const* _config, IEventListenerPtr&& reporter)$/;"	f	class:Catch::RunContext
RunState	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        enum RunState {$/;"	g	class:Catch::TestCaseTracking::TrackerContext
RuntimeError	leak_demo/Catch2/third_party/clara.hpp	/^            Ok, LogicError, RuntimeError$/;"	e	enum:clara::detail::ResultBase::Type
S	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^struct S$/;"	s	file:
SCENARIO	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	167;"	d
SCENARIO	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	212;"	d
SCENARIO_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	168;"	d
SCENARIO_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	213;"	d
SCENARIO_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^SCENARIO_METHOD(Fixture,$/;"	f
SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	146;"	d
SECTION	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	199;"	d
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	348;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
SIMULATE_ID	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	368;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	314;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	356;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	91;"	d	file:
SIMULATE_VERSION_MAJOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	327;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	344;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
SIMULATE_VERSION_MINOR	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
SIMULATE_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
SIMULATE_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	371;"	d	file:
SIMULATE_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
SIMULATE_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	359;"	d	file:
SIMULATE_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
SIMULATE_VERSION_PATCH	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
SKIP	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	151;"	d
SKIP	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	204;"	d
STATIC_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	157;"	d
STATIC_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	162;"	d
STATIC_CHECK	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	208;"	d
STATIC_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	158;"	d
STATIC_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	163;"	d
STATIC_CHECK_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	209;"	d
STATIC_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	155;"	d
STATIC_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	160;"	d
STATIC_REQUIRE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	206;"	d
STATIC_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	156;"	d
STATIC_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	161;"	d
STATIC_REQUIRE_FALSE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	207;"	d
STRINGIFY	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	469;"	d	file:
STRINGIFY	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	448;"	d	file:
STRINGIFY_HELPER	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	468;"	d	file:
STRINGIFY_HELPER	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	447;"	d	file:
SUCCEED	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	150;"	d
SUCCEED	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	203;"	d
SampleAnalysis	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^        struct SampleAnalysis {$/;"	s	namespace:Catch::Benchmark
ScopedElement	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer, XmlFormatting fmt )$/;"	f	class:Catch::XmlWriter::ScopedElement
ScopedElement	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer, XmlFormatting fmt )$/;"	f	class:Catch::XmlWriter::ScopedElement
ScopedElement	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        class ScopedElement {$/;"	c	class:Catch::XmlWriter
ScopedMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ScopedMessage::ScopedMessage( MessageBuilder&& builder ):$/;"	f	class:Catch::ScopedMessage
ScopedMessage	leak_demo/Catch2/src/catch2/catch_message.cpp	/^    ScopedMessage::ScopedMessage( MessageBuilder&& builder ):$/;"	f	class:Catch::ScopedMessage
ScopedMessage	leak_demo/Catch2/src/catch2/catch_message.hpp	/^    class ScopedMessage {$/;"	c	namespace:Catch
SecondaryText	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            SecondaryText = LightGrey,$/;"	e	enum:Catch::ColourMode::Code
Seconds	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Seconds,$/;"	m	class:Catch::__anon131::Duration::Unit	file:
Seconds	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^        Seconds,$/;"	m	class:Catch::__anon12::Duration::Unit	file:
Section	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Section::Section( SectionInfo&& info ):$/;"	f	class:Catch::Section
Section	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Section::Section( SourceLineInfo const& _lineInfo,$/;"	f	class:Catch::Section
Section	leak_demo/Catch2/src/catch2/internal/catch_section.cpp	/^    Section::Section( SectionInfo&& info ):$/;"	f	class:Catch::Section
Section	leak_demo/Catch2/src/catch2/internal/catch_section.cpp	/^    Section::Section( SourceLineInfo const& _lineInfo,$/;"	f	class:Catch::Section
Section	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	/^    class Section : Detail::NonCopyable {$/;"	c	namespace:Catch
SectionEndInfo	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^    struct SectionEndInfo {$/;"	s	namespace:Catch
SectionInfo	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^        SectionInfo( SourceLineInfo const& _lineInfo, std::string _name,$/;"	f	struct:Catch::SectionInfo
SectionInfo	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^    struct SectionInfo {$/;"	s	namespace:Catch
SectionNode	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            explicit SectionNode(SectionStats const& _stats) : stats(_stats) {}$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode
SectionNode	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        struct SectionNode {$/;"	s	class:Catch::CumulativeReporterBase
SectionStats	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SectionStats::SectionStats(  SectionInfo&& _sectionInfo,$/;"	f	class:Catch::SectionStats
SectionStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    SectionStats::SectionStats(  SectionInfo&& _sectionInfo,$/;"	f	class:Catch::SectionStats
SectionStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    struct SectionStats {$/;"	s	namespace:Catch
SectionTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SectionTracker::SectionTracker( NameAndLocation&& nameAndLocation, TrackerContext& ctx, ITracker* parent )$/;"	f	class:Catch::TestCaseTracking::SectionTracker
SectionTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    SectionTracker::SectionTracker( NameAndLocation&& nameAndLocation, TrackerContext& ctx, ITracker* parent )$/;"	f	class:Catch::TestCaseTracking::SectionTracker
SectionTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^    class SectionTracker : public TrackerBase {$/;"	c	namespace:Catch::TestCaseTracking
Session	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Session::Session() {$/;"	f	class:Catch::Session
Session	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    Session::Session() {$/;"	f	class:Catch::Session
Session	leak_demo/Catch2/src/catch2/catch_session.hpp	/^    class Session : Detail::NonCopyable {$/;"	c	namespace:Catch
ShortCircuitAll	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            ShortCircuitAll,$/;"	m	class:Catch::Clara::ParseResultType
ShortCircuitAll	leak_demo/Catch2/third_party/clara.hpp	/^        Matched, NoMatch, ShortCircuitAll, ShortCircuitSame$/;"	m	class:clara::detail::ParseResultType
ShouldFail	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        ShouldFail = 1 << 2,$/;"	m	class:Catch::TestCaseProperties
ShowDurations	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    enum class ShowDurations {$/;"	c	namespace:Catch
ShowDurations	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    enum class ShowDurations {$/;"	c	namespace:Catch
SignalDefs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	s	namespace:Catch	file:
SignalDefs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    struct SignalDefs {$/;"	s	namespace:Catch	file:
SignalDefs	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	s	namespace:Catch	file:
SignalDefs	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    struct SignalDefs {$/;"	s	namespace:Catch	file:
SimplePcg32	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SimplePcg32::SimplePcg32(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
SimplePcg32	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^    SimplePcg32::SimplePcg32(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
SimplePcg32	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^        SimplePcg32():SimplePcg32(0xed743cc4U) {}$/;"	f	class:Catch::SimplePcg32
SimplePcg32	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^    class SimplePcg32 {$/;"	c	namespace:Catch
SingleValueGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        SingleValueGenerator(T const& value) :$/;"	f	class:Catch::Generators::final
SingleValueGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        SingleValueGenerator(T&& value):$/;"	f	class:Catch::Generators::final
Singleton	leak_demo/Catch2/src/catch2/internal/catch_singletons.hpp	/^    class Singleton : SingletonImplT, public ISingleton {$/;"	c	namespace:Catch
SizeIs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    HasSizeMatcher SizeIs(std::size_t sz) {$/;"	f	namespace:Catch::Matchers
SizeIs	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.cpp	/^    HasSizeMatcher SizeIs(std::size_t sz) {$/;"	f	namespace:Catch::Matchers
SizeIs	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^        SizeMatchesMatcher<Matcher>> SizeIs(Matcher&& m) {$/;"	f	namespace:Catch::Matchers
SizeMatchesMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^            explicit SizeMatchesMatcher(Matcher m):$/;"	f	class:Catch::Matchers::final
SizedUnsignedTypeHelper	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	48;"	d
SizedUnsignedTypeHelper	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	58;"	d
Skip	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Skip = LightGrey,$/;"	e	enum:Catch::ColourMode::Code
SomeType	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    struct SomeType {$/;"	s	namespace:__anon76	file:
SonarQubeReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	/^        SonarQubeReporter(ReporterConfig&& config)$/;"	f	class:Catch::final
SourceLineInfo	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^    struct SourceLineInfo {$/;"	s	namespace:Catch
Spacer	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Column Spacer( size_t spaceWidth ) {$/;"	f	namespace:Catch::TextFlow
Spacer	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Column Spacer( size_t spaceWidth ) {$/;"	f	namespace:Catch::TextFlow
Spacer	leak_demo/Catch2/third_party/clara.hpp	/^        explicit Spacer( size_t spaceWidth ) : Column( "" ) {$/;"	f	class:clara::TextFlow::Spacer
Spacer	leak_demo/Catch2/third_party/clara.hpp	/^    class Spacer : public Column {$/;"	c	namespace:clara::TextFlow
SpecialException	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^        SpecialException( int i_ ): i( i_ ) {}$/;"	f	struct:__anon75::SpecialException
SpecialException	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    struct SpecialException : std::exception {$/;"	s	namespace:__anon75	file:
StartsWith	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StartsWithMatcher StartsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
StartsWith	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StartsWithMatcher StartsWith( std::string const& str, CaseSensitive caseSensitivity ) {$/;"	f	namespace:Catch::Matchers
StartsWithMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StartsWithMatcher::StartsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "starts with"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::StartsWithMatcher
StartsWithMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StartsWithMatcher::StartsWithMatcher( CasedString const& comparator ) : StringMatcherBase( "starts with"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::StartsWithMatcher
StartupExceptionRegistry	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.hpp	/^    class StartupExceptionRegistry {$/;"	c	namespace:Catch
StreamBufImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            StreamBufImpl() {$/;"	f	class:Catch::Detail::__anon119::final
StreamBufImpl	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            StreamBufImpl() {$/;"	f	class:Catch::Detail::__anon30::final
StreamEndStop	leak_demo/Catch2/src/catch2/internal/catch_stream_end_stop.hpp	/^    struct StreamEndStop {$/;"	s	namespace:Catch
StreamingReporterBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^        StreamingReporterBase(ReporterConfig&& _config):$/;"	f	class:Catch::StreamingReporterBase
StreamingReporterBase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^    class StreamingReporterBase : public ReporterBase {$/;"	c	namespace:Catch
StringContainsMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringContainsMatcher::StringContainsMatcher( CasedString const& comparator ) : StringMatcherBase( "contains"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::StringContainsMatcher
StringContainsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StringContainsMatcher::StringContainsMatcher( CasedString const& comparator ) : StringMatcherBase( "contains"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::StringContainsMatcher
StringEqualsMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringEqualsMatcher::StringEqualsMatcher( CasedString const& comparator ) : StringMatcherBase( "equals"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::StringEqualsMatcher
StringEqualsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StringEqualsMatcher::StringEqualsMatcher( CasedString const& comparator ) : StringMatcherBase( "equals"_sr, comparator ) {}$/;"	f	class:Catch::Matchers::StringEqualsMatcher
StringIStream	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    class StringIStream : public Catch::IStream {$/;"	c	namespace:__anon97	file:
StringMaker	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^struct StringMaker<Catch::Approx> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<R C::*> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<T*> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<T^> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<bool> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<char *> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<char const *> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<char> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<char[SZ]> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<double> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<float> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<int> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<long long> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<long> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<signed char> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<signed char[SZ]> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::byte> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::nullopt_t> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::nullptr_t> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::optional<T> > {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::pair<T1, T2> > {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::string> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::string_view> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::wstring> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<std::wstring_view> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<unsigned char> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<unsigned char[SZ]> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<unsigned int> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<unsigned long long> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<unsigned long> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<wchar_t *> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^    struct StringMaker<wchar_t const *> {$/;"	s	namespace:Catch
StringMaker	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    struct StringMaker<ConvertibleToBool> {$/;"	s	namespace:Catch	file:
StringMaker	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct StringMaker<StringMakerException> {$/;"	s	namespace:Catch	file:
StringMaker	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    struct StringMaker<has_maker> {$/;"	s	namespace:Catch	file:
StringMaker	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    struct StringMaker<has_maker_and_operator> {$/;"	s	namespace:Catch	file:
StringMaker	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct StringMaker<stringmaker_range> {$/;"	s	namespace:Catch	file:
StringMaker	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    struct StringMaker<with_mocked_iterator_access<T>> {$/;"	s	namespace:Catch
StringMakerException	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct StringMakerException : std::exception {$/;"	s	namespace:__anon61	file:
StringMatcherBase	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringMatcherBase::StringMatcherBase( StringRef operation, CasedString const& comparator )$/;"	f	class:Catch::Matchers::StringMatcherBase
StringMatcherBase	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StringMatcherBase::StringMatcherBase( StringRef operation, CasedString const& comparator )$/;"	f	class:Catch::Matchers::StringMatcherBase
StringMatcherBase	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    class StringMatcherBase : public MatcherBase<std::string> {$/;"	c	namespace:Catch::Matchers
StringRef	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    : StringRef( rawChars, std::strlen(rawChars) )$/;"	f	namespace:Catch
StringRef	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class StringRef {$/;"	c	namespace:Catch
StringRef	leak_demo/Catch2/src/catch2/internal/catch_stringref.cpp	/^    : StringRef( rawChars, std::strlen(rawChars) )$/;"	f	namespace:Catch
StringRef	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^    class StringRef {$/;"	c	namespace:Catch
StringStreams	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    struct StringStreams {$/;"	s	namespace:Catch	file:
StringStreams	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^    struct StringStreams {$/;"	s	namespace:Catch	file:
StringifyCountingGenerator	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    class StringifyCountingGenerator$/;"	c	namespace:__anon95	file:
StrongDoubleTypedef	leak_demo/Catch2/tests/SelfTest/UsageTests/Approx.tests.cpp	/^        explicit StrongDoubleTypedef(double d) : d_(d) {}$/;"	f	class:__anon48::StrongDoubleTypedef
StrongDoubleTypedef	leak_demo/Catch2/tests/SelfTest/UsageTests/Approx.tests.cpp	/^    class StrongDoubleTypedef {$/;"	c	namespace:__anon48	file:
Success	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Success = Green,$/;"	e	enum:Catch::ColourMode::Code
SummaryColumn	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            SummaryColumn( std::string suffix, Colour::Code colour ):$/;"	f	class:Catch::__anon134::SummaryColumn
SummaryColumn	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class SummaryColumn {$/;"	c	namespace:Catch::__anon134	file:
SummaryColumn	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            SummaryColumn( std::string suffix, Colour::Code colour ):$/;"	f	class:Catch::__anon11::SummaryColumn
SummaryColumn	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^        class SummaryColumn {$/;"	c	namespace:Catch::__anon11	file:
SuppressFail	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
SuppressFail	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        SuppressFail = 0x08         \/\/ Failures are reported but do not fail the test$/;"	e	enum:Catch::ResultDisposition::Flags
T	leak_demo/Catch2/tests/SelfTest/helpers/type_with_lit_0_comparisons.hpp	/^    constexpr ZeroLiteralAsPointer( T ) = delete;$/;"	m	struct:ZeroLiteralAsPointer
TAPReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        TAPReporter( ReporterConfig&& config ):$/;"	f	class:Catch::final
TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	118;"	d
TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	84;"	d
TEMPLATE_LIST_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	95;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	119;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	85;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	96;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEMPLATE_LIST_TEST_CASE_METHOD(Template_Fixture, "Template test case method with test types specified inside std::tuple", "[class][template][list]", MyTypes)$/;"	f
TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	114;"	d
TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	80;"	d
TEMPLATE_PRODUCT_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	91;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	116;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	82;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	93;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    TEMPLATE_PRODUCT_TEST_CASE_METHOD(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that fails","[.][class][template][product][failing]",(std::vector,Template_Foo),(int,float))$/;"	f	namespace:Inner
TEMPLATE_PRODUCT_TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEMPLATE_PRODUCT_TEST_CASE_METHOD(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that succeeds","[class][template][product]",(std::vector,Template_Foo),(int,float))$/;"	f
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	117;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	83;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	94;"	d
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG based test run that fails", "[.][class][template][product][nttp][failing]", ((typename T, size_t S), T, S), (std::array, Template_Foo_2), ((int, 2), (float, 6)))$/;"	f	namespace:Inner
TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG(Template_Fixture_2, "A TEMPLATE_PRODUCT_TEST_CASE_METHOD_SIG based test run that succeeds", "[class][template][product][nttp]", ((typename T, size_t S), T, S),(std::array, Template_Foo_2), ((int,2), (float,6)))$/;"	f
TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	115;"	d
TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	81;"	d
TEMPLATE_PRODUCT_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	92;"	d
TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	102;"	d
TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	107;"	d
TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	76;"	d
TEMPLATE_TEST_CASE	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	87;"	d
TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	104;"	d
TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	109;"	d
TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	78;"	d
TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	89;"	d
TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    TEMPLATE_TEST_CASE_METHOD(Template_Fixture,"A TEMPLATE_TEST_CASE_METHOD based test run that fails", "[.][class][template][failing]", int, float, double)$/;"	f	namespace:Inner
TEMPLATE_TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEMPLATE_TEST_CASE_METHOD(Template_Fixture, "A TEMPLATE_TEST_CASE_METHOD based test run that succeeds", "[class][template]", int, float, double) {$/;"	f
TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	105;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	110;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	79;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	90;"	d
TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    TEMPLATE_TEST_CASE_METHOD_SIG(Nttp_Fixture, "A TEMPLATE_TEST_CASE_METHOD_SIG based test run that fails", "[.][class][template][nttp][failing]", ((int V), V), 1, 3, 6) {$/;"	f	namespace:Inner
TEMPLATE_TEST_CASE_METHOD_SIG	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEMPLATE_TEST_CASE_METHOD_SIG(Nttp_Fixture, "A TEMPLATE_TEST_CASE_METHOD_SIG based test run that succeeds", "[class][template][nttp]",((int V), V), 1, 3, 6) {$/;"	f
TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	103;"	d
TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	108;"	d
TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	77;"	d
TEMPLATE_TEST_CASE_SIG	leak_demo/Catch2/src/catch2/catch_template_test_macros.hpp	88;"	d
TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	142;"	d
TEST_CASE	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	195;"	d
TEST_CASE	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^TEST_CASE() {$/;"	f
TEST_CASE	leak_demo/Catch2/tests/SelfTest/UsageTests/VariadicMacros.tests.cpp	/^TEST_CASE()$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^TEST_CASE_METHOD( UniqueTestsFixture, "Create Employee\/No Name", "[create]" ) {$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^TEST_CASE_METHOD( UniqueTestsFixture, "Create Employee\/Normal", "[create]" ) {$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^TEST_CASE_METHOD( Fixture, "3: Testcase with class-based fixture", "[tag-C][tag-D]" ) {$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	143;"	d
TEST_CASE_METHOD	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	196;"	d
TEST_CASE_METHOD	leak_demo/Catch2/tests/ExtraTests/X33-DuplicatedTestCaseMethods.cpp	/^TEST_CASE_METHOD(TestCaseFixture, "A test case with duplicated name and tags", "[tag1]") {}$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/tests/ExtraTests/X34-DuplicatedTestCaseMethodsDifferentFixtures.cpp	/^TEST_CASE_METHOD(TestCaseFixture1, "A test case with duplicated name and tags", "[tag1]") {}$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/tests/ExtraTests/X34-DuplicatedTestCaseMethodsDifferentFixtures.cpp	/^TEST_CASE_METHOD(TestCaseFixture2, "A test case with duplicated name and tags", "[tag1]") {}$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    TEST_CASE_METHOD( Fixture, "A TEST_CASE_METHOD based test run that fails", "[.][class][failing]" )$/;"	f	namespace:Inner
TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEST_CASE_METHOD( A::B::TestClass,$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^TEST_CASE_METHOD( Fixture, "A TEST_CASE_METHOD based test run that succeeds", "[class]" )$/;"	f
TEST_CASE_METHOD	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^TEST_CASE_METHOD((Fixture_1245<int, int>), "#1245", "[compilation]") {$/;"	f
THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	173;"	d
THEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	219;"	d
TablePrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TablePrinter( std::ostream& os, std::vector<ColumnInfo> columnInfos )$/;"	f	class:Catch::TablePrinter
TablePrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^class TablePrinter {$/;"	c	namespace:Catch	file:
TablePrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    TablePrinter( std::ostream& os, std::vector<ColumnInfo> columnInfos )$/;"	f	class:Catch::TablePrinter
TablePrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^class TablePrinter {$/;"	c	namespace:Catch	file:
Tag	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        constexpr Tag(StringRef original_):$/;"	f	struct:Catch::Tag
Tag	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^    struct Tag {$/;"	s	namespace:Catch
Tag	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        enum Mode{ None, Name, QuotedName, Tag, EscapedName };$/;"	e	enum:Catch::TestSpecParser::Mode
TagAlias	leak_demo/Catch2/src/catch2/catch_tag_alias.hpp	/^        TagAlias(std::string const& _tag, SourceLineInfo _lineInfo):$/;"	f	struct:Catch::TagAlias
TagAlias	leak_demo/Catch2/src/catch2/catch_tag_alias.hpp	/^    struct TagAlias {$/;"	s	namespace:Catch
TagAliasRegistry	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	/^    class TagAliasRegistry : public ITagAliasRegistry {$/;"	c	namespace:Catch
TagInfo	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^    struct TagInfo {$/;"	s	namespace:Catch
TagPattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpec::TagPattern::TagPattern( std::string const& tag, std::string const& filterString )$/;"	f	class:Catch::TestSpec::TagPattern
TagPattern	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    TestSpec::TagPattern::TagPattern( std::string const& tag, std::string const& filterString )$/;"	f	class:Catch::TestSpec::TagPattern
TagPattern	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        class TagPattern : public Pattern {$/;"	c	class:Catch::TestSpec
TakeGenerator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        TakeGenerator(size_t target, GeneratorWrapper<T>&& generator):$/;"	f	class:Catch::Generators::final
TapAssertionPrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TapAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, std::size_t _counter, ColourImpl* colour_)$/;"	f	class:Catch::__anon138::TapAssertionPrinter
TapAssertionPrinter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class TapAssertionPrinter {$/;"	c	namespace:Catch::__anon138	file:
TapAssertionPrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            TapAssertionPrinter(std::ostream& _stream, AssertionStats const& _stats, std::size_t _counter, ColourImpl* colour_)$/;"	f	class:Catch::__anon7::TapAssertionPrinter
TapAssertionPrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^        class TapAssertionPrinter {$/;"	c	namespace:Catch::__anon7	file:
TeamCityReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        TeamCityReporter( ReporterConfig&& _config )$/;"	f	class:Catch::final
TempFile	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
TempFile	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    TempFile::TempFile() {$/;"	f	class:Catch::TempFile
TempFile	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^    class TempFile {$/;"	c	namespace:Catch
Template_Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        Template_Fixture(): m_a( 1 ) {}$/;"	f	struct:__anon64::Template_Fixture
Template_Fixture	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    template <typename T> struct Template_Fixture {$/;"	s	namespace:__anon64	file:
Template_Fixture_2	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    template <typename T> struct Template_Fixture_2 {$/;"	s	namespace:__anon64	file:
Template_Foo	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    template <typename T> struct Template_Foo {$/;"	s	namespace:__anon64	file:
Template_Foo_2	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    template <typename T, size_t V> struct Template_Foo_2 {$/;"	s	namespace:__anon64	file:
TestCaseFixture	leak_demo/Catch2/tests/ExtraTests/X33-DuplicatedTestCaseMethods.cpp	/^class TestCaseFixture {$/;"	c	file:
TestCaseFixture1	leak_demo/Catch2/tests/ExtraTests/X34-DuplicatedTestCaseMethodsDifferentFixtures.cpp	/^class TestCaseFixture1 {$/;"	c	file:
TestCaseFixture2	leak_demo/Catch2/tests/ExtraTests/X34-DuplicatedTestCaseMethodsDifferentFixtures.cpp	/^class TestCaseFixture2 {$/;"	c	file:
TestCaseHandle	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        TestCaseHandle(TestCaseInfo* info, ITestInvoker* invoker) :$/;"	f	class:Catch::TestCaseProperties::TestCaseHandle
TestCaseHandle	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^    class TestCaseHandle {$/;"	c	class:Catch::TestCaseProperties
TestCaseInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestCaseInfo::TestCaseInfo(StringRef _className,$/;"	f	class:Catch::TestCaseInfo
TestCaseInfo	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    TestCaseInfo::TestCaseInfo(StringRef _className,$/;"	f	class:Catch::TestCaseInfo
TestCaseInfo	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^    struct TestCaseInfo : Detail::NonCopyable {$/;"	s	class:Catch::TestCaseProperties
TestCaseInfoHasher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestCaseInfoHasher::TestCaseInfoHasher( hash_t seed ): m_seed( seed ) {}$/;"	f	class:Catch::TestCaseInfoHasher
TestCaseInfoHasher	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.cpp	/^    TestCaseInfoHasher::TestCaseInfoHasher( hash_t seed ): m_seed( seed ) {}$/;"	f	class:Catch::TestCaseInfoHasher
TestCaseInfoHasher	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.hpp	/^    class TestCaseInfoHasher {$/;"	c	namespace:Catch
TestCaseProperties	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^    enum class TestCaseProperties : uint8_t {$/;"	c	namespace:Catch
TestCaseStats	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestCaseStats::TestCaseStats(  TestCaseInfo const& _testInfo,$/;"	f	class:Catch::TestCaseStats
TestCaseStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    TestCaseStats::TestCaseStats(  TestCaseInfo const& _testInfo,$/;"	f	class:Catch::TestCaseStats
TestCaseStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    struct TestCaseStats {$/;"	s	namespace:Catch
TestCaseTracking	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch	file:
TestCaseTracking	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch	file:
TestCaseTracking	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^namespace TestCaseTracking {$/;"	n	namespace:Catch
TestChronometerModel	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    struct TestChronometerModel : Catch::Benchmark::Detail::ChronometerConcept {$/;"	s	namespace:__anon83	file:
TestClass	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^            class TestClass {};$/;"	c	namespace:__anon65::A::B	file:
TestClass	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        TestClass(): s( "hello" ) {}$/;"	f	class:__anon64::TestClass
TestClass	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    class TestClass {$/;"	c	namespace:__anon64	file:
TestClass	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct TestClass {$/;"	s	file:
TestColourImpl	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ColourImpl.tests.cpp	/^    class TestColourImpl : public Catch::ColourImpl {$/;"	c	namespace:__anon96	file:
TestData	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^    struct TestData {$/;"	s	namespace:__anon55	file:
TestFailureException	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestFailureException	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.hpp	/^    struct TestFailureException{};$/;"	s	namespace:Catch
TestGen	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    TestGen(non_copyable const& nc):$/;"	f	class:__anon92::TestGen
TestGen	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^class TestGen : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon92	file:
TestGroup	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            explicit TestGroup(IEventListenerPtr&& reporter, Config const* config):$/;"	f	class:Catch::__anon108::TestGroup
TestGroup	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class TestGroup {$/;"	c	namespace:Catch::__anon108	file:
TestGroup	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            explicit TestGroup(IEventListenerPtr&& reporter, Config const* config):$/;"	f	class:Catch::__anon36::TestGroup
TestGroup	leak_demo/Catch2/src/catch2/catch_session.cpp	/^        class TestGroup {$/;"	c	namespace:Catch::__anon36	file:
TestInvokerAsMethod	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^class TestInvokerAsMethod : public ITestInvoker {$/;"	c	namespace:Catch
TestListener	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^        TestListener( Catch::IConfig const* config ):$/;"	f	class:__anon46::TestListener
TestListener	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^    class TestListener : public Catch::EventListenerBase {$/;"	c	namespace:__anon46	file:
TestPackageConan	leak_demo/Catch2/.conan/test_package/conanfile.py	/^class TestPackageConan(ConanFile):$/;"	c
TestRegistry	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^    class TestRegistry : public ITestCaseRegistry {$/;"	c	namespace:Catch
TestReporter	leak_demo/Catch2/tests/ExtraTests/X23-CasingInReporterNames.cpp	/^    TestReporter(Catch::ReporterConfig&& _config):$/;"	f	class:TestReporter
TestReporter	leak_demo/Catch2/tests/ExtraTests/X23-CasingInReporterNames.cpp	/^class TestReporter : public Catch::StreamingReporterBase {$/;"	c	file:
TestReporter	leak_demo/Catch2/tests/ExtraTests/X26-ReporterPreferencesForPassingAssertionsIsRespected.cpp	/^      TestReporter(Catch::ReporterConfig&& _config):$/;"	f	class:__anon40::TestReporter
TestReporter	leak_demo/Catch2/tests/ExtraTests/X26-ReporterPreferencesForPassingAssertionsIsRespected.cpp	/^  class TestReporter : public Catch::StreamingReporterBase {$/;"	c	namespace:__anon40	file:
TestReporter	leak_demo/Catch2/tests/ExtraTests/X27-CapturedStdoutInTestCaseEvents.cpp	/^    TestReporter( Catch::ReporterConfig&& _config ):$/;"	f	class:TestReporter
TestReporter	leak_demo/Catch2/tests/ExtraTests/X27-CapturedStdoutInTestCaseEvents.cpp	/^class TestReporter : public Catch::StreamingReporterBase {$/;"	c	file:
TestReporter	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^        TestReporter( Catch::ReporterConfig&& _config ):$/;"	f	class:__anon46::TestReporter
TestReporter	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^    class TestReporter : public Catch::StreamingReporterBase {$/;"	c	namespace:__anon46	file:
TestReporter	leak_demo/Catch2/tests/ExtraTests/X29-CustomArgumentsForReporters.cpp	/^    TestReporter( Catch::ReporterConfig&& _config ):$/;"	f	class:TestReporter
TestReporter	leak_demo/Catch2/tests/ExtraTests/X29-CustomArgumentsForReporters.cpp	/^class TestReporter : public Catch::StreamingReporterBase {$/;"	c	file:
TestReporter	leak_demo/Catch2/tests/ExtraTests/X35-DuplicatedReporterNames.cpp	/^    class TestReporter : public Catch::StreamingReporterBase {$/;"	c	namespace:__anon41	file:
TestReporterFactory	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    class TestReporterFactory : public Catch::IReporterFactory {$/;"	c	namespace:__anon100	file:
TestRunInfo	leak_demo/Catch2/src/catch2/internal/catch_test_run_info.hpp	/^        constexpr TestRunInfo(StringRef _name) : name(_name) {}$/;"	f	struct:Catch::TestRunInfo
TestRunInfo	leak_demo/Catch2/src/catch2/internal/catch_test_run_info.hpp	/^    struct TestRunInfo {$/;"	s	namespace:Catch
TestRunOrder	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    enum class TestRunOrder {$/;"	c	namespace:Catch
TestRunOrder	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    enum class TestRunOrder {$/;"	c	namespace:Catch
TestRunStats	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestRunStats::TestRunStats(   TestRunInfo const& _runInfo,$/;"	f	class:Catch::TestRunStats
TestRunStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    TestRunStats::TestRunStats(   TestRunInfo const& _runInfo,$/;"	f	class:Catch::TestRunStats
TestRunStats	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^    struct TestRunStats {$/;"	s	namespace:Catch
TestSkipException	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct TestSkipException {};$/;"	s	namespace:Catch
TestSkipException	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.hpp	/^    struct TestSkipException {};$/;"	s	namespace:Catch
TestSpec	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^    class TestSpec {$/;"	c	namespace:Catch
TestSpecParser	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpecParser::TestSpecParser( ITagAliasRegistry const& tagAliases ) : m_tagAliases( &tagAliases ) {}$/;"	f	class:Catch::TestSpecParser
TestSpecParser	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    TestSpecParser::TestSpecParser( ITagAliasRegistry const& tagAliases ) : m_tagAliases( &tagAliases ) {}$/;"	f	class:Catch::TestSpecParser
TestSpecParser	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^    class TestSpecParser {$/;"	c	namespace:Catch
TestStringStream	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ColourImpl.tests.cpp	/^    class TestStringStream : public Catch::IStream {$/;"	c	namespace:__anon96	file:
TestSubject	leak_demo/Catch2/examples/302-Gen-Table.cpp	/^struct TestSubject {$/;"	s	file:
TextFlow	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    namespace TextFlow {$/;"	n	namespace:Catch	file:
TextFlow	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^    namespace TextFlow {$/;"	n	namespace:Catch	file:
TextFlow	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^    namespace TextFlow {$/;"	n	namespace:Catch
TextFlow	leak_demo/Catch2/third_party/clara.hpp	/^namespace clara { namespace TextFlow {$/;"	n	namespace:clara
ThrewException	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrewException	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        ThrewException = Exception | 1,$/;"	e	enum:Catch::ResultWas::OfType
ThrowOnCopyOrMoveMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    [[noreturn]] ThrowOnCopyOrMoveMatcher( ThrowOnCopyOrMoveMatcher const& other ):$/;"	f	struct:ThrowOnCopyOrMoveMatcher
ThrowOnCopyOrMoveMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    [[noreturn]] ThrowOnCopyOrMoveMatcher( ThrowOnCopyOrMoveMatcher&& other ):$/;"	f	struct:ThrowOnCopyOrMoveMatcher
ThrowOnCopyOrMoveMatcher	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^struct ThrowOnCopyOrMoveMatcher : Catch::Matchers::MatcherGenericBase {$/;"	s	file:
Throws	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        Throws = 1 << 4,$/;"	m	class:Catch::TestCaseProperties
Time	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.hpp	/^        Time,$/;"	m	class:Catch::GenerateFrom
Timer	leak_demo/Catch2/src/catch2/catch_timer.hpp	/^    class Timer {$/;"	c	namespace:Catch
Timing	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	/^        struct Timing {$/;"	s	namespace:Catch::Benchmark
Token	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct Token {$/;"	s	namespace:Catch::Clara::Detail
Token	leak_demo/Catch2/third_party/clara.hpp	/^    struct Token {$/;"	s	namespace:clara::detail
TokenStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TokenStream::TokenStream( Args const& args ):$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TokenStream::TokenStream( Iterator it_, Iterator itEnd_ ):$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            TokenStream::TokenStream( Args const& args ):$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            TokenStream::TokenStream( Iterator it_, Iterator itEnd_ ):$/;"	f	class:Catch::Clara::Detail::TokenStream
TokenStream	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            class TokenStream {$/;"	c	namespace:Catch::Clara::Detail
TokenStream	leak_demo/Catch2/third_party/clara.hpp	/^        TokenStream( Iterator it, Iterator itEnd ) : it( it ), itEnd( itEnd ) {$/;"	f	class:clara::detail::TokenStream
TokenStream	leak_demo/Catch2/third_party/clara.hpp	/^        explicit TokenStream( Args const &args ) : TokenStream( args.m_args.begin(), args.m_args.end() ) {}$/;"	f	class:clara::detail::TokenStream
TokenStream	leak_demo/Catch2/third_party/clara.hpp	/^    class TokenStream {$/;"	c	namespace:clara::detail
TokenType	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            enum class TokenType { Option, Argument };$/;"	c	namespace:Catch::Clara::Detail
TokenType	leak_demo/Catch2/third_party/clara.hpp	/^    enum class TokenType {$/;"	c	namespace:clara::detail
Totals	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^    struct Totals {$/;"	s	namespace:Catch
TrackerBase	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TrackerBase::TrackerBase( NameAndLocation&& nameAndLocation, TrackerContext& ctx, ITracker* parent ):$/;"	f	class:Catch::TestCaseTracking::TrackerBase
TrackerBase	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    TrackerBase::TrackerBase( NameAndLocation&& nameAndLocation, TrackerContext& ctx, ITracker* parent ):$/;"	f	class:Catch::TestCaseTracking::TrackerBase
TrackerBase	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^    class TrackerBase : public ITracker {$/;"	c	namespace:Catch::TestCaseTracking
TrackerContext	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^    class TrackerContext {$/;"	c	namespace:Catch::TestCaseTracking
Type	leak_demo/Catch2/third_party/clara.hpp	/^        enum Type {$/;"	g	class:clara::detail::ResultBase
TypeList	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct TypeList {};$/;"	s	namespace:bar	file:
TypeWithConstevalLit0Comparison	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct TypeWithConstevalLit0Comparison {$/;"	s	namespace:__anon59	file:
TypeWithLit0Comparisons	leak_demo/Catch2/tests/SelfTest/helpers/type_with_lit_0_comparisons.hpp	/^struct TypeWithLit0Comparisons {$/;"	s
TypedListenerFactory	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^            TypedListenerFactory( StringRef listenerName ):$/;"	f	class:Catch::ListenerRegistrar::TypedListenerFactory
TypedListenerFactory	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^        class TypedListenerFactory : public EventListenerFactory {$/;"	c	class:Catch::ListenerRegistrar
UnaryExpr	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        explicit constexpr UnaryExpr( LhsT lhs )$/;"	f	class:Catch::UnaryExpr
UnaryExpr	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    class UnaryExpr : public ITransientExpression {$/;"	c	namespace:Catch
UnaryLambdaTraits	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct UnaryLambdaTraits$/;"	s	namespace:Catch::Clara::Detail
UnaryLambdaTraits	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct UnaryLambdaTraits<ReturnT ( ClassT::* )( ArgT ) const> {$/;"	s	namespace:Catch::Clara::Detail
UnaryLambdaTraits	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct UnaryLambdaTraits<ReturnT ( ClassT::* )( Args... ) const> {$/;"	s	namespace:Catch::Clara::Detail
UnaryLambdaTraits	leak_demo/Catch2/third_party/clara.hpp	/^    struct UnaryLambdaTraits : UnaryLambdaTraits<decltype( &L::operator() )> {};$/;"	s	namespace:clara::detail
UnaryLambdaTraits	leak_demo/Catch2/third_party/clara.hpp	/^    struct UnaryLambdaTraits<ReturnT( ClassT::* )( ArgT ) const> {$/;"	s	namespace:clara::detail
UnaryLambdaTraits	leak_demo/Catch2/third_party/clara.hpp	/^    struct UnaryLambdaTraits<ReturnT( ClassT::* )( Args... ) const> {$/;"	s	namespace:clara::detail
UniqueTestsFixture	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^    UniqueTestsFixture()$/;"	f	class:UniqueTestsFixture
UniqueTestsFixture	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^class UniqueTestsFixture$/;"	c	file:
Unit	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    enum class Unit {$/;"	c	class:Catch::__anon131::Duration	file:
Unit	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    enum class Unit {$/;"	c	class:Catch::__anon12::Duration	file:
Unknown	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
Unknown	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        Unknown = -1,$/;"	e	enum:Catch::ResultWas::OfType
UnmatchedTestSpec	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        UnmatchedTestSpec = 0x02,$/;"	e	enum:Catch::WarnAbout::What
UnmatchedTestSpec	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        UnmatchedTestSpec = 0x02,$/;"	e	enum:Catch::WarnAbout::What
UnorderedEquals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    UnorderedEqualsMatcher<T, AllocComp, AllocMatch> UnorderedEquals(std::vector<T, AllocComp> const& target) {$/;"	f	namespace:Catch::Matchers
UnorderedEqualsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        UnorderedEqualsMatcher(std::vector<T, AllocComp> const& target):$/;"	f	class:Catch::Matchers::final
UnorderedRangeEquals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^        UnorderedRangeEquals( RangeLike&& range ) {$/;"	f	namespace:Catch::Matchers
UnorderedRangeEquals	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^        UnorderedRangeEquals( RangeLike&& range, Equality&& predicate ) {$/;"	f	namespace:Catch::Matchers
UnorderedRangeEqualsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^            UnorderedRangeEqualsMatcher( TargetRangeLike2&& range,$/;"	f	class:Catch::Matchers::final
UsesSentinel	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^struct UsesSentinel {$/;"	s	file:
VALIDS	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^VALIDS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-&'$/;"	v
ValidatingTestListener	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    ValidatingTestListener(Catch::IConfig const* config) :$/;"	f	class:ValidatingTestListener
ValidatingTestListener	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^class ValidatingTestListener : public Catch::EventListenerBase {$/;"	c	file:
Value1	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value1	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value2	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value2	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value3	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
Value3	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^enum class EnumClass3 { Value1, Value2, Value3, Value4 };$/;"	m	class:EnumClass3	file:
VectorContains	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    VectorContainsElementMatcher<T, Alloc> VectorContains( T const& comparator ) {$/;"	f	namespace:Catch::Matchers
VectorContainsElementMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        VectorContainsElementMatcher(T const& comparator):$/;"	f	class:Catch::Matchers::final
Verbosity	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    enum class Verbosity {$/;"	c	namespace:Catch
Verbosity	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    enum class Verbosity {$/;"	c	namespace:Catch
Version	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Version::Version$/;"	f	class:Catch::Version
Version	leak_demo/Catch2/src/catch2/catch_version.cpp	/^    Version::Version$/;"	f	class:Catch::Version
Version	leak_demo/Catch2/src/catch2/catch_version.hpp	/^    struct Version {$/;"	s	namespace:Catch
Version	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^class Version:$/;"	c
WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	171;"	d
WHEN	leak_demo/Catch2/src/catch2/catch_test_macros.hpp	217;"	d
WIN32_LEAN_AND_MEAN	leak_demo/Catch2/extras/catch_amalgamated.cpp	31;"	d	file:
WIN32_LEAN_AND_MEAN	leak_demo/Catch2/src/catch2/internal/catch_windows_h_proxy.hpp	21;"	d
WaitForKeypress	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct WaitForKeypress { enum When {$/;"	s	namespace:Catch
WaitForKeypress	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    struct WaitForKeypress { enum When {$/;"	s	namespace:Catch
WarnAbout	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct WarnAbout { enum What {$/;"	s	namespace:Catch
WarnAbout	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    struct WarnAbout { enum What {$/;"	s	namespace:Catch
Warning	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
Warning	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Warning = BrightYellow,$/;"	e	enum:Catch::ColourMode::Code
Warning	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^        Warning = 2,$/;"	e	enum:Catch::ResultWas::OfType
What	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct WarnAbout { enum What {$/;"	g	struct:Catch::WarnAbout
What	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    struct WarnAbout { enum What {$/;"	g	struct:Catch::WarnAbout
WhatException	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^struct WhatException : std::exception {$/;"	s	namespace:__anon61	file:
When	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct WaitForKeypress { enum When {$/;"	g	struct:Catch::WaitForKeypress
When	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^    struct WaitForKeypress { enum When {$/;"	g	struct:Catch::WaitForKeypress
White	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            White,$/;"	e	enum:Catch::ColourMode::Code
WildcardAtBothEnds	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^            WildcardAtBothEnds = WildcardAtStart | WildcardAtEnd$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtEnd	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^            WildcardAtEnd = 2,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardAtStart	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^            WildcardAtStart = 1,$/;"	e	enum:Catch::WildcardPattern::WildcardPosition
WildcardPattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    WildcardPattern::WildcardPattern( std::string const& pattern,$/;"	f	class:Catch::WildcardPattern
WildcardPattern	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.cpp	/^    WildcardPattern::WildcardPattern( std::string const& pattern,$/;"	f	class:Catch::WildcardPattern
WildcardPattern	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^    class WildcardPattern {$/;"	c	namespace:Catch
WildcardPosition	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^        enum WildcardPosition {$/;"	g	class:Catch::WildcardPattern
Win32	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Win32,$/;"	m	class:Catch::ColourMode
Win32	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_config.hpp	/^        Win32,$/;"	m	class:Catch::ColourMode
Win32ColourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Win32ColourImpl(IStream* stream):$/;"	f	class:Catch::__anon114::final
Win32ColourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        Win32ColourImpl(IStream* stream):$/;"	f	class:Catch::__anon32::final
WithinAbs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinAbsMatcher WithinAbs(double target, double margin) {$/;"	f	namespace:Catch::Matchers
WithinAbs	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinAbsMatcher WithinAbs(double target, double margin) {$/;"	f	namespace:Catch::Matchers
WithinAbsMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    WithinAbsMatcher::WithinAbsMatcher(double target, double margin)$/;"	f	class:Catch::Matchers::WithinAbsMatcher
WithinAbsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    WithinAbsMatcher::WithinAbsMatcher(double target, double margin)$/;"	f	class:Catch::Matchers::WithinAbsMatcher
WithinRel	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(double target) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(double target, double eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(float target) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinRelMatcher WithinRel(float target, float eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(double target) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(double target, double eps) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(float target) {$/;"	f	namespace:Catch::Matchers
WithinRel	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinRelMatcher WithinRel(float target, float eps) {$/;"	f	namespace:Catch::Matchers
WithinRelMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    WithinRelMatcher::WithinRelMatcher(double target, double epsilon):$/;"	f	class:Catch::Matchers::WithinRelMatcher
WithinRelMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    WithinRelMatcher::WithinRelMatcher(double target, double epsilon):$/;"	f	class:Catch::Matchers::WithinRelMatcher
WithinULP	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinUlpsMatcher WithinULP(double target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinULP	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^WithinUlpsMatcher WithinULP(float target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinULP	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinUlpsMatcher WithinULP(double target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinULP	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^WithinUlpsMatcher WithinULP(float target, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::Matchers
WithinUlpsMatcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    WithinUlpsMatcher::WithinUlpsMatcher(double target, uint64_t ulps, Detail::FloatingPointKind baseType)$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
WithinUlpsMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    WithinUlpsMatcher::WithinUlpsMatcher(double target, uint64_t ulps, Detail::FloatingPointKind baseType)$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
Writer	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        enum class Writer {$/;"	c	class:Catch::JsonReporter
X	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        X() : a(4), b(2), c(7) {}$/;"	f	struct:A::X
X	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        X(int v) : a(v), b(2), c(7) {}$/;"	f	struct:A::X
X	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct X$/;"	s	namespace:A	file:
XmlEncode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlEncode::XmlEncode( StringRef str, ForWhat forWhat )$/;"	f	class:Catch::XmlEncode
XmlEncode	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlEncode::XmlEncode( StringRef str, ForWhat forWhat )$/;"	f	class:Catch::XmlEncode
XmlEncode	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^    class XmlEncode {$/;"	c	namespace:Catch
XmlFormatting	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^    enum class XmlFormatting {$/;"	c	namespace:Catch
XmlReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlReporter::XmlReporter( ReporterConfig&& _config )$/;"	f	class:Catch::XmlReporter
XmlReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    XmlReporter::XmlReporter( ReporterConfig&& _config )$/;"	f	class:Catch::XmlReporter
XmlReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^    class XmlReporter : public StreamingReporterBase {$/;"	c	namespace:Catch
XmlWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )$/;"	f	class:Catch::XmlWriter
XmlWriter	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )$/;"	f	class:Catch::XmlWriter
XmlWriter	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^    class XmlWriter {$/;"	c	namespace:Catch
Y	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        Y() : a(4), b(2), c(7) {}$/;"	f	struct:B::Y
Y	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        Y(int v) : a(v), b(2), c(7) {}$/;"	f	struct:B::Y
Y	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct Y$/;"	s	namespace:B	file:
Yellow	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Yellow,$/;"	e	enum:Catch::ColourMode::Code
Yes	leak_demo/Catch2/src/catch2/internal/catch_case_sensitive.hpp	/^    enum class CaseSensitive { Yes, No };$/;"	m	class:Catch::CaseSensitive
ZeroLiteralAsPointer	leak_demo/Catch2/tests/SelfTest/helpers/type_with_lit_0_comparisons.hpp	/^struct ZeroLiteralAsPointer {$/;"	s
ZeroLiteralConsteval	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct ZeroLiteralConsteval {$/;"	s	namespace:__anon59	file:
_BSD_SOURCE	leak_demo/Catch2/extras/catch_amalgamated.hpp	276;"	d
_BSD_SOURCE	leak_demo/Catch2/src/catch2/internal/catch_compiler_capabilities.hpp	191;"	d
__has_extension	leak_demo/Catch2/src/catch2/internal/catch_platform.hpp	15;"	d
__has_include	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
__has_include	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	11;"	d	file:
__init__	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def __init__(self):$/;"	m	class:Version
_a	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Approx operator ""_a(long double val) {$/;"	f	namespace:Catch::literals
_a	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Approx operator ""_a(unsigned long long val) {$/;"	f	namespace:Catch::literals
_a	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    Approx operator ""_a(long double val) {$/;"	f	namespace:Catch::literals
_a	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    Approx operator ""_a(unsigned long long val) {$/;"	f	namespace:Catch::literals
_branch	leak_demo/Catch2/.conan/build.py	/^    def _branch(self):$/;"	m	class:BuilderSettings
_compilers_minimum_version	leak_demo/Catch2/conanfile.py	/^    def _compilers_minimum_version(self):$/;"	m	class:CatchConan
_get_unapprovedPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def _get_unapprovedPath(path, baseName):$/;"	f
_min_cppstd	leak_demo/Catch2/conanfile.py	/^    def _min_cppstd(self):$/;"	m	class:CatchConan
_version	leak_demo/Catch2/.conan/build.py	/^    def _version(self):$/;"	m	class:BuilderSettings
a	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    result_type a() const { return m_a; }$/;"	f	class:Catch::uniform_floating_point_distribution
a	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    result_type a() const { return transposeBack(m_a); }$/;"	f	class:Catch::uniform_integer_distribution
a	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        int a;$/;"	m	struct:A::X	file:
a	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        int a;$/;"	m	struct:B::Y	file:
abortAfter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int Config::abortAfter() const                     { return m_data.abortAfter; }$/;"	f	class:Catch::Config
abortAfter	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    int Config::abortAfter() const                     { return m_data.abortAfter; }$/;"	f	class:Catch::Config
abortAfter	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        int abortAfter = -1;$/;"	m	struct:Catch::ConfigData
aborting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool RunContext::aborting() const {$/;"	f	class:Catch::RunContext
aborting	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestCaseStats
aborting	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        bool aborting;$/;"	m	struct:Catch::TestRunStats
aborting	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    bool RunContext::aborting() const {$/;"	f	class:Catch::RunContext
accept_many_t	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^        struct accept_many_t {};$/;"	s	namespace:Catch::Clara
acquire	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                acquire( TrackerContext& ctx,$/;"	f	struct:Catch::Generators::__anon123::final
acquire	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SectionTracker& SectionTracker::acquire( TrackerContext& ctx, NameAndLocationRef const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
acquire	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^                acquire( TrackerContext& ctx,$/;"	f	struct:Catch::Generators::__anon21::final
acquire	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    SectionTracker& SectionTracker::acquire( TrackerContext& ctx, NameAndLocationRef const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
acquireGeneratorTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IGeneratorTracker* acquireGeneratorTracker(StringRef generatorName, SourceLineInfo const& lineInfo ) {$/;"	f	namespace:Catch::Generators
acquireGeneratorTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RunContext::acquireGeneratorTracker( StringRef generatorName,$/;"	f	class:Catch::RunContext
acquireGeneratorTracker	leak_demo/Catch2/src/catch2/generators/catch_generators.cpp	/^    IGeneratorTracker* acquireGeneratorTracker(StringRef generatorName, SourceLineInfo const& lineInfo ) {$/;"	f	namespace:Catch::Generators
acquireGeneratorTracker	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    RunContext::acquireGeneratorTracker( StringRef generatorName,$/;"	f	class:Catch::RunContext
add	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TagAliasRegistry::add( std::string const& alias, std::string const& tag, SourceLineInfo const& lineInfo ) {$/;"	f	class:Catch::TagAliasRegistry
add	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TagInfo::add( StringRef spelling ) {$/;"	f	class:Catch::TagInfo
add	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^    void TagInfo::add( StringRef spelling ) {$/;"	f	class:Catch::TagInfo
add	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.cpp	/^    void TagAliasRegistry::add( std::string const& alias, std::string const& tag, SourceLineInfo const& lineInfo ) {$/;"	f	class:Catch::TagAliasRegistry
addCharToPattern	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        inline void addCharToPattern(char c) {$/;"	f	class:Catch::TestSpecParser
addChild	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ITracker::addChild( ITrackerPtr&& child ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
addChild	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void ITracker::addChild( ITrackerPtr&& child ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
addFilenameTag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestCaseInfo::addFilenameTag() {$/;"	f	class:Catch::TestCaseInfo
addFilenameTag	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    void TestCaseInfo::addFilenameTag() {$/;"	f	class:Catch::TestCaseInfo
addFilter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::addFilter() {$/;"	f	class:Catch::TestSpecParser
addFilter	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::addFilter() {$/;"	f	class:Catch::TestSpecParser
addIndentAndSuffix	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Column::const_iterator::addIndentAndSuffix( size_t position,$/;"	f	class:Catch::TextFlow::Column::const_iterator
addIndentAndSuffix	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Column::const_iterator::addIndentAndSuffix( size_t position,$/;"	f	class:Catch::TextFlow::Column::const_iterator
addInitialFilters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SectionTracker::addInitialFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addInitialFilters	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void SectionTracker::addInitialFilters( std::vector<std::string> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addListener	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::addListener( IEventListenerPtr&& listener ) {$/;"	f	class:Catch::MultiReporter
addListener	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::addListener( IEventListenerPtr&& listener ) {$/;"	f	class:Catch::MultiReporter
addNamePattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::addNamePattern() {$/;"	f	class:Catch::TestSpecParser
addNamePattern	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::addNamePattern() {$/;"	f	class:Catch::TestSpecParser
addNextFilters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SectionTracker::addNextFilters( std::vector<StringRef> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addNextFilters	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void SectionTracker::addNextFilters( std::vector<StringRef> const& filters ) {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
addReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::addReporter( IEventListenerPtr&& reporter ) {$/;"	f	class:Catch::MultiReporter
addReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::addReporter( IEventListenerPtr&& reporter ) {$/;"	f	class:Catch::MultiReporter
addRow	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            SummaryColumn&& addRow( std::uint64_t count ) && {$/;"	f	class:Catch::__anon134::SummaryColumn
addRow	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            SummaryColumn&& addRow( std::uint64_t count ) && {$/;"	f	class:Catch::__anon11::SummaryColumn
addSingleton	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void addSingleton(ISingleton* singleton ) {$/;"	f	namespace:Catch
addSingleton	leak_demo/Catch2/src/catch2/internal/catch_singletons.cpp	/^    void addSingleton(ISingleton* singleton ) {$/;"	f	namespace:Catch
addTagPattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::addTagPattern() {$/;"	f	class:Catch::TestSpecParser
addTagPattern	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::addTagPattern() {$/;"	f	class:Catch::TestSpecParser
add_entry	database_binary_and_hash_search.c	/^void add_entry(char *const *argv)$/;"	f
add_generator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        add_generator( U&& val ) {$/;"	f	class:Catch::Generators::Generators
add_generator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        void add_generator( GeneratorWrapper<T>&& generator ) {$/;"	f	class:Catch::Generators::Generators
add_generator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        void add_generator( T const& val ) {$/;"	f	class:Catch::Generators::Generators
add_generator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        void add_generator( T&& val ) {$/;"	f	class:Catch::Generators::Generators
add_generators	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        template <typename U> void add_generators( U&& valueOrGenerator ) {$/;"	f	class:Catch::Generators::Generators
add_generators	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        void add_generators( U&& valueOrGenerator, Gs&&... moreGenerators ) {$/;"	f	class:Catch::Generators::Generators
adjustString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string CasedString::adjustString( std::string const& str ) const {$/;"	f	class:Catch::Matchers::CasedString
adjustString	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    std::string CasedString::adjustString( std::string const& str ) const {$/;"	f	class:Catch::Matchers::CasedString
adl	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace adl {$/;"	n	file:
advance	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static void advance(int ticks = 1) {$/;"	f	struct:__anon83::manual_clock
all	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string TagInfo::all() const {$/;"	f	class:Catch::TagInfo
all	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^    std::string TagInfo::all() const {$/;"	f	class:Catch::TagInfo
allEventsEnded	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^        bool allEventsEnded() const {$/;"	f	struct:ValidatingTestListener::EventCounter
allOk	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Counts::allOk() const {$/;"	f	class:Catch::Counts
allOk	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    bool Counts::allOk() const {$/;"	f	class:Catch::Counts
allPassed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Counts::allPassed() const {$/;"	f	class:Catch::Counts
allPassed	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    bool Counts::allPassed() const {$/;"	f	class:Catch::Counts
allocate	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        T *allocate( size_type n ) {$/;"	f	struct:__anon53::minimal_allocator
allowThrows	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::allowThrows() const                   { return !m_data.noThrow; }$/;"	f	class:Catch::Config
allowThrows	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::allowThrows() const                   { return !m_data.noThrow; }$/;"	f	class:Catch::Config
allowZeroTests	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool allowZeroTests = false;$/;"	m	struct:Catch::ConfigData
almostEqualUlps	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool almostEqualUlps(FP lhs, FP rhs, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::__anon129
almostEqualUlps	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    bool almostEqualUlps(FP lhs, FP rhs, uint64_t maxUlpDiff) {$/;"	f	namespace:Catch::__anon14
altStackMem	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static char* altStackMem = nullptr;$/;"	m	namespace:Catch	file:
altStackMem	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static char* altStackMem = nullptr;$/;"	m	namespace:Catch	file:
altStackSize	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static std::size_t altStackSize = 0;$/;"	m	namespace:Catch	file:
altStackSize	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static std::size_t altStackSize = 0;$/;"	m	namespace:Catch	file:
alwaysFalse	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static bool alwaysFalse( int ) { return false; }$/;"	f	namespace:__anon75
alwaysTrue	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static bool alwaysTrue( int ) { return true; }$/;"	f	namespace:__anon75
always_false	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    struct always_false : std::false_type {};$/;"	s	namespace:Catch
always_true	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    static bool always_true(int) {$/;"	f	namespace:__anon93
always_true	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^struct always_true {$/;"	s	namespace:adl	file:
analyse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            SampleAnalysis analyse(const IConfig &cfg, FDuration* first, FDuration* last) {$/;"	f	namespace:Catch::Benchmark::Detail
analyse	leak_demo/Catch2/src/catch2/benchmark/detail/catch_analyse.cpp	/^            SampleAnalysis analyse(const IConfig &cfg, FDuration* first, FDuration* last) {$/;"	f	namespace:Catch::Benchmark::Detail
analyse_samples	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bootstrap_analysis analyse_samples(double confidence_level,$/;"	f	namespace:Catch::Benchmark::Detail
analyse_samples	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            bootstrap_analysis analyse_samples(double confidence_level,$/;"	f	namespace:Catch::Benchmark::Detail
appendCommaNewline	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonUtils::appendCommaNewline( std::ostream& os,$/;"	f	class:Catch::JsonUtils
appendCommaNewline	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    void JsonUtils::appendCommaNewline( std::ostream& os,$/;"	f	class:Catch::JsonUtils
applies	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool applies(TestCaseProperties tcp) {$/;"	f	namespace:Catch::__anon109
applies	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        bool applies(TestCaseProperties tcp) {$/;"	f	namespace:Catch::__anon35
applyCommandLine	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int Session::applyCommandLine( int argc, char const * const * argv ) {$/;"	f	class:Catch::Session
applyCommandLine	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int Session::applyCommandLine( int argc, wchar_t const * const * argv ) {$/;"	f	class:Catch::Session
applyCommandLine	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    int Session::applyCommandLine( int argc, char const * const * argv ) {$/;"	f	class:Catch::Session
applyCommandLine	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    int Session::applyCommandLine( int argc, wchar_t const * const * argv ) {$/;"	f	class:Catch::Session
applyFilenamesAsTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void applyFilenamesAsTags() {$/;"	f	namespace:Catch::__anon108
applyFilenamesAsTags	leak_demo/Catch2/src/catch2/catch_session.cpp	/^        void applyFilenamesAsTags() {$/;"	f	namespace:Catch::__anon36
applyFormatting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlWriter::applyFormatting(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
applyFormatting	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void XmlWriter::applyFormatting(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
approve	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def approve(baseName, args):$/;"	f
approveFile	leak_demo/Catch2/tools/scripts/approve.py	/^def approveFile( approvedFile, unapprovedFile ):$/;"	f
approx	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        mutable Catch::Approx approx = Catch::Approx::custom();$/;"	m	class:Catch::Matchers::final
array_cat	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        std::array<void const*, N + M> array_cat(std::array<void const*, N> && lhs, std::array<void const*, M> && rhs) {$/;"	f	namespace:Catch::Matchers::Detail
array_cat	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        std::array<void const*, N+1> array_cat(std::array<void const*, N> && lhs, void const* rhs) {$/;"	f	namespace:Catch::Matchers::Detail
array_cat	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        std::array<void const*, N+1> array_cat(void const* lhs, std::array<void const*, N> && rhs) {$/;"	f	namespace:Catch::Matchers::Detail
as	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    struct as {};$/;"	s	namespace:Catch::Generators
asAssertion	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        AssertionStats const& AssertionOrBenchmarkResult::asAssertion() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
asAssertion	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^        AssertionStats const& AssertionOrBenchmarkResult::asAssertion() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
asBenchmark	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        BenchmarkStats<> const& AssertionOrBenchmarkResult::asBenchmark() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
asBenchmark	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^        BenchmarkStats<> const& AssertionOrBenchmarkResult::asBenchmark() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
as_written	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/TextFlow.tests.cpp	/^    static std::string as_written(Column const& c) {$/;"	f	namespace:__anon90
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void CompactReporter::assertionEnded( AssertionStats const& _assertionStats ) {$/;"	f	class:Catch::CompactReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void CumulativeReporterBase::assertionEnded($/;"	f	class:Catch::CumulativeReporterBase
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::assertionEnded( AssertionStats const& ) {}$/;"	f	class:Catch::EventListenerBase
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JsonReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JunitReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::MultiReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::assertionEnded(AssertionResult&& result) {$/;"	f	class:Catch::RunContext
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TAPReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::TAPReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TeamCityReporter::assertionEnded(AssertionStats const& assertionStats) {$/;"	f	class:Catch::TeamCityReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::XmlReporter
assertionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::ConsoleReporter
assertionEnded	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::assertionEnded(AssertionResult&& result) {$/;"	f	class:Catch::RunContext
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::assertionEnded( AssertionStats const& _assertionStats ) {$/;"	f	class:Catch::CompactReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::ConsoleReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::assertionEnded($/;"	f	class:Catch::CumulativeReporterBase
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::assertionEnded( AssertionStats const& ) {}$/;"	f	class:Catch::EventListenerBase
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JsonReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::JunitReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::MultiReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^    void TAPReporter::assertionEnded(AssertionStats const& _assertionStats) {$/;"	f	class:Catch::TAPReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^    void TeamCityReporter::assertionEnded(AssertionStats const& assertionStats) {$/;"	f	class:Catch::TeamCityReporter
assertionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::assertionEnded( AssertionStats const& assertionStats ) {$/;"	f	class:Catch::XmlReporter
assertionEndedReceivedByListener	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^    static bool assertionEndedReceivedByListener = false;$/;"	m	namespace:__anon46	file:
assertionPassed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::assertionPassed() {$/;"	f	class:Catch::RunContext
assertionPassed	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::assertionPassed() {$/;"	f	class:Catch::RunContext
assertionResult	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        AssertionResult assertionResult;$/;"	m	struct:Catch::AssertionStats
assertionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
assertionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::assertionStarting( AssertionInfo const& \/*assertionInfo*\/ ) {}$/;"	f	class:Catch::JsonReporter
assertionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::assertionStarting( AssertionInfo const& assertionInfo ) {$/;"	f	class:Catch::MultiReporter
assertionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::assertionStarting( AssertionInfo const& ) { }$/;"	f	class:Catch::XmlReporter
assertionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::assertionStarting(AssertionInfo const&) {}$/;"	f	class:Catch::ConsoleReporter
assertionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::assertionStarting(AssertionInfo const&) {}$/;"	f	class:Catch::ConsoleReporter
assertionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::assertionStarting( AssertionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
assertionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::assertionStarting( AssertionInfo const& \/*assertionInfo*\/ ) {}$/;"	f	class:Catch::JsonReporter
assertionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::assertionStarting( AssertionInfo const& assertionInfo ) {$/;"	f	class:Catch::MultiReporter
assertionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::assertionStarting( AssertionInfo const& ) { }$/;"	f	class:Catch::XmlReporter
assertionStartingReceivedByListener	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^    static bool assertionStartingReceivedByListener = false;$/;"	m	namespace:__anon46	file:
assertion_starting_events_seen	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    static size_t assertion_starting_events_seen = 0;$/;"	m	namespace:__anon45	file:
assertions	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^        Counts assertions;$/;"	m	struct:Catch::Totals
assertions	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        Counts assertions;$/;"	m	struct:Catch::SectionStats
assertionsAndBenchmarks	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            std::vector<Detail::AssertionOrBenchmarkResult> assertionsAndBenchmarks;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
autoTestReg	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static AutoTestReg autoTestReg;$/;"	m	namespace:__anon62	file:
avoidOutOfLineVirtualCompilerWarning	leak_demo/Catch2/fuzzing/NullOStream.cpp	/^void NullOStream::avoidOutOfLineVirtualCompilerWarning()$/;"	f	class:NullOStream
b	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    result_type b() const { return m_b; }$/;"	f	class:Catch::uniform_floating_point_distribution
b	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    result_type b() const { return transposeBack(m_ab_distance + m_a - 1); }$/;"	f	class:Catch::uniform_integer_distribution
b	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        int b;$/;"	m	struct:A::X	file:
b	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        int b;$/;"	m	struct:B::Y	file:
backingTags	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        std::string backingTags;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
bar	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace bar {$/;"	n	file:
base	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^        base(int i_) :i(i_) {}$/;"	f	struct:__anon78::base
base	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^    struct base {$/;"	s	namespace:__anon78	file:
base_args	leak_demo/Catch2/tools/scripts/approvalTests.py	/^base_args = ["--order", "lex", "--rng-seed", "1", "--colour-mode", "none"]$/;"	v
base_dir	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^base_dir = [x for x in os.scandir(catchPath + '\/src') if x.name == 'catch2']$/;"	v
basic_iterator	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        basic_iterator( constify_t<with_mocked_iterator_access>* origin,$/;"	f	class:with_mocked_iterator_access::basic_iterator
basic_iterator	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    class basic_iterator {$/;"	c	struct:with_mocked_iterator_access
bazelShardingOptions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        struct bazelShardingOptions {$/;"	s	namespace:Catch::__anon106	file:
bazelShardingOptions	leak_demo/Catch2/src/catch2/catch_config.cpp	/^        struct bazelShardingOptions {$/;"	s	namespace:Catch::__anon3	file:
begin	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        constexpr const_iterator begin() const { return m_start; }$/;"	f	class:Catch::StringRef
begin	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        constexpr const_iterator begin() const { return m_start; }$/;"	f	class:Catch::StringRef
begin	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            const_iterator begin() const { return const_iterator( *this ); }$/;"	f	class:Catch::TextFlow::Column
begin	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            iterator begin() const { return iterator( *this ); }$/;"	f	class:Catch::TextFlow::Columns
begin	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^    const_iterator begin() const { return nullptr; }$/;"	f	struct:UsesSentinel
begin	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anon69::streamable_range
begin	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anon69::stringmaker_range
begin	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anon70::disabled_range
begin	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator begin() const { return int_iterator{ 1 }; }$/;"	f	struct:__anon70::just_range
begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend const_iterator begin( needs_ADL_begin const& lhs ) {$/;"	f	class:unrelated::needs_ADL_begin
begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    const_iterator begin() const { return { this, 0 }; }$/;"	f	struct:with_mocked_iterator_access
begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    iterator begin() const { return { m_elements.begin(), m_elements.end() }; }$/;"	f	class:has_different_begin_end_types
begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    iterator begin() { return { this, 0 }; }$/;"	f	struct:with_mocked_iterator_access
benchmark	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^            Detail::BenchmarkFunction benchmark;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
benchmarkConfidenceInterval	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    double Config::benchmarkConfidenceInterval() const            { return m_data.benchmarkConfidenceInterval; }$/;"	f	class:Catch::Config
benchmarkConfidenceInterval	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    double Config::benchmarkConfidenceInterval() const            { return m_data.benchmarkConfidenceInterval; }$/;"	f	class:Catch::Config
benchmarkConfidenceInterval	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        double benchmarkConfidenceInterval = 0.95;$/;"	m	struct:Catch::ConfigData
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void CumulativeReporterBase::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::CumulativeReporterBase
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	class:Catch::JsonReporter
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) {$/;"	f	class:Catch::MultiReporter
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::benchmarkEnded( BenchmarkStats<> const& stats ) {$/;"	f	class:Catch::RunContext
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::XmlReporter
benchmarkEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkEnded(BenchmarkStats<> const& stats) {$/;"	f	class:Catch::ConsoleReporter
benchmarkEnded	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::benchmarkEnded( BenchmarkStats<> const& stats ) {$/;"	f	class:Catch::RunContext
benchmarkEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkEnded(BenchmarkStats<> const& stats) {$/;"	f	class:Catch::ConsoleReporter
benchmarkEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::CumulativeReporterBase
benchmarkEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::benchmarkEnded( BenchmarkStats<> const& ) {}$/;"	f	class:Catch::JsonReporter
benchmarkEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) {$/;"	f	class:Catch::MultiReporter
benchmarkEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkEnded(BenchmarkStats<> const& benchmarkStats) {$/;"	f	class:Catch::XmlReporter
benchmarkFailed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::benchmarkFailed( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkFailed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::benchmarkFailed( StringRef error ) { (void)error; }$/;"	f	class:Catch::JsonReporter
benchmarkFailed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::benchmarkFailed( StringRef error ) {$/;"	f	class:Catch::MultiReporter
benchmarkFailed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::benchmarkFailed( StringRef error ) {$/;"	f	class:Catch::RunContext
benchmarkFailed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::benchmarkFailed(StringRef error) {$/;"	f	class:Catch::XmlReporter
benchmarkFailed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkFailed( StringRef error ) {$/;"	f	class:Catch::ConsoleReporter
benchmarkFailed	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::benchmarkFailed( StringRef error ) {$/;"	f	class:Catch::RunContext
benchmarkFailed	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkFailed( StringRef error ) {$/;"	f	class:Catch::ConsoleReporter
benchmarkFailed	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::benchmarkFailed( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkFailed	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::benchmarkFailed( StringRef error ) { (void)error; }$/;"	f	class:Catch::JsonReporter
benchmarkFailed	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::benchmarkFailed( StringRef error ) {$/;"	f	class:Catch::MultiReporter
benchmarkFailed	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkFailed(StringRef error) {$/;"	f	class:Catch::XmlReporter
benchmarkNoAnalysis	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::benchmarkNoAnalysis() const                      { return m_data.benchmarkNoAnalysis; }$/;"	f	class:Catch::Config
benchmarkNoAnalysis	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::benchmarkNoAnalysis() const                      { return m_data.benchmarkNoAnalysis; }$/;"	f	class:Catch::Config
benchmarkNoAnalysis	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool benchmarkNoAnalysis = false;$/;"	m	struct:Catch::ConfigData
benchmarkPreparing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::benchmarkPreparing( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkPreparing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::benchmarkPreparing( StringRef name ) { (void)name; }$/;"	f	class:Catch::JsonReporter
benchmarkPreparing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::MultiReporter
benchmarkPreparing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::RunContext
benchmarkPreparing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::XmlReporter
benchmarkPreparing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::ConsoleReporter
benchmarkPreparing	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::RunContext
benchmarkPreparing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::ConsoleReporter
benchmarkPreparing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::benchmarkPreparing( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkPreparing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::benchmarkPreparing( StringRef name ) { (void)name; }$/;"	f	class:Catch::JsonReporter
benchmarkPreparing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::MultiReporter
benchmarkPreparing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkPreparing( StringRef name ) {$/;"	f	class:Catch::XmlReporter
benchmarkResamples	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    unsigned int Config::benchmarkResamples() const               { return m_data.benchmarkResamples; }$/;"	f	class:Catch::Config
benchmarkResamples	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    unsigned int Config::benchmarkResamples() const               { return m_data.benchmarkResamples; }$/;"	f	class:Catch::Config
benchmarkResamples	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int benchmarkResamples = 100'000;$/;"	m	struct:Catch::ConfigData
benchmarkSamples	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    unsigned int Config::benchmarkSamples() const                 { return m_data.benchmarkSamples; }$/;"	f	class:Catch::Config
benchmarkSamples	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    unsigned int Config::benchmarkSamples() const                 { return m_data.benchmarkSamples; }$/;"	f	class:Catch::Config
benchmarkSamples	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int benchmarkSamples = 100;$/;"	m	struct:Catch::ConfigData
benchmarkStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	class:Catch::JsonReporter
benchmarkStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) {$/;"	f	class:Catch::MultiReporter
benchmarkStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::benchmarkStarting( BenchmarkInfo const& info ) {$/;"	f	class:Catch::RunContext
benchmarkStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::benchmarkStarting(BenchmarkInfo const &info) {$/;"	f	class:Catch::XmlReporter
benchmarkStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::benchmarkStarting(BenchmarkInfo const& info) {$/;"	f	class:Catch::ConsoleReporter
benchmarkStarting	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::benchmarkStarting( BenchmarkInfo const& info ) {$/;"	f	class:Catch::RunContext
benchmarkStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::benchmarkStarting(BenchmarkInfo const& info) {$/;"	f	class:Catch::ConsoleReporter
benchmarkStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
benchmarkStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::benchmarkStarting( BenchmarkInfo const& ) {}$/;"	f	class:Catch::JsonReporter
benchmarkStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) {$/;"	f	class:Catch::MultiReporter
benchmarkStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::benchmarkStarting(BenchmarkInfo const &info) {$/;"	f	class:Catch::XmlReporter
benchmarkWarmupTime	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::chrono::milliseconds Config::benchmarkWarmupTime() const { return std::chrono::milliseconds(m_data.benchmarkWarmupTime); }$/;"	f	class:Catch::Config
benchmarkWarmupTime	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    std::chrono::milliseconds Config::benchmarkWarmupTime() const { return std::chrono::milliseconds(m_data.benchmarkWarmupTime); }$/;"	f	class:Catch::Config
bin_name	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^bin_name = os.path.basename(bin_path)$/;"	v
bin_path	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^bin_path = os.path.abspath(sys.argv[1])$/;"	v
bin_path	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^bin_path = os.path.abspath(sys.argv[1])$/;"	v
bool	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^        virtual auto hasGenerator() const -> bool = 0;$/;"	m	class:Catch::IGeneratorTracker
bool	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        auto allowThrows() const -> bool;$/;"	m	class:Catch::AssertionHandler
bootstrap	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bootstrap( double confidence_level,$/;"	f	namespace:Catch::Benchmark::Detail
bootstrap	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            bootstrap( double confidence_level,$/;"	f	namespace:Catch::Benchmark::Detail
bootstrap_analysis	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^            struct bootstrap_analysis {$/;"	s	namespace:Catch::Benchmark::Detail
branchName	leak_demo/Catch2/src/catch2/catch_version.hpp	/^        char const * const branchName;$/;"	m	struct:Catch::Version
build	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    def build(self):$/;"	m	class:TestPackageConan
build	leak_demo/Catch2/conanfile.py	/^    def build(self):$/;"	m	class:CatchConan
buildMarkdown	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def buildMarkdown(toc_headlines, body, spacer=0, placeholder=None):$/;"	f
buildNumber	leak_demo/Catch2/src/catch2/catch_version.hpp	/^        unsigned int const buildNumber;$/;"	m	struct:Catch::Version
build_dir_path	leak_demo/Catch2/tests/TestScripts/testConfigureDefaultReporter.py	/^build_dir_path = os.path.join(os.path.abspath(sys.argv[2]), 'CMakeConfigTests', 'DefaultReporter')$/;"	v
build_dir_path	leak_demo/Catch2/tests/TestScripts/testConfigureDisable.py	/^build_dir_path = os.path.join(os.path.abspath(sys.argv[2]), 'CMakeConfigTests', 'Disable')$/;"	v
build_dir_path	leak_demo/Catch2/tests/TestScripts/testConfigureDisableStringification.py	/^build_dir_path = os.path.join(os.path.abspath(sys.argv[2]), 'CMakeConfigTests', 'DisableStringification')$/;"	v
build_dir_path	leak_demo/Catch2/tests/TestScripts/testConfigureExperimentalRedirect.py	/^build_dir_path = os.path.join(os.path.abspath(sys.argv[2]), 'CMakeConfigTests', 'ExperimentalRedirect')$/;"	v
build_path	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    build_path = build_project(sources_dir, output_base_path, catch2_path)$/;"	v
build_project	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def build_project(sources_dir, output_base_path, catch2_path):$/;"	f
builder	leak_demo/Catch2/.conan/build.py	/^    builder = ConanMultiPackager($/;"	v	class:BuilderSettings
c	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.hpp	/^        char c;$/;"	m	struct:Catch::lineOfChars
c	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        int c;$/;"	m	struct:A::X	file:
c	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        int c;$/;"	m	struct:B::Y	file:
calcLength	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void Column::const_iterator::calcLength() {$/;"	f	class:Catch::TextFlow::Column::const_iterator
calcLength	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        void Column::const_iterator::calcLength() {$/;"	f	class:Catch::TextFlow::Column::const_iterator
calcLength	leak_demo/Catch2/third_party/clara.hpp	/^            void calcLength() {$/;"	f	class:clara::TextFlow::Column::iterator
calculate_max_steps_in_one_go	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^        constexpr std::uint32_t calculate_max_steps_in_one_go(float gamma) {$/;"	f	namespace:Catch::Detail
calculate_max_steps_in_one_go	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^        constexpr std::uint64_t calculate_max_steps_in_one_go(double gamma) {$/;"	f	namespace:Catch::Detail
call	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                    void call(Chronometer meter, std::false_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                    void call(Chronometer meter, std::true_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                    void call(Chronometer meter, std::false_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                    void call(Chronometer meter, std::true_type) const {$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
call_count	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^    size_t call_count = 0;$/;"	m	namespace:__anon66	file:
callable	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                struct callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
callable	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                struct callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
captureValue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Capturer::captureValue( size_t index, std::string const& value ) {$/;"	f	class:Catch::Capturer
captureValue	leak_demo/Catch2/src/catch2/catch_message.cpp	/^    void Capturer::captureValue( size_t index, std::string const& value ) {$/;"	f	class:Catch::Capturer
captureValues	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        void captureValues( size_t index, T const& value ) {$/;"	f	class:Catch::Capturer
captureValues	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        void captureValues( size_t index, T const& value, Ts const&... values ) {$/;"	f	class:Catch::Capturer
capture_by_value	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    struct capture_by_value$/;"	s	namespace:Catch
capture_by_value	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    struct capture_by_value<std::partial_ordering> : std::true_type {};$/;"	s	namespace:Catch
capture_by_value	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    struct capture_by_value<std::strong_ordering> : std::true_type {};$/;"	s	namespace:Catch
capture_by_value	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^    struct capture_by_value<std::weak_ordering> : std::true_type {};$/;"	s	namespace:Catch
capture_by_value	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct capture_by_value<TypeWithConstevalLit0Comparison> : std::true_type {};$/;"	s	namespace:Catch	file:
capturedExpression	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	/^        StringRef capturedExpression;$/;"	m	struct:Catch::AssertionInfo
cardinality	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            size_t ParserBase::cardinality() const { return 1; }$/;"	f	class:Catch::Clara::Detail::ParserBase
cardinality	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            size_t ParserBase::cardinality() const { return 1; }$/;"	f	class:Catch::Clara::Detail::ParserBase
caseSensitivitySuffix	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef CasedString::caseSensitivitySuffix() const {$/;"	f	class:Catch::Matchers::CasedString
caseSensitivitySuffix	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    StringRef CasedString::caseSensitivitySuffix() const {$/;"	f	class:Catch::Matchers::CasedString
catch2_path	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    catch2_path = sys.argv[1]$/;"	v
catch2_source_path	leak_demo/Catch2/tests/TestScripts/testConfigureDefaultReporter.py	/^catch2_source_path = os.path.abspath(sys.argv[1])$/;"	v
catch2_source_path	leak_demo/Catch2/tests/TestScripts/testConfigureDisable.py	/^catch2_source_path = os.path.abspath(sys.argv[1])$/;"	v
catch2_source_path	leak_demo/Catch2/tests/TestScripts/testConfigureDisableStringification.py	/^catch2_source_path = os.path.abspath(sys.argv[1])$/;"	v
catch2_source_path	leak_demo/Catch2/tests/TestScripts/testConfigureExperimentalRedirect.py	/^catch2_source_path = os.path.abspath(sys.argv[1])$/;"	v
catchPath	leak_demo/Catch2/tools/scripts/scriptCommon.py	/^catchPath = os.path.dirname(os.path.dirname(os.path.realpath( os.path.dirname(sys.argv[0]))))$/;"	v
catch_path	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^std::string catch_path(std::string path) {$/;"	f
catch_strnlen	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        inline std::size_t catch_strnlen(const char *str, std::size_t n) {$/;"	f	namespace:Catch::Detail
catch_test_names	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    catch_test_names = [escape_catch2_test_name(name) for name in get_test_names(build_path)]$/;"	v
cerr	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::ostream& cerr() {$/;"	f	namespace:Catch
cerr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& cerr() { return std::cerr; }$/;"	f	namespace:Catch
cerr	leak_demo/Catch2/src/catch2/internal/catch_stdstreams.cpp	/^    std::ostream& cerr() { return std::cerr; }$/;"	f	namespace:Catch
changedFiles	leak_demo/Catch2/tools/scripts/fixWhitespace.py	/^changedFiles = fixAllFilesInDir(catchPath)$/;"	v
channel	leak_demo/Catch2/.conan/build.py	/^    def channel(self):$/;"	m	class:BuilderSettings
check	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        check=True,$/;"	v
check	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^        check=True,$/;"	v
check_DL_PATHS	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def check_DL_PATHS(ctest_output):$/;"	f
check_element_counts	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^        bool check_element_counts( ForwardIter1 first_1,$/;"	f	namespace:Catch::Detail
check_is_sublist_of	leak_demo/Catch2/tests/TestScripts/testRandomOrder.py	/^def check_is_sublist_of(shorter, longer):$/;"	f
check_licence_in_file	leak_demo/Catch2/tools/scripts/checkLicense.py	/^def check_licence_in_file(filename: str) -> bool:$/;"	f
check_licences	leak_demo/Catch2/tools/scripts/checkLicense.py	/^def check_licences():$/;"	f
check_licences_in_path	leak_demo/Catch2/tools/scripts/checkLicense.py	/^def check_licences_in_path(path: str) -> int:$/;"	f
check_outputs	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def check_outputs(baseName):$/;"	f
childSections	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            std::vector<Detail::unique_ptr<SectionNode>> childSections;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
children	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            ChildNodes children;$/;"	m	struct:Catch::CumulativeReporterBase::Node
chunk	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    GeneratorWrapper<std::vector<T>> chunk(size_t size, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
clara	leak_demo/Catch2/third_party/clara.hpp	/^namespace clara { namespace TextFlow {$/;"	n
clara	leak_demo/Catch2/third_party/clara.hpp	/^namespace clara {$/;"	n
className	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        StringRef className;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
classify_outliers	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            classify_outliers( double const* first, double const* last ) {$/;"	f	namespace:Catch::Benchmark::Detail
classify_outliers	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            classify_outliers( double const* first, double const* last ) {$/;"	f	namespace:Catch::Benchmark::Detail
cleanUp	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void cleanUp() {$/;"	f	namespace:Catch
cleanUp	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^    void cleanUp() {$/;"	f	namespace:Catch
cleanUpContext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void cleanUpContext() {$/;"	f	namespace:Catch
cleanUpContext	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    void cleanUpContext() {$/;"	f	namespace:Catch
cleanupSingletons	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void cleanupSingletons() {$/;"	f	namespace:Catch
cleanupSingletons	leak_demo/Catch2/src/catch2/internal/catch_singletons.cpp	/^    void cleanupSingletons() {$/;"	f	namespace:Catch
cli	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Clara::Parser const& Session::cli() const {$/;"	f	class:Catch::Clara::Session
cli	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Session::cli( Clara::Parser const& newParser ) {$/;"	f	class:Catch::Session
cli	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    Clara::Parser const& Session::cli() const {$/;"	f	class:Catch::Clara::Session
cli	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    void Session::cli( Clara::Parser const& newParser ) {$/;"	f	class:Catch::Session
clockCost	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        double clockCost;$/;"	m	struct:Catch::BenchmarkInfo
clockCost	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        double clockCost;$/;"	m	struct:Catch::BenchmarkInfo
clockResolution	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        double clockResolution;$/;"	m	struct:Catch::BenchmarkInfo
clockResolution	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        double clockResolution;$/;"	m	struct:Catch::BenchmarkInfo
clock_cost	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            EnvironmentEstimate clock_cost;$/;"	m	struct:Catch::Benchmark::Environment
clock_cost	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^            EnvironmentEstimate clock_cost;$/;"	m	struct:Catch::Benchmark::Environment
clock_cost_estimation_iterations	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto clock_cost_estimation_iterations = 10000;$/;"	m	namespace:Catch::Benchmark::Detail
clock_cost_estimation_tick_limit	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto clock_cost_estimation_tick_limit = 100000;$/;"	m	namespace:Catch::Benchmark::Detail
clock_cost_estimation_time	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto clock_cost_estimation_time = std::chrono::milliseconds(10);$/;"	m	namespace:Catch::Benchmark::Detail
clock_cost_estimation_time_limit	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto clock_cost_estimation_time_limit = std::chrono::seconds(1);$/;"	m	namespace:Catch::Benchmark::Detail
clock_resolution	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            EnvironmentEstimate clock_resolution;$/;"	m	struct:Catch::Benchmark::Environment
clock_resolution	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^            EnvironmentEstimate clock_resolution;$/;"	m	struct:Catch::Benchmark::Environment
clock_resolution_estimation_time	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto clock_resolution_estimation_time = std::chrono::milliseconds(500);$/;"	m	namespace:Catch::Benchmark::Detail
clog	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::ostream& clog() {$/;"	f	namespace:Catch
clog	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& clog() { return std::clog; }$/;"	f	namespace:Catch
clog	leak_demo/Catch2/src/catch2/internal/catch_stdstreams.cpp	/^    std::ostream& clog() { return std::clog; }$/;"	f	namespace:Catch
close	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerBase::close() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
close	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void close() {$/;"	f	class:Catch::TablePrinter
close	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::close() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
close	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void close() {$/;"	f	class:Catch::TablePrinter
cmakePath	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^cmakePath = os.path.join(catchPath, 'CMakeLists.txt')$/;"	v
cmake_version	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    cmake_version = get_cmake_version()$/;"	v
cmake_version_regex	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^cmake_version_regex = re.compile('cmake version (\\d+)\\.(\\d+)\\.(\\d+)')$/;"	v
cmdPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^    cmdPath = sys.argv[1]$/;"	v
cmd_position	database_binary_and_hash_search.c	/^    cmd_position        = 2,$/;"	e	enum:constants	file:
cmd_size	database_binary_and_hash_search.c	/^    cmd_size            = 6,$/;"	e	enum:constants	file:
collated_includes	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def collated_includes(folder):$/;"	f
colour	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Colour::Code colour;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
colour	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    Colour::Code colour;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
colourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ColourImpl* colourImpl;$/;"	m	class:Catch::__anon138::TapAssertionPrinter	file:
colourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl* colourImpl;$/;"	m	class:Catch::__anon130::AssertionPrinter	file:
colourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl* colourImpl;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
colourImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    ColourImpl* colourImpl;$/;"	m	class:Catch::__anon9::AssertionPrinter	file:
colourImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    ColourImpl* colourImpl;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
colourImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            ColourImpl* colourImpl;$/;"	m	class:Catch::__anon7::TapAssertionPrinter	file:
colourMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourMode ReporterConfig::colourMode() const { return m_colourMode; }$/;"	f	class:Catch::ReporterConfig
colourMode	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ColourMode colourMode;$/;"	m	struct:Catch::ProcessedReporterSpec
colourMode	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    ColourMode ReporterConfig::colourMode() const { return m_colourMode; }$/;"	f	class:Catch::ReporterConfig
colourMode	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        Optional<ColourMode> const& colourMode() const { return m_colourMode; }$/;"	f	class:Catch::ReporterSpec
common_args	leak_demo/Catch2/tools/scripts/approvalTests.py	/^common_args = ["~[!nonportable]~[!benchmark]~[approvals] *", "-s", "-w", "NoAssertions"] + base_args$/;"	v
compactDimColour	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static constexpr Colour::Code compactDimColour = Colour::FileName;$/;"	m	namespace:Catch::__anon130	file:
compactDimColour	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    static constexpr Colour::Code compactDimColour = Colour::FileName;$/;"	m	namespace:Catch::__anon9	file:
compactFailedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static constexpr Catch::StringRef compactFailedString = "FAILED"_sr;$/;"	m	namespace:Catch::__anon130	file:
compactFailedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static constexpr Catch::StringRef compactFailedString = "failed"_sr;$/;"	m	namespace:Catch::__anon130	file:
compactFailedString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    static constexpr Catch::StringRef compactFailedString = "FAILED"_sr;$/;"	m	namespace:Catch::__anon9	file:
compactFailedString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    static constexpr Catch::StringRef compactFailedString = "failed"_sr;$/;"	m	namespace:Catch::__anon9	file:
compactPassedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static constexpr Catch::StringRef compactPassedString = "PASSED"_sr;$/;"	m	namespace:Catch::__anon130	file:
compactPassedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static constexpr Catch::StringRef compactPassedString = "passed"_sr;$/;"	m	namespace:Catch::__anon130	file:
compactPassedString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    static constexpr Catch::StringRef compactPassedString = "PASSED"_sr;$/;"	m	namespace:Catch::__anon9	file:
compactPassedString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    static constexpr Catch::StringRef compactPassedString = "passed"_sr;$/;"	m	namespace:Catch::__anon9	file:
compare	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int StringRef::compare( StringRef rhs ) const {$/;"	f	class:Catch::StringRef
compare	leak_demo/Catch2/src/catch2/internal/catch_stringref.cpp	/^    int StringRef::compare( StringRef rhs ) const {$/;"	f	class:Catch::StringRef
complete	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::complete() {$/;"	f	class:Catch::AssertionHandler
complete	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::complete() {$/;"	f	class:Catch::AssertionHandler
completeCycle	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerContext::completeCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
completeCycle	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerContext::completeCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
complete_invoke	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^            CompleteType_t<FunctionReturnType<Fun, Args...>> complete_invoke(Fun&& fun, Args&&... args) {$/;"	f	namespace:Catch::Benchmark::Detail
completedCycle	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TrackerContext::completedCycle() const {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
completedCycle	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool TrackerContext::completedCycle() const {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
computeDistance	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    UnsignedIntegerType computeDistance(IntegerType a, IntegerType b) const {$/;"	f	class:Catch::uniform_integer_distribution
computeRejectionThreshold	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    static UnsignedIntegerType computeRejectionThreshold(UnsignedIntegerType ab_distance) {$/;"	f	class:Catch::uniform_integer_distribution
concatenate_file	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^def concatenate_file(out, filename: str, expand_headers: bool) -> int:$/;"	f
concatenated_headers	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^concatenated_headers = set()$/;"	v
confidence_interval	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            double confidence_interval;$/;"	m	struct:Catch::Benchmark::Estimate
confidence_interval	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^            double confidence_interval;$/;"	m	struct:Catch::Benchmark::Estimate
config	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Config& Session::config() {$/;"	f	class:Catch::Session
config	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    Config& Session::config() {$/;"	f	class:Catch::Session
configData	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ConfigData& Session::configData() {$/;"	f	class:Catch::Session
configData	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    ConfigData& Session::configData() {$/;"	f	class:Catch::Session
config_options	leak_demo/Catch2/conanfile.py	/^    def config_options(self):$/;"	m	class:CatchConan
configure	leak_demo/Catch2/conanfile.py	/^    def configure(self):$/;"	m	class:CatchConan
configure_and_build	leak_demo/Catch2/tests/TestScripts/ConfigureTestsCommon.py	/^def configure_and_build(source_path: str, project_path: str, options: List[Tuple[str, str]]):$/;"	f
conn	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^    DBConnection conn;$/;"	m	class:UniqueTestsFixture	file:
const	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const_iterator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Column::const_iterator::const_iterator( Column const& column ): m_column( column ) {$/;"	f	class:Catch::TextFlow::Column::const_iterator
const_iterator	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Column::const_iterator::const_iterator( Column const& column ): m_column( column ) {$/;"	f	class:Catch::TextFlow::Column::const_iterator
const_iterator	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                const_iterator( Column const& column, EndTag ):$/;"	f	class:Catch::TextFlow::Column::const_iterator
const_iterator	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            class const_iterator {$/;"	c	class:Catch::TextFlow::Column
constants	database_binary_and_hash_search.c	/^enum constants{$/;"	g	file:
construct	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                void construct(Args&&... args)$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
constructor_throws	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        [[noreturn]] constructor_throws() {$/;"	f	struct:__anon54::constructor_throws
constructor_throws	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    struct constructor_throws {$/;"	s	namespace:__anon54	file:
contains	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool contains( std::string const& s, std::string const& infix ) {$/;"	f	namespace:Catch
contains	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    bool contains( std::string const& s, std::string const& infix ) {$/;"	f	namespace:Catch
contentLineNdx	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^contentLineNdx = contentLineNo - 1$/;"	v
contentLineNo	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^contentLineNo = 4$/;"	v
contentTitle	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^contentTitle = '**Contents**'$/;"	v
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<Catch::Approx>::convert(Catch::Approx const& value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<char const*>::convert(char const* str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<char*>::convert(char* str) { \/\/ NOLINT(readability-non-const-parameter)$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<char>::convert(char c) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<double>::convert(double value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<float>::convert(float value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<int>::convert(int value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<long long>::convert(long long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<long>::convert(long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<signed char>::convert(signed char value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<std::byte>::convert(std::byte value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<std::string>::convert(const std::string& str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<std::string_view>::convert(std::string_view str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<std::wstring>::convert(const std::wstring& wstr) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<std::wstring_view>::convert(std::wstring_view str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<unsigned char>::convert(unsigned char value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<unsigned int>::convert(unsigned int value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<unsigned long long>::convert(unsigned long long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<unsigned long>::convert(unsigned long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<wchar_t *>::convert(wchar_t * str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string StringMaker<wchar_t const*>::convert(wchar_t const * str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^std::string StringMaker<Catch::Approx>::convert(Catch::Approx const& value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<char const*>::convert(char const* str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<char*>::convert(char* str) { \/\/ NOLINT(readability-non-const-parameter)$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<char>::convert(char c) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<double>::convert(double value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<float>::convert(float value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<int>::convert(int value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<long long>::convert(long long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<long>::convert(long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<signed char>::convert(signed char value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<std::byte>::convert(std::byte value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<std::string>::convert(const std::string& str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<std::string_view>::convert(std::string_view str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<std::wstring>::convert(const std::wstring& wstr) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<std::wstring_view>::convert(std::wstring_view str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<unsigned char>::convert(unsigned char value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<unsigned int>::convert(unsigned int value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<unsigned long long>::convert(unsigned long long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<unsigned long>::convert(unsigned long value) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<wchar_t *>::convert(wchar_t * str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^std::string StringMaker<wchar_t const*>::convert(wchar_t const * str) {$/;"	f	class:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^            convert( const Fake& value ) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^            convert(const Fake& value) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(R C::* p) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(U* p) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(bool b) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(char const* str) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(const std::nullopt_t&) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(const std::optional<T>& optional) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(const std::pair<T1, T2>& pair) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(signed char const* str) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(std::nullptr_t) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        static std::string convert(unsigned char const* str) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        convert( ConvertibleToBool const& convertible_to_bool ) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    static std::string convert(StringMakerException const&) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^        static std::string convert( const has_maker& ) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^        static std::string convert( const has_maker_and_operator& ) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    static std::string convert(stringmaker_range const&) {$/;"	f	struct:Catch::StringMaker
convert	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        convert( with_mocked_iterator_access<T> const& access ) {$/;"	f	struct:Catch::StringMaker
convertInto	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ParserResult convertInto( std::string const& source,$/;"	f	namespace:Catch::Clara::Detail
convertInto	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            ParserResult convertInto( std::string const& source,$/;"	f	namespace:Catch::Clara::Detail
convertInto	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            ParserResult convertInto( std::string const& source, T& target ) {$/;"	f	namespace:Catch::Clara::Detail
convertIntoString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string convertIntoString(StringRef string) {$/;"	f	namespace:Catch::Detail
convertIntoString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string convertIntoString(StringRef string, bool escapeInvisibles) {$/;"	f	namespace:Catch::Detail
convertIntoString	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^    std::string convertIntoString(StringRef string) {$/;"	f	namespace:Catch::Detail
convertIntoString	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^    std::string convertIntoString(StringRef string, bool escapeInvisibles) {$/;"	f	namespace:Catch::Detail
convertToBits	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        uint32_t convertToBits(float f) {$/;"	f	namespace:Catch::Detail
convertToBits	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        uint64_t convertToBits(double d) {$/;"	f	namespace:Catch::Detail
convertToBits	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.cpp	/^        uint32_t convertToBits(float f) {$/;"	f	namespace:Catch::Detail
convertToBits	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.cpp	/^        uint64_t convertToBits(double d) {$/;"	f	namespace:Catch::Detail
convertUnknownEnumToString	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        std::string convertUnknownEnumToString( E e ) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^         std::string> convertUnstreamable(T const& ex) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        std::string> convertUnstreamable( T const& ) {$/;"	f	namespace:Catch::Detail
convertUnstreamable	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        std::string> convertUnstreamable( T const& value ) {$/;"	f	namespace:Catch::Detail
copyright_lines	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^copyright_lines = [$/;"	v
count	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                size_t count() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
count	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^        std::size_t count = 0;$/;"	m	struct:Catch::TagInfo
count_equidistant_floats	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	/^        count_equidistant_floats( FloatType a, FloatType b, FloatType distance ) {$/;"	f	namespace:Catch::Detail
count_sentinel	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^        std::ptrdiff_t count_sentinel( ForwardIter start,$/;"	f	namespace:Catch::Detail
countedNext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool GeneratorUntypedBase::countedNext() {$/;"	f	class:Catch::Generators::GeneratorUntypedBase
countedNext	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.cpp	/^        bool GeneratorUntypedBase::countedNext() {$/;"	f	class:Catch::Generators::GeneratorUntypedBase
counter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::size_t counter;$/;"	m	class:Catch::__anon138::TapAssertionPrinter	file:
counter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            std::size_t counter;$/;"	m	class:Catch::__anon7::TapAssertionPrinter	file:
counter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        std::size_t counter = 0;$/;"	m	class:Catch::final
counter	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^        int counter() { return d_counter++; }$/;"	f	struct:__anon52::Fixture
counting_clock	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    struct counting_clock {$/;"	s	namespace:__anon83	file:
cout	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::ostream& cout() {$/;"	f	namespace:Catch
cout	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& cout() { return std::cout; }$/;"	f	namespace:Catch
cout	leak_demo/Catch2/src/catch2/internal/catch_stdstreams.cpp	/^    std::ostream& cout() { return std::cout; }$/;"	f	namespace:Catch
cov_files	leak_demo/Catch2/tools/misc/appveyorMergeCoverageScript.py	/^    cov_files = list(glob.glob('tests\/cov-report*.bin'))$/;"	v
create	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterRegistry::create( std::string const& name,$/;"	f	class:Catch::ReporterRegistry
create	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    ReporterRegistry::create( std::string const& name,$/;"	f	class:Catch::ReporterRegistry
createConnection	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^    static DBConnection createConnection( std::string const & \/*dbName*\/ ) {$/;"	f	class:DBConnection
createContext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Context::createContext() {$/;"	f	class:Catch::Context
createContext	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    void Context::createContext() {$/;"	f	class:Catch::Context
createGeneratorTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IGeneratorTracker* RunContext::createGeneratorTracker($/;"	f	class:Catch::RunContext
createGeneratorTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IGeneratorTracker* createGeneratorTracker( StringRef generatorName,$/;"	f	namespace:Catch::Generators
createGeneratorTracker	leak_demo/Catch2/src/catch2/generators/catch_generators.cpp	/^    IGeneratorTracker* createGeneratorTracker( StringRef generatorName,$/;"	f	namespace:Catch::Generators
createGeneratorTracker	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    IGeneratorTracker* RunContext::createGeneratorTracker($/;"	f	class:Catch::RunContext
createMetadataString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string createMetadataString(IConfig const& config) {$/;"	f	namespace:Catch::__anon137
createMetadataString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^        std::string createMetadataString(IConfig const& config) {$/;"	f	namespace:Catch::__anon13
createReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        IEventListenerPtr createReporter(std::string const& reporterName, ReporterConfig&& config) {$/;"	f	namespace:Catch::__anon108
createReporter	leak_demo/Catch2/src/catch2/catch_session.cpp	/^        IEventListenerPtr createReporter(std::string const& reporterName, ReporterConfig&& config) {$/;"	f	namespace:Catch::__anon36
createShard	leak_demo/Catch2/src/catch2/internal/catch_sharding.hpp	/^    Container createShard(Container const& container, std::size_t const shardCount, std::size_t const shardIndex) {$/;"	f	namespace:Catch
createToc	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def createToc(headlines, hyperlink=True, top_link=False, no_toc_header=False):$/;"	f
create_empty_file	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^void create_empty_file(std::string const& path) {$/;"	f
create_introduced_in_text	leak_demo/Catch2/tools/scripts/extractFeaturesFromReleaseNotes.py	/^def create_introduced_in_text(version, bug_number = None):$/;"	f
ctest_output	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    ctest_output = get_ctest_listing(build_path)$/;"	v
ctest_test_names	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    ctest_test_names = extract_tests_from_ctest(ctest_output)$/;"	v
currentContext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Context* Context::currentContext = nullptr;$/;"	m	class:Catch::Context	file:
currentContext	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        CATCH_EXPORT static Context* currentContext;$/;"	m	class:Catch::Context
currentContext	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    Context* Context::currentContext = nullptr;$/;"	m	class:Catch::Context	file:
currentContext	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^        CATCH_EXPORT static Context* currentContext;$/;"	m	class:Catch::Context
currentElementAsString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        StringRef GeneratorUntypedBase::currentElementAsString() const {$/;"	f	class:Catch::Generators::GeneratorUntypedBase
currentElementAsString	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.cpp	/^        StringRef GeneratorUntypedBase::currentElementAsString() const {$/;"	f	class:Catch::Generators::GeneratorUntypedBase
currentElementIndex	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^            std::size_t currentElementIndex() const { return m_currentElementIndex; }$/;"	f	class:Catch::Generators::GeneratorUntypedBase
currentTestCaseInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^        TestCaseInfo const* currentTestCaseInfo = nullptr;$/;"	m	class:Catch::StreamingReporterBase
currentTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        ITracker& currentTracker() { return *m_currentTracker; }$/;"	f	class:Catch::TestCaseTracking::TrackerContext
current_number	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^    int current_number;$/;"	m	class:__anon101::final	file:
current_number	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    int current_number;$/;"	m	class:__anon92::TestGen	file:
custom	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Approx Approx::custom() {$/;"	f	class:Catch::Approx
custom	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    Approx Approx::custom() {$/;"	f	class:Catch::Approx
customOptions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterConfig::customOptions() const {$/;"	f	class:Catch::std::ReporterConfig
customOptions	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::map<std::string, std::string> customOptions;$/;"	m	struct:Catch::ProcessedReporterSpec
customOptions	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    ReporterConfig::customOptions() const {$/;"	f	class:Catch::std::ReporterConfig
customOptions	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        std::map<std::string, std::string> const& customOptions() const {$/;"	f	class:Catch::ReporterSpec::std
custom_debug_break	leak_demo/Catch2/tests/ExtraTests/X12-CustomDebugBreakMacro.cpp	/^void custom_debug_break() {$/;"	f
custom_index_op	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^        constexpr custom_index_op( std::initializer_list<T> ) {}$/;"	f	struct:__anon47::custom_index_op
custom_index_op	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^    struct custom_index_op {$/;"	s	namespace:__anon47	file:
d_	leak_demo/Catch2/tests/SelfTest/UsageTests/Approx.tests.cpp	/^        double d_ = 0.0;$/;"	m	class:__anon48::StrongDoubleTypedef	file:
d_counter	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^        int d_counter;$/;"	m	struct:__anon52::Fixture	file:
dashed_line	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^char const * dashed_line =$/;"	m	namespace:__anon103	file:
dashifyHeadline	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def dashifyHeadline(line):$/;"	f
data	database_binary_and_hash_search.c	/^    int data;$/;"	m	struct:tag_entry	file:
data	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            char data[bufferSize];$/;"	m	class:Catch::Detail::__anon119::final	file:
data	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            char data[bufferSize];$/;"	m	class:Catch::Detail::__anon30::final	file:
deallocate	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        void deallocate( T *p, size_type \/*n*\/ ) {$/;"	f	struct:__anon53::minimal_allocator
decltype	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	/^    constexpr auto empty(Container const& cont) -> decltype(cont.empty()) {$/;"	f	namespace:Catch::Detail
decltype	leak_demo/Catch2/src/catch2/internal/catch_container_nonmembers.hpp	/^    constexpr auto size(Container const& cont) -> decltype(cont.size()) {$/;"	f	namespace:Catch::Detail
defaultColourMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourMode Config::defaultColourMode() const       { return m_data.defaultColourMode; }$/;"	f	class:Catch::Config
defaultColourMode	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    ColourMode Config::defaultColourMode() const       { return m_data.defaultColourMode; }$/;"	f	class:Catch::Config
defaultColourMode	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ColourMode defaultColourMode = ColourMode::PlatformDefault;$/;"	m	struct:Catch::ConfigData
defaultListListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void defaultListListeners( std::ostream& out,$/;"	f	namespace:Catch
defaultListListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    void defaultListListeners( std::ostream& out,$/;"	f	namespace:Catch
defaultListReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    defaultListReporters( std::ostream& out,$/;"	f	namespace:Catch
defaultListReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    defaultListReporters( std::ostream& out,$/;"	f	namespace:Catch
defaultListTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void defaultListTags( std::ostream& out,$/;"	f	namespace:Catch
defaultListTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    void defaultListTags( std::ostream& out,$/;"	f	namespace:Catch
defaultListTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void defaultListTests(std::ostream& out, ColourImpl* streamColour, std::vector<TestCaseHandle> const& tests, bool isFiltered, Verbosity verbosity) {$/;"	f	namespace:Catch
defaultListTests	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    void defaultListTests(std::ostream& out, ColourImpl* streamColour, std::vector<TestCaseHandle> const& tests, bool isFiltered, Verbosity verbosity) {$/;"	f	namespace:Catch
defaultOutputFilename	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::string defaultOutputFilename;$/;"	m	struct:Catch::ConfigData
default_options	leak_demo/Catch2/conanfile.py	/^    default_options = {$/;"	v	class:CatchConan
definePath	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^definePath = os.path.join(rootPath, 'catch_version_macros.hpp')$/;"	v
delta	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Totals Totals::delta( Totals const& prevTotals ) const {$/;"	f	class:Catch::Totals
delta	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    Totals Totals::delta( Totals const& prevTotals ) const {$/;"	f	class:Catch::Totals
deoptimize_value	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        inline void deoptimize_value(T&& x) {$/;"	f	namespace:Catch::Benchmark
deoptimize_value	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^        inline void deoptimize_value(T&& x) {$/;"	f	namespace:Catch::Benchmark
derived	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^    struct derived : base { using base::base; };$/;"	s	namespace:__anon78	file:
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string AllTrueMatcher::describe() const { return "contains only true"; }$/;"	f	class:Catch::Matchers::AllTrueMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string AnyTrueMatcher::describe() const { return "contains at least one true"; }$/;"	f	class:Catch::Matchers::AnyTrueMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string NoneTrueMatcher::describe() const { return "contains no true"; }$/;"	f	class:Catch::Matchers::NoneTrueMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string HasSizeMatcher::describe() const {$/;"	f	class:Catch::Matchers::HasSizeMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string IsEmptyMatcher::describe() const {$/;"	f	class:Catch::Matchers::IsEmptyMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string RegexMatcher::describe() const {$/;"	f	class:Catch::Matchers::RegexMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string StringMatcherBase::describe() const {$/;"	f	class:Catch::Matchers::StringMatcherBase
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string WithinAbsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string WithinRelMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string WithinUlpsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string ExceptionMessageMatcher::describe() const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
describe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string IsNaNMatcher::describe() const {$/;"	f	class:Catch::Matchers::IsNaNMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.cpp	/^    std::string HasSizeMatcher::describe() const {$/;"	f	class:Catch::Matchers::HasSizeMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.cpp	/^    std::string IsEmptyMatcher::describe() const {$/;"	f	class:Catch::Matchers::IsEmptyMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.cpp	/^std::string ExceptionMessageMatcher::describe() const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    std::string WithinAbsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    std::string WithinRelMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    std::string WithinUlpsMatcher::describe() const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^std::string IsNaNMatcher::describe() const {$/;"	f	class:Catch::Matchers::IsNaNMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^        std::string AllTrueMatcher::describe() const { return "contains only true"; }$/;"	f	class:Catch::Matchers::AllTrueMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^        std::string AnyTrueMatcher::describe() const { return "contains at least one true"; }$/;"	f	class:Catch::Matchers::AnyTrueMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.cpp	/^        std::string NoneTrueMatcher::describe() const { return "contains no true"; }$/;"	f	class:Catch::Matchers::NoneTrueMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    std::string RegexMatcher::describe() const {$/;"	f	class:Catch::Matchers::RegexMatcher
describe	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    std::string StringMatcherBase::describe() const {$/;"	f	class:Catch::Matchers::StringMatcherBase
describe_multi_matcher	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string describe_multi_matcher(StringRef combine, std::string const* descriptions_begin, std::string const* descriptions_end) {$/;"	f	namespace:Catch::Matchers::Detail
describe_multi_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.cpp	/^        std::string describe_multi_matcher(StringRef combine, std::string const* descriptions_begin, std::string const* descriptions_end) {$/;"	f	namespace:Catch::Matchers::Detail
describe_multi_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        std::string describe_multi_matcher(StringRef combine, std::array<void const*, sizeof...(MatcherTs)> const& matchers, std::index_sequence<Idx...>) {$/;"	f	namespace:Catch::Matchers::Detail
description	leak_demo/Catch2/conanfile.py	/^    description = "A modern, C++-native, framework for unit-tests, TDD and BDD"$/;"	v	class:CatchConan
description	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^        std::string description;$/;"	m	struct:Catch::ListenerDescription
description	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^        std::string name, description;$/;"	m	struct:Catch::ReporterDescription
descriptions	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                StringRef descriptions;$/;"	m	struct:Catch::Clara::Detail::HelpColumns
destruct	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                std::enable_if_t<AllowManualDestruction> destruct()$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
destruct_on_exit	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                void destruct_on_exit(std::enable_if_t<!Destruct, U>* = nullptr) { }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
destruct_on_exit	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                void destruct_on_exit(std::enable_if_t<Destruct, U>* = nullptr) { destruct<true>(); }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
detail	leak_demo/Catch2/third_party/clara.hpp	/^namespace detail {$/;"	n	namespace:clara
developBuild	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def developBuild(self):$/;"	m	class:Version
diffFiles	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def diffFiles(fileA, fileB):$/;"	f
directCompare	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool directCompare( double lhs, double rhs ) { return lhs == rhs; }$/;"	f	namespace:Catch::Detail
directCompare	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool directCompare( float lhs, float rhs ) { return lhs == rhs; }$/;"	f	namespace:Catch::Detail
directCompare	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.cpp	/^        bool directCompare( double lhs, double rhs ) { return lhs == rhs; }$/;"	f	namespace:Catch::Detail
directCompare	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.cpp	/^        bool directCompare( float lhs, float rhs ) { return lhs == rhs; }$/;"	f	namespace:Catch::Detail
disabled_range	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct disabled_range {$/;"	s	namespace:__anon70	file:
discard	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SimplePcg32::discard(uint64_t skip) {$/;"	f	class:Catch::SimplePcg32
discard	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^    void SimplePcg32::discard(uint64_t skip) {$/;"	f	class:Catch::SimplePcg32
dist	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::uniform_real_distribution<long double> dist;$/;"	m	struct:Catch::Generators::RandomFloatingGenerator::PImpl	file:
dist	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^            std::uniform_real_distribution<long double> dist;$/;"	m	struct:Catch::Generators::RandomFloatingGenerator::PImpl	file:
divide	leak_demo/Catch2/tests/SelfTest/UsageTests/Approx.tests.cpp	/^    static double divide(double a, double b) {$/;"	f	namespace:__anon48
do_nothing	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
do_nothing	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
documentsDefault	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^documentsDefault = os.path.join(os.path.relpath(catchPath), 'docs\/*.md')$/;"	v
doesNotThrow	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static void doesNotThrow() {}$/;"	f	namespace:__anon75
double_pi	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^        double double_pi = 3.1415926535;$/;"	m	struct:__anon55::TestData	file:
dummy	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^        bool dummy = false;$/;"	m	struct:__anon77::unique_ptr_test_helper	file:
dummyBuffer	leak_demo/Catch2/fuzzing/NullOStream.h	/^  char dummyBuffer[64];$/;"	m	class:NullStreambuf
dummyExceptionFilter	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^static LONG CALLBACK dummyExceptionFilter(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	file:
dummySourceLineInfo	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Tag.tests.cpp	/^static constexpr Catch::SourceLineInfo dummySourceLineInfo = CATCH_INTERNAL_LINEINFO;$/;"	v	file:
dummySourceLineInfo	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/TestCaseInfoHasher.tests.cpp	/^static constexpr Catch::SourceLineInfo dummySourceLineInfo = CATCH_INTERNAL_LINEINFO;$/;"	v	file:
dummySourceLineInfo	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/TestSpecParser.tests.cpp	/^    static constexpr Catch::SourceLineInfo dummySourceLineInfo = CATCH_INTERNAL_LINEINFO;$/;"	m	namespace:__anon86	file:
dummy_809	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^struct dummy_809 {$/;"	s	file:
dup	leak_demo/Catch2/extras/catch_amalgamated.cpp	4814;"	d	file:
dup	leak_demo/Catch2/extras/catch_amalgamated.cpp	4937;"	d	file:
dup	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	142;"	d	file:
dup	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	19;"	d	file:
dup2	leak_demo/Catch2/extras/catch_amalgamated.cpp	4815;"	d	file:
dup2	leak_demo/Catch2/extras/catch_amalgamated.cpp	4938;"	d	file:
dup2	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	143;"	d	file:
dup2	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	20;"	d	file:
duplicate	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        ScopedMessage( ScopedMessage& duplicate ) = delete;$/;"	m	class:Catch::ScopedMessage
durationInSeconds	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionEndInfo
durationInSeconds	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        double durationInSeconds;$/;"	m	struct:Catch::SectionStats
elapsed	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                IDuration elapsed() const {$/;"	f	struct:Catch::Benchmark::Detail::final
elapsed	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^                IDuration elapsed() const {$/;"	f	struct:Catch::Benchmark::Detail::final
elapsed	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	/^            IDuration elapsed;$/;"	m	struct:Catch::Benchmark::Timing
emplaceUnscopedMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::emplaceUnscopedMessage( MessageBuilder&& builder ) {$/;"	f	class:Catch::RunContext
emplaceUnscopedMessage	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::emplaceUnscopedMessage( MessageBuilder&& builder ) {$/;"	f	class:Catch::RunContext
empty	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        bool empty() const { return false; }$/;"	f	struct:__anon49::has_empty
empty	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool empty( ADL_empty e ) { return e.Empty(); }$/;"	f	struct:unrelated::ADL_empty
enableBazelEnvSupport	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static bool enableBazelEnvSupport() {$/;"	f	namespace:Catch::__anon106
enableBazelEnvSupport	leak_demo/Catch2/src/catch2/catch_config.cpp	/^        static bool enableBazelEnvSupport() {$/;"	f	namespace:Catch::__anon3
enable_if_t	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^            std::enable_if_t<sizeof(typename Generator::result_type) >= sizeof(TargetType),$/;"	m	class:Catch::Detail::std
encode	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Xml.tests.cpp	/^static std::string encode( std::string const& str, Catch::XmlEncode::ForWhat forWhat = Catch::XmlEncode::ForTextNodes ) {$/;"	f	file:
encodeTo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlEncode::encodeTo( std::ostream& os ) const {$/;"	f	class:Catch::XmlEncode
encodeTo	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void XmlEncode::encodeTo( std::ostream& os ) const {$/;"	f	class:Catch::XmlEncode
end	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        constexpr const_iterator end() const { return m_start + m_size; }$/;"	f	class:Catch::StringRef
end	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        constexpr const_iterator end() const { return m_start + m_size; }$/;"	f	class:Catch::StringRef
end	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            const_iterator end() const { return { *this, const_iterator::EndTag{} }; }$/;"	f	class:Catch::TextFlow::Column
end	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            iterator end() const { return { *this, iterator::EndTag() }; }$/;"	f	class:Catch::TextFlow::Columns
end	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ToString.tests.cpp	/^    const_iterator end() const { return nullptr; }$/;"	f	struct:UsesSentinel
end	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anon69::streamable_range
end	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anon69::stringmaker_range
end	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anon70::disabled_range
end	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator end() const { return {}; }$/;"	f	struct:__anon70::just_range
end	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend const_iterator end( needs_ADL_begin const& rhs ) {$/;"	f	class:unrelated::needs_ADL_begin
end	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    const_iterator end() const { return { this, m_elements.size() }; }$/;"	f	struct:with_mocked_iterator_access
end	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    iterator end() { return { this, m_elements.size() }; }$/;"	f	struct:with_mocked_iterator_access
end	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    iterator_end end() const { return {}; }$/;"	f	class:has_different_begin_end_types
endArray	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::endArray() {$/;"	f	class:Catch::JsonReporter
endArray	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::endArray() {$/;"	f	class:Catch::JsonReporter
endElement	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::endElement(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
endElement	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::endElement(XmlFormatting fmt) {$/;"	f	class:Catch::XmlWriter
endListing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::endListing() {$/;"	f	class:Catch::JsonReporter
endListing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::endListing() {$/;"	f	class:Catch::JsonReporter
endMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::endMode() {$/;"	f	class:Catch::TestSpecParser
endMode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::endMode() {$/;"	f	class:Catch::TestSpecParser
endObject	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::endObject() {$/;"	f	class:Catch::JsonReporter
endObject	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::endObject() {$/;"	f	class:Catch::JsonReporter
ended	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^        int ended = 0;$/;"	m	struct:ValidatingTestListener::EventCounter	file:
endsWith	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool endsWith( std::string const& s, char suffix ) {$/;"	f	namespace:Catch
endsWith	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool endsWith( std::string const& s, std::string const& suffix ) {$/;"	f	namespace:Catch
endsWith	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    bool endsWith( std::string const& s, char suffix ) {$/;"	f	namespace:Catch
endsWith	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    bool endsWith( std::string const& s, std::string const& suffix ) {$/;"	f	namespace:Catch
enforceNoDuplicateTestCases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static void enforceNoDuplicateTestCases($/;"	f	namespace:Catch::__anon125
enforceNoDuplicateTestCases	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^        static void enforceNoDuplicateTestCases($/;"	f	namespace:Catch::__anon20
enforceNotReservedTag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void enforceNotReservedTag( StringRef tag, SourceLineInfo const& _lineInfo ) {$/;"	f	namespace:Catch::__anon109
enforceNotReservedTag	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        void enforceNotReservedTag( StringRef tag, SourceLineInfo const& _lineInfo ) {$/;"	f	namespace:Catch::__anon35
engage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl::ColourGuard::engage( std::ostream& stream ) & {$/;"	f	class:Catch::ColourImpl::ColourGuard
engage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl::ColourGuard::engage( std::ostream& stream ) && {$/;"	f	class:Catch::ColourImpl::ColourGuard
engage	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    ColourImpl::ColourGuard::engage( std::ostream& stream ) & {$/;"	f	class:Catch::ColourImpl::ColourGuard
engage	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    ColourImpl::ColourGuard::engage( std::ostream& stream ) && {$/;"	f	class:Catch::ColourImpl::ColourGuard
engage	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^        void engage() {$/;"	f	class:Catch::FatalConditionHandler
engageImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ColourImpl::ColourGuard::engageImpl( std::ostream& stream ) {$/;"	f	class:Catch::ColourImpl::ColourGuard
engageImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    void ColourImpl::ColourGuard::engageImpl( std::ostream& stream ) {$/;"	f	class:Catch::ColourImpl::ColourGuard
engage_platform	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void FatalConditionHandler::engage_platform() {$/;"	f	class:Catch::FatalConditionHandler
engage_platform	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void FatalConditionHandler::engage_platform() {}$/;"	f	class:Catch::FatalConditionHandler
engage_platform	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    void FatalConditionHandler::engage_platform() {$/;"	f	class:Catch::FatalConditionHandler
engage_platform	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    void FatalConditionHandler::engage_platform() {}$/;"	f	class:Catch::FatalConditionHandler
ensureTagClosed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlWriter::ensureTagClosed() {$/;"	f	class:Catch::XmlWriter
ensureTagClosed	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void XmlWriter::ensureTagClosed() {$/;"	f	class:Catch::XmlWriter
entry	database_binary_and_hash_search.c	/^} entry;$/;"	t	typeref:struct:tag_entry	file:
entry_name_error_handling	database_binary_and_hash_search.c	/^void entry_name_error_handling(const char *entry_name)$/;"	f
entry_name_position	database_binary_and_hash_search.c	/^    entry_name_position  = 3,$/;"	e	enum:constants	file:
env	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        env=env$/;"	v
env	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^env = os.environ.copy()$/;"	v
env	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^        env=env$/;"	v
env	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^env = os.environ.copy()$/;"	v
epsilon	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        Approx& epsilon( T const& newEpsilon ) {$/;"	f	class:Catch::Approx
epsilon	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        ApproxMatcher& epsilon( T const& newEpsilon ) {$/;"	f	class:Catch::Matchers::final
equalityComparisonImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Approx::equalityComparisonImpl(const double other) const {$/;"	f	class:Catch::Approx
equalityComparisonImpl	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    bool Approx::equalityComparisonImpl(const double other) const {$/;"	f	class:Catch::Approx
erf_inv	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                static double erf_inv( double x ) {$/;"	f	namespace:Catch::Benchmark::Detail::__anon104
erf_inv	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^                static double erf_inv( double x ) {$/;"	f	namespace:Catch::Benchmark::Detail::__anon1
erfc_inv	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            double erfc_inv(double x) {$/;"	f	namespace:Catch::Benchmark::Detail
erfc_inv	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            double erfc_inv(double x) {$/;"	f	namespace:Catch::Benchmark::Detail
errors_found	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^errors_found = False$/;"	v
escape	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string escape(StringRef str) {$/;"	f	namespace:Catch::__anon139
escape	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::escape() {$/;"	f	class:Catch::TestSpecParser
escape	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::escape() {$/;"	f	class:Catch::TestSpecParser
escape	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^        std::string escape(StringRef str) {$/;"	f	namespace:Catch::__anon6
escape_arg	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^std::string escape_arg(const std::string& arg) {$/;"	f
escape_catch2_test_name	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def escape_catch2_test_name(name):$/;"	f
escaped_output_file	leak_demo/Catch2/tests/TestScripts/testConfigureDefaultReporter.py	/^escaped_output_file = output_file.replace('\\\\', '\\\\\\\\')$/;"	v
estimate_clock_cost	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            EnvironmentEstimate estimate_clock_cost(FDuration resolution) {$/;"	f	namespace:Catch::Benchmark::Detail
estimate_clock_resolution	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            EnvironmentEstimate estimate_clock_resolution(int iterations) {$/;"	f	namespace:Catch::Benchmark::Detail
estimatedDuration	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        double estimatedDuration;$/;"	m	struct:Catch::BenchmarkInfo
estimatedDuration	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        double estimatedDuration;$/;"	m	struct:Catch::BenchmarkInfo
estimated_duration	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^            FDuration estimated_duration;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
exceptionEarlyReported	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::exceptionEarlyReported() {$/;"	f	class:Catch::RunContext
exceptionEarlyReported	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::exceptionEarlyReported() {$/;"	f	class:Catch::RunContext
excludeHeadingsFor	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def excludeHeadingsFor(f):$/;"	f
exeName	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            StringRef exeName() const { return m_exeName; }$/;"	f	class:Catch::Clara::Args
exec_cmd	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^int exec_cmd(std::string const& cmd, int log_num, std::string const& path) {$/;"	f
execute	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Totals execute() {$/;"	f	class:Catch::__anon108::TestGroup
execute	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            Totals execute() {$/;"	f	class:Catch::__anon36::TestGroup
executeSQL	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^    bool executeSQL( std::string const & \/*query*\/, int const \/*id*\/, std::string const & arg ) {$/;"	f	class:DBConnection
execute_tests	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^def execute_tests(self_test_exe: str, extra_args: List[str] = None):$/;"	f
expandAliases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string TagAliasRegistry::expandAliases( std::string const& unexpandedTestSpec ) const {$/;"	f	class:Catch::TagAliasRegistry
expandAliases	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.cpp	/^    std::string TagAliasRegistry::expandAliases( std::string const& unexpandedTestSpec ) const {$/;"	f	class:Catch::TagAliasRegistry
expectedToFail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestCaseInfo::expectedToFail() const {$/;"	f	class:Catch::TestCaseInfo
expectedToFail	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool TestCaseInfo::expectedToFail() const {$/;"	f	class:Catch::TestCaseInfo
export	leak_demo/Catch2/conanfile.py	/^    def export(self):$/;"	m	class:CatchConan
export_sources	leak_demo/Catch2/conanfile.py	/^    def export_sources(self):$/;"	m	class:CatchConan
extendedMult	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^        constexpr ExtendedMultResult<UInt> extendedMult( UInt lhs, UInt rhs ) {$/;"	f	namespace:Catch::Detail
extendedMult	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^        extendedMult( std::uint64_t lhs, std::uint64_t rhs ) {$/;"	f	namespace:Catch::Detail
extendedMultNaive	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Integer.tests.cpp	/^    extendedMultNaive( std::uint64_t lhs, std::uint64_t rhs ) {$/;"	f	namespace:__anon87
extendedMultPortable	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^        extendedMultPortable(std::uint64_t lhs, std::uint64_t rhs) {$/;"	f	namespace:Catch::Detail
extractClassName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static StringRef extractClassName( StringRef classOrMethodName ) {$/;"	f	namespace:Catch::__anon126
extractClassName	leak_demo/Catch2/src/catch2/internal/catch_test_registry.cpp	/^        static StringRef extractClassName( StringRef classOrMethodName ) {$/;"	f	namespace:Catch::__anon25
extractFilenamePart	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        StringRef extractFilenamePart(StringRef filename) {$/;"	f	namespace:Catch::__anon109
extractFilenamePart	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        StringRef extractFilenamePart(StringRef filename) {$/;"	f	namespace:Catch::__anon35
extractFilterName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string TestSpec::extractFilterName( Filter const& filter ) {$/;"	f	class:Catch::TestSpec
extractFilterName	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    std::string TestSpec::extractFilterName( Filter const& filter ) {$/;"	f	class:Catch::TestSpec
extractInstanceName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            StringRef extractInstanceName(StringRef enumInstance) {$/;"	f	namespace:Catch::Detail::__anon116
extractInstanceName	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^            StringRef extractInstanceName(StringRef enumInstance) {$/;"	f	namespace:Catch::Detail::__anon24
extract_tests_from_ctest	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def extract_tests_from_ctest(ctest_output):$/;"	f
f	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                Catch::Detail::unique_ptr<callable> f;$/;"	m	namespace:Catch::Benchmark::Detail
f	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                Catch::Detail::unique_ptr<callable> f;$/;"	m	namespace:Catch::Benchmark::Detail
f	leak_demo/Catch2/tests/ExtraTests/X02-DisabledMacros.cpp	/^static foo f;$/;"	v	file:
f	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static int f() {$/;"	f	namespace:__anon62
f	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    void f() {}$/;"	f	struct:S
f1	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    static bool f1() {$/;"	f	namespace:__anon45
f2	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    static void f2() {$/;"	f	namespace:__anon45
f3	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    static void f3() {$/;"	f	namespace:__anon45
f4	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    static bool f4() { return assertion_starting_events_seen == 4; }$/;"	f	namespace:__anon45
f5	leak_demo/Catch2/tests/ExtraTests/X20-AssertionStartingEventGoesBeforeAssertionIsEvaluated.cpp	/^    static void f5() { throw assertion_starting_events_seen; }$/;"	f	namespace:__anon45
factories	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            factories;$/;"	m	struct:Catch::ReporterRegistry::ReporterRegistryImpl	file:
factories	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^            factories;$/;"	m	struct:Catch::ReporterRegistry::ReporterRegistryImpl	file:
fail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerBase::fail() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
fail	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::fail() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
failed	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^        std::uint64_t failed = 0;$/;"	m	struct:Catch::Counts
failedButOk	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^        std::uint64_t failedButOk = 0;$/;"	m	struct:Catch::Counts
failingCase	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        void failingCase() { REQUIRE( s == "world" ); }$/;"	f	class:__anon64::TestClass
fakeTestCase	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/CmdLine.tests.cpp	/^    auto fakeTestCase(const char* name, const char* desc = "") { return Catch::makeTestCaseInfo("", { name, desc }, CATCH_INTERNAL_LINEINFO); }$/;"	f	namespace:__anon81
fakeTestCase	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/TestSpec.tests.cpp	/^    auto fakeTestCase(const char* name, const char* desc = "") { return Catch::makeTestCaseInfo("", { name, desc }, CATCH_INTERNAL_LINEINFO); }$/;"	f	namespace:__anon88
fake_arg	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct fake_arg {$/;"	s	namespace:Catch::Clara::Detail
fallbackStringifier	leak_demo/Catch2/tests/ExtraTests/X10-FallbackStringifier.cpp	/^std::string fallbackStringifier(T const&) {$/;"	f
false_type	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^            static auto test(...)->std::false_type;$/;"	m	class:Catch::Detail::IsStreamInsertable::std
fatalErrorEncountered	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::fatalErrorEncountered( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
fatalErrorEncountered	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::fatalErrorEncountered( StringRef error ) {$/;"	f	class:Catch::MultiReporter
fatalErrorEncountered	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::fatalErrorEncountered( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
fatalErrorEncountered	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::fatalErrorEncountered( StringRef error ) {$/;"	f	class:Catch::MultiReporter
file	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^        char const* file;$/;"	m	struct:Catch::SourceLineInfo
fileNameTag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string fileNameTag(std::vector<Tag> const& tags) {$/;"	f	namespace:Catch::__anon136
fileNameTag	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^        std::string fileNameTag(std::vector<Tag> const& tags) {$/;"	f	namespace:Catch::__anon5
file_close_error_handling	database_binary_and_hash_search.c	/^void file_close_error_handling(int fclose_res, const char *file_name)$/;"	f
file_open_error_handling	database_binary_and_hash_search.c	/^void file_open_error_handling(const FILE *file, const char *file_name)$/;"	f
file_position	database_binary_and_hash_search.c	/^    file_position       = 1,$/;"	e	enum:constants	file:
filenames	leak_demo/Catch2/tools/scripts/approvalTests.py	/^filenames = ['{}.sw.multi'.format(reporter) for reporter in reporters]$/;"	v
filenamesAsTags	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool filenamesAsTags = false;$/;"	m	struct:Catch::ConfigData
fileno	leak_demo/Catch2/extras/catch_amalgamated.cpp	4816;"	d	file:
fileno	leak_demo/Catch2/extras/catch_amalgamated.cpp	4939;"	d	file:
fileno	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	144;"	d	file:
fileno	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	21;"	d	file:
files	leak_demo/Catch2/tools/scripts/approve.py	/^    files = [os.path.join( rootPath, f ) for f in sys.argv[1:]]$/;"	v
files	leak_demo/Catch2/tools/scripts/approve.py	/^    files = glob.glob( os.path.join( rootPath, "*.unapproved.txt" ) )$/;"	v
files_set	leak_demo/Catch2/tools/scripts/checkDuplicateFilenames.py	/^files_set = set()$/;"	v
fillBitsFrom	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^            TargetType> fillBitsFrom(Generator& gen) {$/;"	f	namespace:Catch::Detail
filter	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    GeneratorWrapper<T> filter(Predicate&& pred, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
filterLine	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def filterLine(line, isCompact):$/;"	f
filterTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> filterTests( std::vector<TestCaseHandle> const& testCases, TestSpec const& testSpec, IConfig const& config ) {$/;"	f	namespace:Catch
filterTests	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> filterTests( std::vector<TestCaseHandle> const& testCases, TestSpec const& testSpec, IConfig const& config ) {$/;"	f	namespace:Catch
final	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^class RandomIntGenerator final : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon101	file:
final	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^class LineGenerator final : public Catch::Generators::IGenerator<std::string> {$/;"	c	namespace:__anon102	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            struct GeneratorTracker final : TestCaseTracking::TrackerBase,$/;"	s	namespace:Catch::Generators::__anon123	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class CoutStream final : public IStream {$/;"	c	namespace:Catch::Detail::__anon119	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class DebugOutStream final : public IStream {$/;"	c	namespace:Catch::Detail::__anon119	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class FileStream final : public IStream {$/;"	c	namespace:Catch::Detail::__anon119	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class NoColourImpl final : public ColourImpl {$/;"	c	namespace:Catch::__anon113	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class StreamBufImpl final : public std::streambuf {$/;"	c	namespace:Catch::Detail::__anon119	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        class TestInvokerAsFunction final : public ITestInvoker {$/;"	c	namespace:Catch::__anon126	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    class ANSIColourImpl final : public ColourImpl {$/;"	c	namespace:Catch::__anon115	file:
final	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    class Win32ColourImpl final : public ColourImpl {$/;"	c	namespace:Catch::__anon114	file:
final	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            struct ChronometerModel final : public ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
final	leak_demo/Catch2/fuzzing/NullOStream.h	/^  virtual int overflow(int c) override final;$/;"	m	class:NullStreambuf
final	leak_demo/Catch2/fuzzing/NullOStream.h	/^class NullOStream final : private NullStreambuf, public std::ostream {$/;"	c
final	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            struct ChronometerModel final : public ChronometerConcept {$/;"	s	namespace:Catch::Benchmark::Detail
final	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.hpp	/^        const char* what() const noexcept override final;$/;"	m	class:Catch::GeneratorException
final	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    class FixedValuesGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    class GeneratorWrapper final {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    class SingleValueGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    class ChunkGenerator final : public IGenerator<std::vector<T>> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    class FilterGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    class MapGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    class RepeatGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    class TakeGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^class RandomFloatingGenerator final : public IGenerator<Float> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^class RandomFloatingGenerator<long double> final : public IGenerator<long double> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^class RandomIntegerGenerator final : public IGenerator<Integer> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^class IteratorGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^class RangeGenerator final : public IGenerator<T> {$/;"	c	namespace:Catch::Generators
final	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        class NoColourImpl final : public ColourImpl {$/;"	c	namespace:Catch::__anon31	file:
final	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    class ANSIColourImpl final : public ColourImpl {$/;"	c	namespace:Catch::__anon33	file:
final	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    class Win32ColourImpl final : public ColourImpl {$/;"	c	namespace:Catch::__anon32	file:
final	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^        class CoutStream final : public IStream {$/;"	c	namespace:Catch::Detail::__anon30	file:
final	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^        class DebugOutStream final : public IStream {$/;"	c	namespace:Catch::Detail::__anon30	file:
final	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^        class FileStream final : public IStream {$/;"	c	namespace:Catch::Detail::__anon30	file:
final	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^        class StreamBufImpl final : public std::streambuf {$/;"	c	namespace:Catch::Detail::__anon30	file:
final	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^            struct GeneratorTracker final : TestCaseTracking::TrackerBase,$/;"	s	namespace:Catch::Generators::__anon21	file:
final	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^    class RunContext final : public IResultCapture {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/internal/catch_test_registry.cpp	/^        class TestInvokerAsFunction final : public ITestInvoker {$/;"	c	namespace:Catch::__anon25	file:
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^        class MatchAllOf final : public MatcherBase<ArgT> {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^        class MatchAnyOf final : public MatcherBase<ArgT> {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^        class MatchNotOf final : public MatcherBase<ArgT> {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^        class HasSizeMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^        class IsEmptyMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^        class SizeMatchesMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^        class ContainsElementMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^        class ContainsMatcherMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^class ExceptionMessageMatcher final : public MatcherBase<std::exception> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^class ExceptionMessageMatchesMatcher final$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^    class IsNaNMatcher final : public MatcherBase<double> {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^    class WithinRelMatcher final : public MatcherBase<double> {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^    class WithinUlpsMatcher final : public MatcherBase<double> {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^class PredicateMatcher final : public MatcherBase<T> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        class AllMatchMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        class AllTrueMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        class AnyMatchMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        class AnyTrueMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        class NoneMatchMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^        class NoneTrueMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^        class RangeEqualsMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^        class UnorderedRangeEqualsMatcher final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    class EndsWithMatcher final : public StringMatcherBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    class RegexMatcher final : public MatcherBase<std::string> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    class StartsWithMatcher final : public StringMatcherBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    class StringContainsMatcher final : public StringMatcherBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^    class StringEqualsMatcher final : public StringMatcherBase {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        class MatchAllOfGeneric final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        class MatchAnyOfGeneric final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        class MatchNotOfGeneric final : public MatcherGenericBase {$/;"	c	namespace:Catch::Matchers::Detail
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    class ApproxMatcher final : public MatcherBase<std::vector<T, AllocMatch>> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    class ContainsMatcher final : public MatcherBase<std::vector<T, AllocMatch>> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    class EqualsMatcher final : public MatcherBase<std::vector<T, AllocMatch>> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    class UnorderedEqualsMatcher final : public MatcherBase<std::vector<T, AllocMatch>> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^    class VectorContainsElementMatcher final : public MatcherBase<std::vector<T, Alloc>> {$/;"	c	namespace:Catch::Matchers
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^    class AutomakeReporter final : public StreamingReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^    class CompactReporter final : public StreamingReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^    class ConsoleReporter final : public StreamingReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^    class JunitReporter final : public CumulativeReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^    class MultiReporter final : public IEventListener {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	/^    class SonarQubeReporter final : public CumulativeReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^    class TAPReporter final : public StreamingReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^    class TeamCityReporter final : public StreamingReporterBase {$/;"	c	namespace:Catch
final	leak_demo/Catch2/tests/ExtraTests/X22-BenchmarksInCumulativeReporter.cpp	/^class CumulativeBenchmarkReporter final : public Catch::CumulativeReporterBase {$/;"	c	file:
final	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    class LessThanMatcher final : public Catch::Matchers::MatcherBase<size_t> {$/;"	c	namespace:__anon50	file:
finalizeDescription	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string Catch::Matchers::Detail::finalizeDescription(const std::string& desc) {$/;"	f	class:Catch::Matchers::Detail
finalizeDescription	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.cpp	/^std::string Catch::Matchers::Detail::finalizeDescription(const std::string& desc) {$/;"	f	class:Catch::Matchers::Detail
find	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TagAlias const* TagAliasRegistry::find( std::string const& alias ) const {$/;"	f	class:Catch::TagAliasRegistry
find	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.cpp	/^    TagAlias const* TagAliasRegistry::find( std::string const& alias ) const {$/;"	f	class:Catch::TagAliasRegistry
findChild	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ITracker* ITracker::findChild( NameAndLocationRef const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
findChild	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    ITracker* ITracker::findChild( NameAndLocationRef const& nameAndLocation ) {$/;"	f	class:Catch::TestCaseTracking::ITracker
findMax	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^findMax( std::size_t& i, std::size_t& j, std::size_t& k, std::size_t& l ) {$/;"	f	namespace:Catch::__anon131
findMax	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^findMax( std::size_t& i, std::size_t& j, std::size_t& k, std::size_t& l ) {$/;"	f	namespace:Catch::__anon12
find_first_separator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static size_t find_first_separator(Catch::StringRef sr) {$/;"	f	namespace:__anon112
find_first_separator	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^    static size_t find_first_separator(Catch::StringRef sr) {$/;"	f	namespace:__anon17
find_sentinel	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^        ForwardIter find_sentinel( ForwardIter start,$/;"	f	namespace:Catch::Detail
finished	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                TimePoint<Clock> finished;$/;"	m	struct:Catch::Benchmark::Detail::final
finished	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^                TimePoint<Clock> finished;$/;"	m	struct:Catch::Benchmark::Detail::final
finished	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        int finished = 0;$/;"	m	struct:__anon83::TestChronometerModel	file:
fixAllFilesInDir	leak_demo/Catch2/tools/scripts/fixWhitespace.py	/^def fixAllFilesInDir( dir ):$/;"	f
fixFile	leak_demo/Catch2/tools/scripts/fixWhitespace.py	/^def fixFile( path ):$/;"	f
float_nine_point_one	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^        float float_nine_point_one = 9.1f;$/;"	m	struct:__anon55::TestData	file:
folders_in_folder	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def folders_in_folder(folder):$/;"	f
foo	leak_demo/Catch2/tests/ExtraTests/X02-DisabledMacros.cpp	/^    foo(){$/;"	f	struct:foo
foo	leak_demo/Catch2/tests/ExtraTests/X02-DisabledMacros.cpp	/^struct foo {$/;"	s	file:
foo	leak_demo/Catch2/tests/ExtraTests/X10-FallbackStringifier.cpp	/^struct foo {$/;"	s	file:
foo	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^namespace foo {$/;"	n	file:
foo	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^inline void foo() {}$/;"	f
formatDuration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string formatDuration( double seconds ) {$/;"	f	namespace:Catch::__anon136
formatDuration	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^        std::string formatDuration( double seconds ) {$/;"	f	namespace:Catch::__anon5
formatReconstructedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void formatReconstructedExpression( std::ostream &os, std::string const& lhs, StringRef op, std::string const& rhs ) {$/;"	f	namespace:Catch
formatReconstructedExpression	leak_demo/Catch2/src/catch2/internal/catch_decomposer.cpp	/^    void formatReconstructedExpression( std::ostream &os, std::string const& lhs, StringRef op, std::string const& rhs ) {$/;"	f	namespace:Catch
formatted_file_header	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^def formatted_file_header(version):$/;"	f
fortytwo	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^    int fortytwo() const {$/;"	f	struct:Fixture
fpToString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string fpToString(T value, int precision) {$/;"	f	namespace:Catch::Detail::__anon111
fpToString	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^        std::string fpToString(T value, int precision) {$/;"	f	namespace:Catch::Detail::__anon16
from_range	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^GeneratorWrapper<ResultType> from_range(InputIterator from, InputSentinel to) {$/;"	f	namespace:Catch::Generators
from_range	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^auto from_range(Container const& cnt) {$/;"	f	namespace:Catch::Generators
fullConfig	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IConfig const * ReporterConfig::fullConfig() const { return m_fullConfig; }$/;"	f	class:Catch::ReporterConfig
fullConfig	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    IConfig const * ReporterConfig::fullConfig() const { return m_fullConfig; }$/;"	f	class:Catch::ReporterConfig
fun	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                    Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
fun	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            Detail::BenchmarkFunction fun;$/;"	m	struct:Catch::Benchmark::Benchmark
fun	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                    Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
fun	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^                Fun fun;$/;"	m	struct:Catch::Benchmark::Detail::repeater
gamma	leak_demo/Catch2/src/catch2/internal/catch_random_floating_point_helpers.hpp	/^        FloatType gamma(FloatType a, FloatType b) {$/;"	f	namespace:Catch::Detail
generate	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    def generate(self):$/;"	m	class:TestPackageConan
generate	leak_demo/Catch2/conanfile.py	/^    def generate(self):$/;"	m	class:CatchConan
generateRandomSeed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::uint32_t generateRandomSeed( GenerateFrom from ) {$/;"	f	namespace:Catch
generateRandomSeed	leak_demo/Catch2/src/catch2/internal/catch_random_seed_generation.cpp	/^    std::uint32_t generateRandomSeed( GenerateFrom from ) {$/;"	f	namespace:Catch
generate_cpp	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^def generate_cpp():$/;"	f
generate_header	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^def generate_header():$/;"	f
generatorExpression	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    auto generate( StringRef generatorName, SourceLineInfo const& lineInfo, L const& generatorExpression ) -> typename decltype(generatorExpression())::type {$/;"	f	namespace:Catch::Generators
generators	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    generators = "CMakeToolchain", "CMakeDeps", "VirtualRunEnv"$/;"	v	class:TestPackageConan
get	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^int const& RandomIntGenerator::get() const {$/;"	f	class:__anon101::RandomIntGenerator
get	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^std::string const& LineGenerator::get() const {$/;"	f	class:__anon102::std::LineGenerator
get	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ITagAliasRegistry const& ITagAliasRegistry::get() {$/;"	f	class:Catch::ITagAliasRegistry
get	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        T const* get() const { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
get	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        T* get() { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
get	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        T const& get() const {$/;"	f	class:Catch::Generators::final
get	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.cpp	/^    ITagAliasRegistry const& ITagAliasRegistry::get() {$/;"	f	class:Catch::ITagAliasRegistry
get	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        T const* get() const { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
get	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        T* get() { return m_ptr; }$/;"	f	class:Catch::Detail::unique_ptr
get	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    bool const& CustomStringifyGenerator::get() const { return m_first; }$/;"	f	class:__anon94::CustomStringifyGenerator
get	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    bool const& StringifyCountingGenerator::get() const { return m_first; }$/;"	f	class:__anon95::StringifyCountingGenerator
get	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^int const& TestGen::get() const {$/;"	f	class:__anon92::TestGen
getAllInfos	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<TestCaseInfo*> const& TestRegistry::getAllInfos() const {$/;"	f	class:Catch::std::TestRegistry
getAllInfos	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseInfo*> const& TestRegistry::getAllInfos() const {$/;"	f	class:Catch::std::TestRegistry
getAllTestCasesSorted	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> const& getAllTestCasesSorted( IConfig const& config ) {$/;"	f	class:Catch::std
getAllTestCasesSorted	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> const& getAllTestCasesSorted( IConfig const& config ) {$/;"	f	class:Catch::std
getAllTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTests() const {$/;"	f	class:Catch::std::TestRegistry
getAllTests	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTests() const {$/;"	f	class:Catch::std::TestRegistry
getAllTestsSorted	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTestsSorted( IConfig const& config ) const {$/;"	f	class:Catch::std::TestRegistry
getAllTestsSorted	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> const& TestRegistry::getAllTestsSorted( IConfig const& config ) const {$/;"	f	class:Catch::std::TestRegistry
getColour	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Colour::Code getColour() const { return m_colour; }$/;"	f	class:Catch::__anon134::SummaryColumn
getColour	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            Colour::Code getColour() const { return m_colour; }$/;"	f	class:Catch::__anon11::SummaryColumn
getConfig	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        IConfig const* getConfig() const { return m_config; }$/;"	f	class:Catch::Context
getConfig	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^        IConfig const* getConfig() const { return m_config; }$/;"	f	class:Catch::Context
getContents	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string TempFile::getContents() {$/;"	f	class:Catch::TempFile
getContents	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    std::string TempFile::getContents() {$/;"	f	class:Catch::TempFile
getCurrentContext	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    inline Context const& getCurrentContext() {$/;"	f	namespace:Catch
getCurrentContext	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^    inline Context const& getCurrentContext() {$/;"	f	namespace:Catch
getCurrentMutableContext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Context& getCurrentMutableContext() {$/;"	f	namespace:Catch
getCurrentMutableContext	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    Context& getCurrentMutableContext() {$/;"	f	namespace:Catch
getCurrentTestName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string RunContext::getCurrentTestName() const {$/;"	f	class:Catch::RunContext
getCurrentTestName	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    std::string RunContext::getCurrentTestName() const {$/;"	f	class:Catch::RunContext
getCurrentTimestamp	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string getCurrentTimestamp() {$/;"	f	namespace:Catch::__anon136
getCurrentTimestamp	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^        std::string getCurrentTimestamp() {$/;"	f	namespace:Catch::__anon5
getDescription	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string CompactReporter::getDescription() {$/;"	f	class:Catch::CompactReporter
getDescription	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string JsonReporter::getDescription() {$/;"	f	class:Catch::JsonReporter
getDescription	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string JunitReporter::getDescription() {$/;"	f	class:Catch::JunitReporter
getDescription	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string XmlReporter::getDescription() {$/;"	f	class:Catch::XmlReporter
getDescription	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::string ConsoleReporter::getDescription() {$/;"	f	class:Catch::ConsoleReporter
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^        static std::string getDescription() {$/;"	f	class:Catch::final
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^        std::string CompactReporter::getDescription() {$/;"	f	class:Catch::CompactReporter
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^std::string ConsoleReporter::getDescription() {$/;"	f	class:Catch::ConsoleReporter
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    std::string JsonReporter::getDescription() {$/;"	f	class:Catch::JsonReporter
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    std::string JunitReporter::getDescription() {$/;"	f	class:Catch::JunitReporter
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	/^        static std::string getDescription() {$/;"	f	class:Catch::final
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        static std::string getDescription() {$/;"	f	class:Catch::final
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        static std::string getDescription() {$/;"	f	class:Catch::final
getDescription	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    std::string XmlReporter::getDescription() {$/;"	f	class:Catch::XmlReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X21-PartialTestCaseEvents.cpp	/^    static std::string getDescription() {$/;"	f	class:PartialReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X22-BenchmarksInCumulativeReporter.cpp	/^    static std::string getDescription() {$/;"	f	class:final
getDescription	leak_demo/Catch2/tests/ExtraTests/X23-CasingInReporterNames.cpp	/^    static std::string getDescription() {$/;"	f	class:TestReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X26-ReporterPreferencesForPassingAssertionsIsRespected.cpp	/^      static std::string getDescription() {$/;"	f	class:__anon40::TestReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X27-CapturedStdoutInTestCaseEvents.cpp	/^    static std::string getDescription() {$/;"	f	class:TestReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^        static std::string getDescription() { return "X28 test reporter"; }$/;"	f	class:__anon46::TestReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X29-CustomArgumentsForReporters.cpp	/^    static std::string getDescription() {$/;"	f	class:TestReporter
getDescription	leak_demo/Catch2/tests/ExtraTests/X35-DuplicatedReporterNames.cpp	/^        static std::string getDescription() { return "X35 test reporter"; }$/;"	f	class:__anon41::TestReporter
getDescription	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    static std::string getDescription() {$/;"	f	class:ValidatingTestListener
getDescriptionImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^            std::string getDescriptionImpl( std::false_type ) const {$/;"	f	class:Catch::ListenerRegistrar::TypedListenerFactory
getDescriptionImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^            std::string getDescriptionImpl( std::true_type ) const {$/;"	f	class:Catch::ListenerRegistrar::TypedListenerFactory
getEnv	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        char const* getEnv( char const* ) { return nullptr; }$/;"	f	namespace:Catch::Detail
getEnv	leak_demo/Catch2/src/catch2/internal/catch_getenv.cpp	/^        char const* getEnv( char const* ) { return nullptr; }$/;"	f	namespace:Catch::Detail
getExpandedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string AssertionResult::getExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
getExpandedExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    std::string AssertionResult::getExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
getExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string AssertionResult::getExpression() const {$/;"	f	class:Catch::AssertionResult
getExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    std::string AssertionResult::getExpression() const {$/;"	f	class:Catch::AssertionResult
getExpressionInMacro	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string AssertionResult::getExpressionInMacro() const {$/;"	f	class:Catch::AssertionResult
getExpressionInMacro	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    std::string AssertionResult::getExpressionInMacro() const {$/;"	f	class:Catch::AssertionResult
getFactories	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterRegistry::getFactories() const {$/;"	f	class:Catch::std::ReporterRegistry
getFactories	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    ReporterRegistry::getFactories() const {$/;"	f	class:Catch::std::ReporterRegistry
getFile	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    FILE* TempFile::getFile() {$/;"	f	class:Catch::TempFile
getFile	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    FILE* TempFile::getFile() {$/;"	f	class:Catch::TempFile
getFilters	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        std::vector<StringRef> const& getFilters() const { return m_filters; }$/;"	f	class:Catch::TestCaseTracking::SectionTracker::std
getFormattedDuration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string getFormattedDuration( double duration ) {$/;"	f	namespace:Catch
getFormattedDuration	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    std::string getFormattedDuration( double duration ) {$/;"	f	namespace:Catch
getHelpColumns	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Detail::HelpColumns Opt::getHelpColumns() const {$/;"	f	class:Catch::Clara::Opt
getHelpColumns	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::vector<Detail::HelpColumns> Parser::getHelpColumns() const {$/;"	f	class:Catch::Clara::Parser
getHelpColumns	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Detail::HelpColumns Opt::getHelpColumns() const {$/;"	f	class:Catch::Clara::Opt
getHelpColumns	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        std::vector<Detail::HelpColumns> Parser::getHelpColumns() const {$/;"	f	class:Catch::Clara::Parser
getID	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^    int getID() {$/;"	f	class:UniqueTestsFixture
getInvalidSpecs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    const TestSpec::vectorStrings& TestSpec::getInvalidSpecs() const {$/;"	f	class:Catch::TestSpec
getInvalidSpecs	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    const TestSpec::vectorStrings& TestSpec::getInvalidSpecs() const {$/;"	f	class:Catch::TestSpec
getLastResult	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    const AssertionResult * RunContext::getLastResult() const {$/;"	f	class:Catch::RunContext
getLastResult	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    const AssertionResult * RunContext::getLastResult() const {$/;"	f	class:Catch::RunContext
getListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReporterRegistry::getListeners() const {$/;"	f	class:Catch::std::ReporterRegistry
getListeners	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    ReporterRegistry::getListeners() const {$/;"	f	class:Catch::std::ReporterRegistry
getMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef AssertionResult::getMessage() const {$/;"	f	class:Catch::AssertionResult
getMessage	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    StringRef AssertionResult::getMessage() const {$/;"	f	class:Catch::AssertionResult
getMessage	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        std::string const& getMessage() const {$/;"	f	class:__anon71::CustomException::std
getMessage	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        std::string const& getMessage() const {$/;"	f	class:__anon71::CustomStdException::std
getMutableRegistryHub	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IMutableRegistryHub& getMutableRegistryHub() {$/;"	f	namespace:Catch
getMutableRegistryHub	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^    IMutableRegistryHub& getMutableRegistryHub() {$/;"	f	namespace:Catch
getPreferences	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        ReporterPreferences const& getPreferences() const {$/;"	f	class:Catch::IEventListener
getProcessedReporterSpecs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Config::getProcessedReporterSpecs() const {$/;"	f	class:Catch::std::Config
getProcessedReporterSpecs	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    Config::getProcessedReporterSpecs() const {$/;"	f	class:Catch::std::Config
getRegistryHub	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IRegistryHub const& getRegistryHub() {$/;"	f	namespace:Catch
getRegistryHub	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^    IRegistryHub const& getRegistryHub() {$/;"	f	namespace:Catch
getReporterSpecs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<ReporterSpec> const& Config::getReporterSpecs() const {$/;"	f	class:Catch::std::Config
getReporterSpecs	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    std::vector<ReporterSpec> const& Config::getReporterSpecs() const {$/;"	f	class:Catch::std::Config
getResultCapture	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        m_resultCapture( getResultCapture() )$/;"	f	namespace:Catch
getResultCapture	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    IResultCapture& getResultCapture() {$/;"	f	namespace:Catch
getResultCapture	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        IResultCapture* getResultCapture() const { return m_resultCapture; }$/;"	f	class:Catch::Context
getResultCapture	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^        m_resultCapture( getResultCapture() )$/;"	f	namespace:Catch
getResultCapture	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^        IResultCapture* getResultCapture() const { return m_resultCapture; }$/;"	f	class:Catch::Context
getResultCapture	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    IResultCapture& getResultCapture() {$/;"	f	namespace:Catch
getResultType	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ResultWas::OfType AssertionResult::getResultType() const {$/;"	f	class:Catch::AssertionResult
getResultType	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    ResultWas::OfType AssertionResult::getResultType() const {$/;"	f	class:Catch::AssertionResult
getRow	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::string const& getRow( std::size_t index ) const {$/;"	f	class:Catch::__anon134::SummaryColumn::std
getRow	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            std::string const& getRow( std::size_t index ) const {$/;"	f	class:Catch::__anon11::SummaryColumn::std
getSectionsToRun	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<std::string> const& Config::getSectionsToRun() const { return m_data.sectionsToRun; }$/;"	f	class:Catch::std::Config
getSectionsToRun	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    std::vector<std::string> const& Config::getSectionsToRun() const { return m_data.sectionsToRun; }$/;"	f	class:Catch::std::Config
getSeed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::uint32_t getSeed() { return sharedRng()(); }$/;"	f	namespace:Catch::Generators::Detail
getSeed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::uint32_t getSeed() {$/;"	f	namespace:Catch
getSeed	leak_demo/Catch2/src/catch2/catch_get_random_seed.cpp	/^    std::uint32_t getSeed() {$/;"	f	namespace:Catch
getSeed	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^            std::uint32_t getSeed() { return sharedRng()(); }$/;"	f	namespace:Catch::Generators::Detail
getSourceInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SourceLineInfo AssertionResult::getSourceInfo() const {$/;"	f	class:Catch::AssertionResult
getSourceInfo	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    SourceLineInfo AssertionResult::getSourceInfo() const {$/;"	f	class:Catch::AssertionResult
getStylesheetRef	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string XmlReporter::getStylesheetRef() const {$/;"	f	class:Catch::XmlReporter
getStylesheetRef	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    std::string XmlReporter::getStylesheetRef() const {$/;"	f	class:Catch::XmlReporter
getSuffix	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::string const& getSuffix() const { return m_suffix; }$/;"	f	class:Catch::__anon134::SummaryColumn::std
getSuffix	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            std::string const& getSuffix() const { return m_suffix; }$/;"	f	class:Catch::__anon11::SummaryColumn::std
getTestCaseInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestCaseInfo const& TestCaseHandle::getTestCaseInfo() const {$/;"	f	class:Catch::TestCaseHandle
getTestCaseInfo	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    TestCaseInfo const& TestCaseHandle::getTestCaseInfo() const {$/;"	f	class:Catch::TestCaseHandle
getTestMacroName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef AssertionResult::getTestMacroName() const {$/;"	f	class:Catch::AssertionResult
getTestMacroName	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    StringRef AssertionResult::getTestMacroName() const {$/;"	f	class:Catch::AssertionResult
getTestsOrTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<std::string> const& Config::getTestsOrTags() const { return m_data.testsOrTags; }$/;"	f	class:Catch::std::Config
getTestsOrTags	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    std::vector<std::string> const& Config::getTestsOrTags() const { return m_data.testsOrTags; }$/;"	f	class:Catch::std::Config
getVersionString	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def getVersionString(self):$/;"	m	class:Version
get_baselinesPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def get_baselinesPath(baseName):$/;"	f
get_cmake_version	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def get_cmake_version():$/;"	f
get_ctest_listing	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def get_ctest_listing(build_path):$/;"	f
get_duplicates	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def get_duplicates(xs):$/;"	f
get_filteredResultsPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def get_filteredResultsPath(baseName):$/;"	f
get_rawResultsPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def get_rawResultsPath(baseName):$/;"	f
get_test_names	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^def get_test_names(build_path):$/;"	f
get_test_output	leak_demo/Catch2/tests/TestScripts/testPartialTestCaseEvent.py	/^def get_test_output(test_exe: str, sections: bool) -> List[str]:$/;"	f
get_unapprovedResultsPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def get_unapprovedResultsPath(baseName):$/;"	f
globalCount	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    unsigned int MessageInfo::globalCount = 0;$/;"	m	class:Catch::MessageInfo	file:
globalCount	leak_demo/Catch2/src/catch2/internal/catch_message_info.cpp	/^    unsigned int MessageInfo::globalCount = 0;$/;"	m	class:Catch::MessageInfo	file:
globalCount	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        static unsigned int globalCount;$/;"	m	struct:Catch::MessageInfo
guardColour	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl::ColourGuard ColourImpl::guardColour( Colour::Code colourCode ) {$/;"	f	class:Catch::ColourImpl
guardColour	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    ColourImpl::ColourGuard ColourImpl::guardColour( Colour::Code colourCode ) {$/;"	f	class:Catch::ColourImpl
hadUnmatchedTestSpecs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool hadUnmatchedTestSpecs() const {$/;"	f	class:Catch::__anon108::TestGroup
hadUnmatchedTestSpecs	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            bool hadUnmatchedTestSpecs() const {$/;"	f	class:Catch::__anon36::TestGroup
handleExceptionMatchExpr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, StringMatcher const& matcher ) {$/;"	f	namespace:Catch
handleExceptionMatchExpr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, std::string const& str ) {$/;"	f	namespace:Catch
handleExceptionMatchExpr	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, std::string const& str ) {$/;"	f	namespace:Catch
handleExceptionMatchExpr	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.cpp	/^    void handleExceptionMatchExpr( AssertionHandler& handler, StringMatcher const& matcher ) {$/;"	f	namespace:Catch
handleExceptionNotThrownAsExpected	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleExceptionNotThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleExceptionNotThrownAsExpected	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleExceptionNotThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleExceptionThrownAsExpected	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleExceptionThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleExceptionThrownAsExpected	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleExceptionThrownAsExpected() {$/;"	f	class:Catch::AssertionHandler
handleExpr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleExpr( ITransientExpression const& expr ) {$/;"	f	class:Catch::AssertionHandler
handleExpr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleExpr($/;"	f	class:Catch::RunContext
handleExpr	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleExpr( ITransientExpression const& expr ) {$/;"	f	class:Catch::AssertionHandler
handleExpr	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        void handleExpr( ExprLhs<T> const& expr ) {$/;"	f	class:Catch::AssertionHandler
handleExpr	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleExpr($/;"	f	class:Catch::RunContext
handleFatalErrorCondition	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleFatalErrorCondition( StringRef message ) {$/;"	f	class:Catch::RunContext
handleFatalErrorCondition	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleFatalErrorCondition( StringRef message ) {$/;"	f	class:Catch::RunContext
handleIncomplete	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleIncomplete($/;"	f	class:Catch::RunContext
handleIncomplete	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleIncomplete($/;"	f	class:Catch::RunContext
handleMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleMessage(ResultWas::OfType resultType, StringRef message) {$/;"	f	class:Catch::AssertionHandler
handleMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleMessage($/;"	f	class:Catch::RunContext
handleMessage	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleMessage(ResultWas::OfType resultType, StringRef message) {$/;"	f	class:Catch::AssertionHandler
handleMessage	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleMessage($/;"	f	class:Catch::RunContext
handleNonExpr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleNonExpr($/;"	f	class:Catch::RunContext
handleNonExpr	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleNonExpr($/;"	f	class:Catch::RunContext
handleSignal	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static void handleSignal( int sig ) {$/;"	f	namespace:Catch
handleSignal	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static void handleSignal( int sig ) {$/;"	f	namespace:Catch
handleThrowingCallSkipped	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleThrowingCallSkipped() {$/;"	f	class:Catch::AssertionHandler
handleThrowingCallSkipped	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleThrowingCallSkipped() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedExceptionNotThrown	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleUnexpectedExceptionNotThrown() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedExceptionNotThrown	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleUnexpectedExceptionNotThrown($/;"	f	class:Catch::RunContext
handleUnexpectedExceptionNotThrown	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleUnexpectedExceptionNotThrown() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedExceptionNotThrown	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleUnexpectedExceptionNotThrown($/;"	f	class:Catch::RunContext
handleUnexpectedInflightException	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AssertionHandler::handleUnexpectedInflightException() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedInflightException	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleUnexpectedInflightException($/;"	f	class:Catch::RunContext
handleUnexpectedInflightException	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.cpp	/^    void AssertionHandler::handleUnexpectedInflightException() {$/;"	f	class:Catch::AssertionHandler
handleUnexpectedInflightException	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleUnexpectedInflightException($/;"	f	class:Catch::RunContext
handleUnfinishedSections	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::handleUnfinishedSections() {$/;"	f	class:Catch::RunContext
handleUnfinishedSections	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::handleUnfinishedSections() {$/;"	f	class:Catch::RunContext
hasActiveEvent	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^        bool hasActiveEvent() const {$/;"	f	struct:ValidatingTestListener::EventCounter
hasAnyAssertions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool CumulativeReporterBase::SectionNode::hasAnyAssertions() const {$/;"	f	class:Catch::CumulativeReporterBase::SectionNode
hasAnyAssertions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    bool CumulativeReporterBase::SectionNode::hasAnyAssertions() const {$/;"	f	class:Catch::CumulativeReporterBase::SectionNode
hasChildren	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        bool hasChildren() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
hasExpandedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool AssertionResult::hasExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
hasExpandedExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    bool AssertionResult::hasExpandedExpression() const {$/;"	f	class:Catch::AssertionResult
hasExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool AssertionResult::hasExpression() const {$/;"	f	class:Catch::AssertionResult
hasExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    bool AssertionResult::hasExpression() const {$/;"	f	class:Catch::AssertionResult
hasFilters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpec::hasFilters() const {$/;"	f	class:Catch::TestSpec
hasFilters	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    bool TestSpec::hasFilters() const {$/;"	f	class:Catch::TestSpec
hasMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool AssertionResult::hasMessage() const {$/;"	f	class:Catch::AssertionResult
hasMessage	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    bool AssertionResult::hasMessage() const {$/;"	f	class:Catch::AssertionResult
hasSingleActiveEvent	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^        bool hasSingleActiveEvent() const {$/;"	f	struct:ValidatingTestListener::EventCounter
hasStarted	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool ITracker::hasStarted() const { return m_runState != NotStarted; }$/;"	f	class:Catch::TestCaseTracking::ITracker
hasStarted	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool ITracker::hasStarted() const { return m_runState != NotStarted; }$/;"	f	class:Catch::TestCaseTracking::ITracker
hasTestFilters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::hasTestFilters() const { return m_hasTestFilters; }$/;"	f	class:Catch::Config
hasTestFilters	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::hasTestFilters() const { return m_hasTestFilters; }$/;"	f	class:Catch::Config
has_description	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^        struct has_description : std::false_type {};$/;"	s	namespace:Catch::Detail
has_description	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^        struct has_description<$/;"	s	namespace:Catch::Detail
has_different_begin_end_types	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    explicit has_different_begin_end_types( std::initializer_list<T> init ):$/;"	f	class:has_different_begin_end_types
has_different_begin_end_types	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^class has_different_begin_end_types {$/;"	c
has_empty	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    struct has_empty {$/;"	s	namespace:__anon49	file:
has_maker	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_maker {};$/;"	s	namespace:__anon68	file:
has_maker_and_operator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_maker_and_operator {};$/;"	s	namespace:__anon68	file:
has_moved	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Details.tests.cpp	/^        bool has_moved = false;$/;"	m	struct:__anon89::MoveChecker	file:
has_moved	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^        bool has_moved = false;$/;"	m	struct:__anon79::move_detector	file:
has_neither	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_neither {};$/;"	s	namespace:__anon68	file:
has_operator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_operator { };$/;"	s	namespace:__anon68	file:
has_size	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    struct has_size {$/;"	s	namespace:__anon50	file:
has_template_operator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct has_template_operator {};$/;"	s	namespace:__anon68	file:
headerValue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    uint32_t headerValue(unsigned char c) {$/;"	f	namespace:Catch::__anon128
headerValue	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    uint32_t headerValue(unsigned char c) {$/;"	f	namespace:Catch::__anon23
headers_in_folder	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def headers_in_folder(folder):$/;"	f
headingExcludeDefault	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^headingExcludeDefault = [1,3,4,5]  # use level 2 headers for at default$/;"	v
headingExcludeRelease	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^headingExcludeRelease = [1,3,4,5]  # use level 1 headers for release-notes.md$/;"	v
helper_1403	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    struct helper_1403 {$/;"	s	namespace:foo	file:
helper_1436	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^    helper_1436(T1 t1_, T2 t2_):$/;"	f	struct:helper_1436
helper_1436	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^struct helper_1436 {$/;"	s	file:
hexEscapeChar	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void hexEscapeChar(std::ostream& os, unsigned char c) {$/;"	f	namespace:Catch::__anon128
hexEscapeChar	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void hexEscapeChar(std::ostream& os, unsigned char c) {$/;"	f	namespace:Catch::__anon23
hexParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^hexParser = re.compile(r'\\b(0[xX][0-9a-fA-F]+)\\b')$/;"	v
hexThreshold	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        const int hexThreshold = 255;$/;"	m	namespace:Catch::Detail::__anon111	file:
hexThreshold	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^        const int hexThreshold = 255;$/;"	m	namespace:Catch::Detail::__anon16	file:
high_mild	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int high_mild = 0;      \/\/ 1.5 to 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_mild	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^            int high_mild = 0;      \/\/ 1.5 to 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_severe	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int high_severe = 0;    \/\/ more than 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
high_severe	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^            int high_severe = 0;    \/\/ more than 3 times IQR above Q3$/;"	m	struct:Catch::Benchmark::OutlierClassification
hint	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                StringRef hint() const { return m_hint; }$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
homepage	leak_demo/Catch2/conanfile.py	/^    homepage = url$/;"	v	class:CatchConan
i	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^        int i;$/;"	m	struct:__anon78::base	file:
i	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    int i;$/;"	m	struct:dummy_809	file:
i	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^        int i;$/;"	m	struct:__anon75::SpecialException	file:
i	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^        int i;$/;"	m	struct:__anon76::SomeType	file:
id	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        int id;$/;"	m	struct:Catch::SignalDefs	file:
id	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
id	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^        int id;$/;"	m	struct:Catch::SignalDefs	file:
id	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
impl	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            Detail::ChronometerConcept* impl;$/;"	m	struct:Catch::Benchmark::Chronometer
impl	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            Detail::ChronometerConcept* impl;$/;"	m	struct:Catch::Benchmark::Chronometer
includeSuccessfulResults	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::includeSuccessfulResults() const      { return m_data.showSuccessfulTests; }$/;"	f	class:Catch::Config
includeSuccessfulResults	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::includeSuccessfulResults() const      { return m_data.showSuccessfulTests; }$/;"	f	class:Catch::Config
include_parser	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^include_parser = re.compile(r'#include <(catch2\/.+\\.hpp)>')$/;"	v
includes_from_file	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def includes_from_file(header):$/;"	f
incorr_num_of_args_error_handling	database_binary_and_hash_search.c	/^void incorr_num_of_args_error_handling(int argc, bool (*condition)(int))$/;"	f
incrementBuildNumber	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def incrementBuildNumber(self):$/;"	m	class:Version
incrementMajorVersion	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def incrementMajorVersion(self):$/;"	m	class:Version
incrementMinorVersion	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def incrementMinorVersion(self):$/;"	m	class:Version
incrementPatchNumber	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def incrementPatchNumber(self):$/;"	m	class:Version
indent	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonUtils::indent( std::ostream& os, std::uint64_t level ) {$/;"	f	class:Catch::JsonUtils
indent	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    void JsonUtils::indent( std::ostream& os, std::uint64_t level ) {$/;"	f	class:Catch::JsonUtils
indent	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            Column& indent( size_t newIndent ) & {$/;"	f	class:Catch::TextFlow::Column
indent	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            Column&& indent( size_t newIndent ) && {$/;"	f	class:Catch::TextFlow::Column
indentSize	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        size_t Column::const_iterator::indentSize() const {$/;"	f	class:Catch::TextFlow::Column::const_iterator
indentSize	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        size_t Column::const_iterator::indentSize() const {$/;"	f	class:Catch::TextFlow::Column::const_iterator
info	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        BenchmarkInfo info;$/;"	m	struct:Catch::BenchmarkStats
info	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        BenchmarkInfo info;$/;"	m	struct:Catch::BenchmarkStats
infoMessages	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        std::vector<MessageInfo> infoMessages;$/;"	m	struct:Catch::AssertionStats
info_arch	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_file_path	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^info_file_path = os.path.join(output_dir, '{}.shard-support'.format(os.path.basename(bin_path)))$/;"	v
info_language_extensions_default	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v
info_language_extensions_default	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v
info_language_standard_default	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v
info_language_standard_default	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v
info_platform	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version_internal	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
info_version_internal	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
initialIndent	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            Column& initialIndent( size_t newIndent ) & {$/;"	f	class:Catch::TextFlow::Column
initialIndent	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            Column&& initialIndent( size_t newIndent ) && {$/;"	f	class:Catch::TextFlow::Column
int_iterator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator(int i) :val(i) {}$/;"	f	struct:__anon69::int_iterator
int_iterator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct int_iterator {$/;"	s	namespace:__anon69	file:
int_seven	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^        int int_seven = 7;$/;"	m	struct:__anon55::TestData	file:
internalAppendTag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestCaseInfo::internalAppendTag(StringRef tagStr) {$/;"	f	class:Catch::TestCaseInfo
internalAppendTag	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    void TestCaseInfo::internalAppendTag(StringRef tagStr) {$/;"	f	class:Catch::TestCaseInfo
internal_dirs	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^internal_dirs = ['detail', 'internal']$/;"	v
internal_include_parser	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^internal_include_parser = re.compile(r'\\s*#include <(catch2\/.*)>.*')$/;"	v
invoke	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^                static CompleteType_t<void> invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker
invoke	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^                static Result invoke(Fun&& fun, Args&&... args) {$/;"	f	struct:Catch::Benchmark::Detail::CompleteInvoker
invoke	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        void invoke() const {$/;"	f	class:Catch::TestCaseProperties::TestCaseHandle
invokeActiveTestCase	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::invokeActiveTestCase() {$/;"	f	class:Catch::RunContext
invokeActiveTestCase	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::invokeActiveTestCase() {$/;"	f	class:Catch::RunContext
isAssertion	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool AssertionOrBenchmarkResult::isAssertion() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
isAssertion	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^        bool AssertionOrBenchmarkResult::isAssertion() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
isBenchmark	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool AssertionOrBenchmarkResult::isBenchmark() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
isBenchmark	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^        bool AssertionOrBenchmarkResult::isBenchmark() const {$/;"	f	class:Catch::Detail::AssertionOrBenchmarkResult
isBoundary	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isBoundary( std::string const& line, size_t at ) {$/;"	f	namespace:__anon127
isBoundary	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^    bool isBoundary( std::string const& line, size_t at ) {$/;"	f	namespace:__anon22
isBreakableAfter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isBreakableAfter( char c ) {$/;"	f	namespace:__anon127
isBreakableAfter	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^    bool isBreakableAfter( char c ) {$/;"	f	namespace:__anon22
isBreakableBefore	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isBreakableBefore( char c ) {$/;"	f	namespace:__anon127
isBreakableBefore	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^    bool isBreakableBefore( char c ) {$/;"	f	namespace:__anon22
isColourImplAvailable	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isColourImplAvailable( ColourMode colourSelection ) {$/;"	f	namespace:Catch
isColourImplAvailable	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    bool isColourImplAvailable( ColourMode colourSelection ) {$/;"	f	namespace:Catch
isComplete	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool SectionTracker::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isComplete	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TrackerBase::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isComplete	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool SectionTracker::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isComplete	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool TrackerBase::isComplete() const {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
isConsole	leak_demo/Catch2/src/catch2/internal/catch_istream.hpp	/^        virtual bool isConsole() const { return false; }$/;"	f	class:Catch::IStream
isContainer	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool BoundRef::isContainer() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isContainer	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            bool BoundRef::isContainer() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isControlChar	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpecParser::isControlChar( char c ) const {$/;"	f	class:Catch::TestSpecParser
isControlChar	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::isControlChar( char c ) const {$/;"	f	class:Catch::TestSpecParser
isDebuggerActive	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch
isDebuggerActive	leak_demo/Catch2/src/catch2/internal/catch_debugger.cpp	/^        bool isDebuggerActive(){$/;"	f	namespace:Catch
isFalseTest	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFalseTest	leak_demo/Catch2/src/catch2/internal/catch_result_type.hpp	/^    inline bool isFalseTest( int flags ) { return ( flags & ResultDisposition::FalseTest ) != 0; }$/;"	f	namespace:Catch
isFlag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool BoundFlagRefBase::isFlag() const { return true; }$/;"	f	class:Catch::Clara::Detail::BoundFlagRefBase
isFlag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool BoundRef::isFlag() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isFlag	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            bool BoundFlagRefBase::isFlag() const { return true; }$/;"	f	class:Catch::Clara::Detail::BoundFlagRefBase
isFlag	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            bool BoundRef::isFlag() const { return false; }$/;"	f	class:Catch::Clara::Detail::BoundRef
isGeneratorTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool ITracker::isGeneratorTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::ITracker
isGeneratorTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool ITracker::isGeneratorTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::ITracker
isHidden	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestCaseInfo::isHidden() const {$/;"	f	class:Catch::TestCaseInfo
isHidden	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool TestCaseInfo::isHidden() const {$/;"	f	class:Catch::TestCaseInfo
isInside	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool JsonReporter::isInside( Writer writer ) {$/;"	f	class:Catch::JsonReporter
isInside	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    bool JsonReporter::isInside( Writer writer ) {$/;"	f	class:Catch::JsonReporter
isJustInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isJustInfo	leak_demo/Catch2/src/catch2/internal/catch_result_type.cpp	/^    bool isJustInfo( int flags ) {$/;"	f	namespace:Catch
isMatch	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool Opt::isMatch(StringRef optToken) const {$/;"	f	class:Catch::Clara::Opt
isMatch	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        bool Opt::isMatch(StringRef optToken) const {$/;"	f	class:Catch::Clara::Opt
isOk	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool AssertionResult::isOk() const {$/;"	f	class:Catch::AssertionResult
isOk	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOk	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    bool AssertionResult::isOk() const {$/;"	f	class:Catch::AssertionResult
isOk	leak_demo/Catch2/src/catch2/internal/catch_result_type.cpp	/^    bool isOk( ResultWas::OfType resultType ) {$/;"	f	namespace:Catch
isOpen	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool ITracker::isOpen() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
isOpen	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool ITracker::isOpen() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
isOptPrefix	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isOptPrefix( char c ) {$/;"	f	namespace:__anon112
isOptPrefix	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^    bool isOptPrefix( char c ) {$/;"	f	namespace:__anon17
isReleaseNotes	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def isReleaseNotes(f):$/;"	f
isReservedTag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool isReservedTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon109
isReservedTag	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        bool isReservedTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon35
isSectionTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool ITracker::isSectionTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::ITracker
isSectionTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool SectionTracker::isSectionTracker() const { return true; }$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isSectionTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool ITracker::isSectionTracker() const { return false; }$/;"	f	class:Catch::TestCaseTracking::ITracker
isSectionTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    bool SectionTracker::isSectionTracker() const { return true; }$/;"	f	class:Catch::TestCaseTracking::SectionTracker
isSourceFile	leak_demo/Catch2/tools/scripts/fixWhitespace.py	/^def isSourceFile( path ):$/;"	f
isSuccessfullyCompleted	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        bool isSuccessfullyCompleted() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
isThrowSafe	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isThrowSafe( TestCaseHandle const& testCase, IConfig const& config ) {$/;"	f	namespace:Catch
isThrowSafe	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    bool isThrowSafe( TestCaseHandle const& testCase, IConfig const& config ) {$/;"	f	namespace:Catch
isValid	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                static const bool isValid = false;$/;"	m	struct:Catch::Clara::Detail::UnaryLambdaTraits
isValid	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                static const bool isValid = true;$/;"	m	struct:Catch::Clara::Detail::UnaryLambdaTraits
isValid	leak_demo/Catch2/third_party/clara.hpp	/^        static const bool isValid = false;$/;"	m	struct:clara::detail::UnaryLambdaTraits
isValid	leak_demo/Catch2/third_party/clara.hpp	/^        static const bool isValid = true;$/;"	m	struct:clara::detail::UnaryLambdaTraits
isWhitespace	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isWhitespace( char c ) {$/;"	f	namespace:__anon127
isWhitespace	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^    bool isWhitespace( char c ) {$/;"	f	namespace:__anon22
is_callable	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
is_callable	leak_demo/Catch2/src/catch2/internal/catch_meta.hpp	/^    struct is_callable<Fun(Args...)> : decltype(is_callable_tester::test<Fun, Args...>(0)) {};$/;"	s	namespace:Catch
is_callable_tester	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct is_callable_tester {$/;"	s	namespace:Catch
is_callable_tester	leak_demo/Catch2/src/catch2/internal/catch_meta.hpp	/^    struct is_callable_tester {$/;"	s	namespace:Catch
is_even	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    static bool is_even(int n) {$/;"	f	namespace:__anon93
is_less_than_three	database_binary_and_hash_search.c	/^bool is_less_than_three(int num)$/;"	f
is_more_than_four	database_binary_and_hash_search.c	/^bool is_more_than_four(int num)$/;"	f
is_multiple_of_3	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    static bool is_multiple_of_3(int n) {$/;"	f	namespace:__anon93
is_not_three_and_is_not_four	database_binary_and_hash_search.c	/^bool is_not_three_and_is_not_four(int num)$/;"	f
is_permutation	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^        bool is_permutation( ForwardIter1 first_1,$/;"	f	namespace:Catch::Detail
is_permutation	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Algorithms.tests.cpp	/^    static bool is_permutation(Range1 const& r1, Range2 const& r2) {$/;"	f	namespace:__anon91
is_range	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct is_range<disabled_range> {$/;"	s	namespace:Catch	file:
is_range	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    struct is_range<with_mocked_iterator_access<T>> : std::false_type {};$/;"	s	namespace:Catch
is_related	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            struct is_related$/;"	s	namespace:Catch::Benchmark::Detail
is_related	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^            struct is_related$/;"	s	namespace:Catch::Benchmark::Detail
is_steady	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	e	enum:__anon83::counting_clock::__anon85	file:
is_steady	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        enum { is_steady = true };$/;"	e	enum:__anon83::manual_clock::__anon84	file:
is_true	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^struct is_true$/;"	s	file:
is_unary_function	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct is_unary_function : std::false_type {};$/;"	s	namespace:Catch::Clara::Detail
is_unary_function	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            struct is_unary_function<$/;"	s	namespace:Catch::Clara::Detail
isnan	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isnan(double d) {$/;"	f	namespace:Catch
isnan	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool isnan(float f) {$/;"	f	namespace:Catch
isnan	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^    bool isnan(double d) {$/;"	f	namespace:Catch
isnan	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^    bool isnan(float f) {$/;"	f	namespace:Catch
itDoesThat	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^    static bool itDoesThat() { return true; }$/;"	f	namespace:__anon52
itDoesThis	leak_demo/Catch2/tests/SelfTest/UsageTests/BDD.tests.cpp	/^    static bool itDoesThis() { return true; }$/;"	f	namespace:__anon52
itEnd	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                Iterator itEnd;$/;"	m	class:Catch::Clara::Detail::TokenStream
itEnd	leak_demo/Catch2/third_party/clara.hpp	/^        Iterator itEnd;$/;"	m	class:clara::detail::TokenStream
itMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon138::TapAssertionPrinter	file:
itMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon130::AssertionPrinter	file:
itMessage	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon9::AssertionPrinter	file:
itMessage	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            std::vector<MessageInfo>::const_iterator itMessage;$/;"	m	class:Catch::__anon7::TapAssertionPrinter	file:
iterations	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        int iterations;$/;"	m	struct:Catch::BenchmarkInfo
iterations	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        int iterations;$/;"	m	struct:Catch::BenchmarkInfo
iterations	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	/^            int iterations;$/;"	m	struct:Catch::Benchmark::Timing
iterations_per_sample	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^            int iterations_per_sample;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
iterator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns::iterator::iterator( Columns const& columns ):$/;"	f	class:Catch::TextFlow::Columns::iterator
iterator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns::iterator::iterator( Columns const& columns, EndTag ):$/;"	f	class:Catch::TextFlow::Columns::iterator
iterator	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns::iterator::iterator( Columns const& columns ):$/;"	f	class:Catch::TextFlow::Columns::iterator
iterator	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns::iterator::iterator( Columns const& columns, EndTag ):$/;"	f	class:Catch::TextFlow::Columns::iterator
iterator	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            class iterator {$/;"	c	class:Catch::TextFlow::Columns
iterator	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        iterator( underlying_iter start, underlying_iter end ):$/;"	f	class:has_different_begin_end_types::iterator
iterator	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    class iterator {$/;"	c	class:has_different_begin_end_types
iterator	leak_demo/Catch2/third_party/clara.hpp	/^            explicit iterator( Column const& column ) : m_column( column ) {$/;"	f	class:clara::TextFlow::Column::iterator
iterator	leak_demo/Catch2/third_party/clara.hpp	/^            explicit iterator( Columns const& columns )$/;"	f	class:clara::TextFlow::Columns::iterator
iterator	leak_demo/Catch2/third_party/clara.hpp	/^            iterator( Column const& column, size_t stringIndex )$/;"	f	class:clara::TextFlow::Column::iterator
iterator	leak_demo/Catch2/third_party/clara.hpp	/^            iterator( Columns const& columns, EndTag )$/;"	f	class:clara::TextFlow::Columns::iterator
iterator	leak_demo/Catch2/third_party/clara.hpp	/^        class iterator {$/;"	c	class:clara::TextFlow::Column
iterator	leak_demo/Catch2/third_party/clara.hpp	/^        class iterator {$/;"	c	class:clara::TextFlow::Columns
iterator_end	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    struct iterator_end {};$/;"	s	class:has_different_begin_end_types
jackknife	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                static sample jackknife( double ( *estimator )( double const*,$/;"	f	namespace:Catch::Benchmark::Detail::__anon104
jackknife	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^                static sample jackknife( double ( *estimator )( double const*,$/;"	f	namespace:Catch::Benchmark::Detail::__anon1
junitDurationsParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^junitDurationsParser = re.compile(r' time="[0-9]+\\.[0-9]{3}"')$/;"	v
just_range	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct just_range {$/;"	s	namespace:__anon70	file:
justification	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Justification justification;$/;"	m	struct:Catch::ColumnInfo	file:
justification	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    Justification justification;$/;"	m	struct:Catch::ColumnInfo	file:
keep_memory	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        inline void keep_memory() {$/;"	f	namespace:Catch::Benchmark
keep_memory	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        inline void keep_memory(T* p) {$/;"	f	namespace:Catch::Benchmark
keep_memory	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^        inline void keep_memory() {$/;"	f	namespace:Catch::Benchmark
keep_memory	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^        inline void keep_memory(T* p) {$/;"	f	namespace:Catch::Benchmark
key	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            StringRef key, value;$/;"	m	struct:Catch::__anon122::kvPair	file:
key	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^            StringRef key, value;$/;"	m	struct:Catch::__anon27::kvPair	file:
kvPair	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        struct kvPair {$/;"	s	namespace:Catch::__anon122	file:
kvPair	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^        struct kvPair {$/;"	s	namespace:Catch::__anon27	file:
langFilenameParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^langFilenameParser = re.compile(r'(.+\\.[ch]pp)')$/;"	v
lastAssertionPassed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool RunContext::lastAssertionPassed() {$/;"	f	class:Catch::RunContext
lastAssertionPassed	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    bool RunContext::lastAssertionPassed() {$/;"	f	class:Catch::RunContext
lastMode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        Mode lastMode = None;$/;"	m	class:Catch::TestSpecParser
layout	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    def layout(self):$/;"	m	class:TestPackageConan
layout	leak_demo/Catch2/conanfile.py	/^    def layout(self):$/;"	m	class:CatchConan
lazyExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^        LazyExpression lazyExpression;$/;"	m	struct:Catch::AssertionResultData
lazyPrint	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrint() {$/;"	f	class:Catch::ConsoleReporter
lazyPrint	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrint() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintRunInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrintRunInfo() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintRunInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintRunInfo() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintWithoutClosingBenchmarkTable	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::lazyPrintWithoutClosingBenchmarkTable() {$/;"	f	class:Catch::ConsoleReporter
lazyPrintWithoutClosingBenchmarkTable	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::lazyPrintWithoutClosingBenchmarkTable() {$/;"	f	class:Catch::ConsoleReporter
leading_whitespace	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const leading_whitespace = " \\r \\t\\n There is no extra whitespace here";$/;"	v	file:
leakDetector	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static LeakDetector leakDetector;$/;"	m	namespace:Catch	file:
leakDetector	leak_demo/Catch2/src/catch2/internal/catch_main.cpp	/^    static LeakDetector leakDetector;$/;"	m	namespace:Catch	file:
left	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                std::string left;$/;"	m	struct:Catch::Clara::Detail::HelpColumns
left	leak_demo/Catch2/third_party/clara.hpp	/^        std::string left;$/;"	m	struct:clara::detail::HelpColumns
len	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^struct Data { std::string str; size_t len; };$/;"	m	struct:Data	file:
libIdentify	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Session::libIdentify() {$/;"	f	class:Catch::Session
libIdentify	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool libIdentify = false;$/;"	m	struct:Catch::ConfigData
libIdentify	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    void Session::libIdentify() {$/;"	f	class:Catch::Session
libraryVersion	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Version const& libraryVersion() {$/;"	f	namespace:Catch
libraryVersion	leak_demo/Catch2/src/catch2/catch_version.cpp	/^    Version const& libraryVersion() {$/;"	f	namespace:Catch
license	leak_demo/Catch2/conanfile.py	/^    license = "BSL-1.0"$/;"	v	class:CatchConan
line	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^            line( _line )$/;"	f	struct:Catch::SourceLineInfo
line	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^        std::size_t line;$/;"	m	struct:Catch::SourceLineInfo
lineInfo	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::AssertionInfo
lineInfo	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::SectionInfo
lineInfo	leak_demo/Catch2/src/catch2/catch_tag_alias.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::TagAlias
lineInfo	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
lineInfo	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        SourceLineInfo lineInfo;$/;"	m	struct:Catch::MessageInfo
lineNumberParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^lineNumberParser = re.compile(r' line="[0-9]*"')$/;"	v
lineOfChars	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.hpp	/^        constexpr lineOfChars( char c_ ): c( c_ ) {}$/;"	f	struct:Catch::lineOfChars
lineOfChars	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.hpp	/^    struct lineOfChars {$/;"	s	namespace:Catch
lines	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^lines( std::string const& lines ) {$/;"	f	namespace:__anon102
link_to_changes_in_release	leak_demo/Catch2/tools/scripts/extractFeaturesFromReleaseNotes.py	/^def link_to_changes_in_release(release, releases):$/;"	f
list	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool list( IEventListener& reporter, Config const& config ) {$/;"	f	namespace:Catch
list	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^    bool list( IEventListener& reporter, Config const& config ) {$/;"	f	namespace:Catch
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void listListeners(IEventListener& reporter) {$/;"	f	namespace:Catch::__anon120
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::listListeners() const      { return m_data.listListeners; }$/;"	f	class:Catch::Config
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::listListeners($/;"	f	class:Catch::EventListenerBase
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::listListeners($/;"	f	class:Catch::JsonReporter
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::listListeners($/;"	f	class:Catch::MultiReporter
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReporterBase::listListeners($/;"	f	class:Catch::ReporterBase
listListeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::listListeners(std::vector<ListenerDescription> const& descriptions) {$/;"	f	class:Catch::XmlReporter
listListeners	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::listListeners() const      { return m_data.listListeners; }$/;"	f	class:Catch::Config
listListeners	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool listListeners = false;$/;"	m	struct:Catch::ConfigData
listListeners	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^        void listListeners(IEventListener& reporter) {$/;"	f	namespace:Catch::__anon18
listListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.cpp	/^    void ReporterBase::listListeners($/;"	f	class:Catch::ReporterBase
listListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::listListeners($/;"	f	class:Catch::EventListenerBase
listListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::listListeners($/;"	f	class:Catch::JsonReporter
listListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::listListeners($/;"	f	class:Catch::MultiReporter
listListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::listListeners(std::vector<ListenerDescription> const& descriptions) {$/;"	f	class:Catch::XmlReporter
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void listReporters(IEventListener& reporter) {$/;"	f	namespace:Catch::__anon120
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::listReporters() const      { return m_data.listReporters; }$/;"	f	class:Catch::Config
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::listReporters($/;"	f	class:Catch::EventListenerBase
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::listReporters($/;"	f	class:Catch::JsonReporter
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::MultiReporter
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReporterBase::listReporters($/;"	f	class:Catch::ReporterBase
listReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::XmlReporter
listReporters	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::listReporters() const      { return m_data.listReporters; }$/;"	f	class:Catch::Config
listReporters	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool listReporters = false;$/;"	m	struct:Catch::ConfigData
listReporters	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^        void listReporters(IEventListener& reporter) {$/;"	f	namespace:Catch::__anon18
listReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.cpp	/^    void ReporterBase::listReporters($/;"	f	class:Catch::ReporterBase
listReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::listReporters($/;"	f	class:Catch::EventListenerBase
listReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::listReporters($/;"	f	class:Catch::JsonReporter
listReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::MultiReporter
listReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::listReporters(std::vector<ReporterDescription> const& descriptions) {$/;"	f	class:Catch::XmlReporter
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void listTags(IEventListener& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon120
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::listTags() const           { return m_data.listTags; }$/;"	f	class:Catch::Config
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::listTags( std::vector<TagInfo> const& ) {}$/;"	f	class:Catch::EventListenerBase
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::listTags( std::vector<TagInfo> const& tags ) {$/;"	f	class:Catch::JsonReporter
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::MultiReporter
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReporterBase::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::ReporterBase
listTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::XmlReporter
listTags	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::listTags() const           { return m_data.listTags; }$/;"	f	class:Catch::Config
listTags	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool listTags = false;$/;"	m	struct:Catch::ConfigData
listTags	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^        void listTags(IEventListener& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon18
listTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.cpp	/^    void ReporterBase::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::ReporterBase
listTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::listTags( std::vector<TagInfo> const& ) {}$/;"	f	class:Catch::EventListenerBase
listTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::listTags( std::vector<TagInfo> const& tags ) {$/;"	f	class:Catch::JsonReporter
listTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::MultiReporter
listTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::listTags(std::vector<TagInfo> const& tags) {$/;"	f	class:Catch::XmlReporter
listTestNamesOnly	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void listTestNamesOnly(std::ostream& out,$/;"	f	namespace:Catch::__anon133
listTestNamesOnly	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^        void listTestNamesOnly(std::ostream& out,$/;"	f	namespace:Catch::__anon10
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void listTests(IEventListener& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon120
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::listTests() const          { return m_data.listTests; }$/;"	f	class:Catch::Config
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::listTests( std::vector<TestCaseHandle> const& ) {}$/;"	f	class:Catch::EventListenerBase
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::listTests( std::vector<TestCaseHandle> const& tests ) {$/;"	f	class:Catch::JsonReporter
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::MultiReporter
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReporterBase::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::ReporterBase
listTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::XmlReporter
listTests	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::listTests() const          { return m_data.listTests; }$/;"	f	class:Catch::Config
listTests	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool listTests = false;$/;"	m	struct:Catch::ConfigData
listTests	leak_demo/Catch2/src/catch2/internal/catch_list.cpp	/^        void listTests(IEventListener& reporter, IConfig const& config) {$/;"	f	namespace:Catch::__anon18
listTests	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.cpp	/^    void ReporterBase::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::ReporterBase
listTests	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::listTests( std::vector<TestCaseHandle> const& ) {}$/;"	f	class:Catch::EventListenerBase
listTests	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::listTests( std::vector<TestCaseHandle> const& tests ) {$/;"	f	class:Catch::JsonReporter
listTests	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::MultiReporter
listTests	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::listTests(std::vector<TestCaseHandle> const& tests) {$/;"	f	class:Catch::XmlReporter
list_tests	leak_demo/Catch2/tests/TestScripts/testRandomOrder.py	/^def list_tests(self_test_exe, tags, rng_seed):$/;"	f
list_tests	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^def list_tests(self_test_exe: str, extra_args: List[str] = None):$/;"	f
listeners	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::vector<Detail::unique_ptr<EventListenerFactory>> listeners;$/;"	m	struct:Catch::ReporterRegistry::ReporterRegistryImpl	file:
listeners	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^        std::vector<Detail::unique_ptr<EventListenerFactory>> listeners;$/;"	m	struct:Catch::ReporterRegistry::ReporterRegistryImpl	file:
literals	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^namespace literals {$/;"	n	namespace:Catch	file:
literals	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^namespace literals {$/;"	n	namespace:Catch	file:
literals	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^namespace literals {$/;"	n	namespace:Catch
loadBuffer	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void TokenStream::loadBuffer() {$/;"	f	class:Catch::Clara::Detail::TokenStream
loadBuffer	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            void TokenStream::loadBuffer() {$/;"	f	class:Catch::Clara::Detail::TokenStream
loadBuffer	leak_demo/Catch2/third_party/clara.hpp	/^        void loadBuffer() {$/;"	f	class:clara::detail::TokenStream
location	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        SourceLineInfo location;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocation
location	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        SourceLineInfo location;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocationRef
logfile_prefix	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^const std::string logfile_prefix = "--log-file=";$/;"	v
logic_t	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^struct logic_t {$/;"	s	file:
login_username	leak_demo/Catch2/.conan/build.py	/^    def login_username(self):$/;"	m	class:BuilderSettings
lookup	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        StringRef EnumInfo::lookup( int value ) const {$/;"	f	class:Catch::Detail::EnumInfo
lookup	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^        StringRef EnumInfo::lookup( int value ) const {$/;"	f	class:Catch::Detail::EnumInfo
low_mild	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int low_mild = 0;       \/\/ 1.5 to 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_mild	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^            int low_mild = 0;       \/\/ 1.5 to 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_severe	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int low_severe = 0;     \/\/ more than 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
low_severe	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^            int low_severe = 0;     \/\/ more than 3 times IQR below Q1$/;"	m	struct:Catch::Benchmark::OutlierClassification
lower	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^            T lower;$/;"	m	struct:Catch::Detail::ExtendedMultResult
lower_bound	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            Type lower_bound;$/;"	m	struct:Catch::Benchmark::Estimate
lower_bound	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^            Type lower_bound;$/;"	m	struct:Catch::Benchmark::Estimate
m_a	leak_demo/Catch2/tests/ExtraTests/X33-DuplicatedTestCaseMethods.cpp	/^    int m_a;$/;"	m	class:TestCaseFixture	file:
m_a	leak_demo/Catch2/tests/ExtraTests/X34-DuplicatedTestCaseMethodsDifferentFixtures.cpp	/^    int m_a;$/;"	m	class:TestCaseFixture1	file:
m_a	leak_demo/Catch2/tests/ExtraTests/X34-DuplicatedTestCaseMethodsDifferentFixtures.cpp	/^    int m_a;$/;"	m	class:TestCaseFixture2	file:
m_a	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        T m_a;$/;"	m	struct:__anon64::Template_Fixture	file:
m_a	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        T m_a;$/;"	m	struct:__anon64::Template_Fixture_2	file:
m_a	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        int m_a;$/;"	m	struct:__anon64::Fixture	file:
m_a_has_leq_magnitude	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    bool m_a_has_leq_magnitude;$/;"	m	class:Catch::uniform_floating_point_distribution
m_ab_distance	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    UnsignedIntegerType m_ab_distance;$/;"	m	class:Catch::uniform_integer_distribution
m_active	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        bool m_active = true;$/;"	m	class:Catch::JsonArrayWriter
m_active	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        bool m_active = true;$/;"	m	class:Catch::JsonObjectWriter
m_activeIterators	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                size_t m_activeIterators;$/;"	m	class:Catch::TextFlow::Columns::iterator
m_activeIterators	leak_demo/Catch2/third_party/clara.hpp	/^            size_t m_activeIterators;$/;"	m	class:clara::TextFlow::Columns::iterator
m_activeSections	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        std::vector<ITracker*> m_activeSections;$/;"	m	class:Catch::final
m_activeTestCase	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        TestCaseHandle const* m_activeTestCase = nullptr;$/;"	m	class:Catch::final
m_addHyphen	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                bool m_addHyphen = false;$/;"	m	class:Catch::TextFlow::Column::const_iterator
m_arg	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        std::string m_arg;$/;"	m	class:Catch::TestSpecParser
m_arg	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^        ArgT && m_arg;$/;"	m	class:Catch::MatchExpr
m_args	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::vector<Arg> m_args;$/;"	m	class:Catch::Clara::Parser
m_args	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::vector<StringRef> m_args;$/;"	m	class:Catch::Clara::Args
m_args	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<Arg> m_args;$/;"	m	struct:clara::detail::Parser
m_args	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<std::string> m_args;$/;"	m	class:clara::detail::Args
m_assertion	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            Optional<AssertionStats> m_assertion;$/;"	m	class:Catch::Detail::AssertionOrBenchmarkResult
m_assertionCounter	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    EventCounter m_assertionCounter;$/;"	m	class:ValidatingTestListener	file:
m_assertionInfo	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        AssertionInfo m_assertionInfo;$/;"	m	class:Catch::AssertionHandler
m_assertions	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	/^        Counts m_assertions;$/;"	m	class:Catch::Section
m_benchmark	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            Optional<BenchmarkStats<>> m_benchmark;$/;"	m	class:Catch::Detail::AssertionOrBenchmarkResult
m_buffer	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        char m_buffer[L_tmpnam] = { 0 };$/;"	m	class:Catch::TempFile
m_cache	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        T m_cache;$/;"	m	class:Catch::Generators::final
m_cachedToString	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^        mutable std::string m_cachedToString;$/;"	m	class:Catch::Matchers::MatcherUntypedBase
m_captured	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        size_t m_captured = 0;$/;"	m	class:Catch::Capturer
m_caseSensitivity	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^        CaseSensitive m_caseSensitivity;$/;"	m	class:Catch::WildcardPattern
m_caseSensitivity	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        CaseSensitive m_caseSensitivity;$/;"	m	class:Catch::Matchers::final
m_caseSensitivity	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        CaseSensitive m_caseSensitivity;$/;"	m	struct:Catch::Matchers::CasedString
m_cerr	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        RedirectedStream m_cerr;$/;"	m	class:Catch::RedirectedStdErr
m_children	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        Children m_children;$/;"	m	class:Catch::TestCaseTracking::ITracker
m_chunk	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        std::vector<T> m_chunk;$/;"	m	class:Catch::Generators::final
m_chunk_size	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        size_t m_chunk_size;$/;"	m	class:Catch::Generators::final
m_cli	leak_demo/Catch2/src/catch2/catch_session.hpp	/^        Clara::Parser m_cli;$/;"	m	class:Catch::Session
m_clog	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        RedirectedStream m_clog;$/;"	m	class:Catch::RedirectedStdErr
m_code	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            Colour::Code m_code;$/;"	m	class:Catch::ColourImpl::ColourGuard
m_colour	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Colour::Code m_colour;$/;"	m	class:Catch::__anon134::SummaryColumn	file:
m_colour	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        Detail::unique_ptr<ColourImpl> m_colour;$/;"	m	class:Catch::ReporterBase
m_colour	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            Colour::Code m_colour;$/;"	m	class:Catch::__anon11::SummaryColumn	file:
m_colourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ColourImpl const* m_colourImpl;$/;"	m	class:Catch::ColourImpl::ColourGuard
m_colourMode	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        ColourMode m_colourMode;$/;"	m	class:Catch::ColourMode
m_colourMode	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        Optional<ColourMode> m_colourMode;$/;"	m	class:Catch::ReporterSpec
m_column	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                Column const& m_column;$/;"	m	class:Catch::TextFlow::Column::const_iterator
m_column	leak_demo/Catch2/third_party/clara.hpp	/^            Column const& m_column;$/;"	m	class:clara::TextFlow::Column::iterator
m_columnInfos	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<ColumnInfo> m_columnInfos;$/;"	m	class:Catch::TablePrinter	file:
m_columnInfos	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    std::vector<ColumnInfo> m_columnInfos;$/;"	m	class:Catch::TablePrinter	file:
m_columns	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                std::vector<Column> const& m_columns;$/;"	m	class:Catch::TextFlow::Columns::iterator::std
m_columns	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            std::vector<Column> m_columns;$/;"	m	class:Catch::TextFlow::Columns
m_columns	leak_demo/Catch2/third_party/clara.hpp	/^            std::vector<Column> const& m_columns;$/;"	m	class:clara::TextFlow::Columns::iterator::std
m_columns	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<Column> m_columns;$/;"	m	class:clara::TextFlow::Columns
m_comparator	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        CasedString m_comparator;$/;"	m	class:Catch::Matchers::StringMatcherBase
m_comparator	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        T const& m_comparator;$/;"	m	class:Catch::Matchers::final
m_comparator	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        std::vector<T, AllocComp> const& m_comparator;$/;"	m	class:Catch::Matchers::final::std
m_completed	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        bool m_completed = false;$/;"	m	class:Catch::AssertionHandler
m_config	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Config const* m_config;$/;"	m	class:Catch::__anon108::TestGroup	file:
m_config	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        IConfig const* m_config = nullptr;$/;"	m	class:Catch::Context
m_config	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            Config const* m_config;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_config	leak_demo/Catch2/src/catch2/catch_session.hpp	/^        Detail::unique_ptr<Config> m_config;$/;"	m	class:Catch::Session
m_config	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        IConfig const* m_config;$/;"	m	class:Catch::IEventListener
m_config	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^        IConfig const* m_config = nullptr;$/;"	m	class:Catch::Context
m_config	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        IConfig const* m_config;$/;"	m	class:Catch::final
m_configData	leak_demo/Catch2/src/catch2/catch_session.hpp	/^        ConfigData m_configData;$/;"	m	class:Catch::Session
m_context	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            RunContext m_context;$/;"	m	class:Catch::__anon108::TestGroup	file:
m_context	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            RunContext m_context;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_count	leak_demo/Catch2/src/catch2/internal/catch_string_manip.hpp	/^        std::uint64_t m_count;$/;"	m	class:Catch::pluralise
m_cout	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        RedirectedStream m_cout;$/;"	m	class:Catch::RedirectedStdOut
m_ctx	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        TrackerContext& m_ctx;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
m_current	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        size_t m_current = 0;$/;"	m	class:Catch::Generators::Generators
m_current	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    T m_current;$/;"	m	class:Catch::Generators::final
m_current	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    size_t m_current = 0;$/;"	m	class:Catch::Generators::final
m_currentColumn	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int m_currentColumn = -1;$/;"	m	class:Catch::TablePrinter	file:
m_currentColumn	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    int m_currentColumn = -1;$/;"	m	class:Catch::TablePrinter	file:
m_currentElementIndex	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^            std::size_t m_currentElementIndex = 0;$/;"	m	class:Catch::Generators::GeneratorUntypedBase
m_currentFilter	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        TestSpec::Filter m_currentFilter;$/;"	m	class:Catch::TestSpecParser
m_currentSortOrder	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        mutable TestRunOrder m_currentSortOrder = TestRunOrder::Declared;$/;"	m	class:Catch::TestRegistry
m_currentTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        ITracker* m_currentTracker = nullptr;$/;"	m	class:Catch::TestCaseTracking::TrackerContext
m_current_number	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    Float m_current_number;$/;"	m	class:Catch::Generators::final
m_current_number	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    Integer m_current_number;$/;"	m	class:Catch::Generators::final
m_current_number	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    long double m_current_number;$/;"	m	class:Catch::Generators::final
m_current_repeat	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        size_t m_current_repeat = 0;$/;"	m	class:Catch::Generators::final
m_customOptions	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        std::map<std::string, std::string> m_customOptions;$/;"	m	class:Catch::ColourMode
m_customOptions	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        std::map<std::string, std::string> m_customOptions;$/;"	m	class:Catch::ReporterSpec
m_customOptions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        std::map<std::string, std::string> m_customOptions;$/;"	m	class:Catch::ReporterBase
m_data	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ConfigData m_data;$/;"	m	class:Catch::Config
m_deepestSection	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        SectionNode* m_deepestSection = nullptr;$/;"	m	class:Catch::CumulativeReporterBase
m_derefed	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    mutable std::unique_ptr<bool[]> m_derefed;$/;"	m	struct:with_mocked_iterator_access
m_description	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                StringRef m_description;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_description	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^    std::string m_description;$/;"	m	class:Catch::Matchers::final
m_description	leak_demo/Catch2/third_party/clara.hpp	/^        std::string m_description;$/;"	m	class:clara::detail::ParserRefImpl
m_desired	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            T m_desired;$/;"	m	class:Catch::Matchers::final
m_desired	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^            TargetRangeLike m_desired;$/;"	m	class:Catch::Matchers::final
m_dist	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^    std::uniform_int_distribution<> m_dist;$/;"	m	class:__anon101::final	file:
m_dist	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    Catch::uniform_floating_point_distribution<Float> m_dist;$/;"	m	class:Catch::Generators::final
m_dist	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    Catch::uniform_integer_distribution<Integer> m_dist;$/;"	m	class:Catch::Generators::final
m_elements	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        std::vector<T> m_elements;$/;"	m	class:unrelated::needs_ADL_begin
m_elements	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    std::list<T> m_elements;$/;"	m	class:has_different_begin_end_types
m_elements	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    std::vector<T> m_elements;$/;"	m	struct:with_mocked_iterator_access
m_elems	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    std::vector<T> m_elems;$/;"	m	class:Catch::Generators::final
m_end	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    T m_end;$/;"	m	class:Catch::Generators::final
m_end	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        underlying_iter m_end;$/;"	m	class:has_different_begin_end_types::iterator
m_end	leak_demo/Catch2/third_party/clara.hpp	/^            size_t m_end = 0;$/;"	m	class:clara::TextFlow::Column::iterator
m_engaged	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        m_engaged( rhs.m_engaged ) {$/;"	f	namespace:Catch
m_engaged	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        m_engaged( rhs.m_engaged ) {$/;"	f	namespace:Catch
m_engaged	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            bool m_engaged = false;$/;"	m	class:Catch::ColourImpl::ColourGuard
m_enumInfos	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.hpp	/^            std::vector<Catch::Detail::unique_ptr<EnumInfo>> m_enumInfos;$/;"	m	class:Catch::Detail::EnumValuesRegistry
m_enumValuesRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Detail::EnumValuesRegistry m_enumValuesRegistry;$/;"	m	class:Catch::__anon107::RegistryHub	file:
m_enumValuesRegistry	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^            Detail::EnumValuesRegistry m_enumValuesRegistry;$/;"	m	class:Catch::__anon15::RegistryHub	file:
m_epsilon	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        double m_epsilon;$/;"	m	class:Catch::Approx
m_epsilon	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        double m_epsilon;$/;"	m	class:Catch::Matchers::Detail::final
m_eq	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            Equality m_eq;$/;"	m	class:Catch::Matchers::final
m_errorMessage	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                    m_errorMessage; \/\/ Only populated if resultType is an error$/;"	m	class:Catch::Clara::Detail::BasicResult
m_errorMessage	leak_demo/Catch2/third_party/clara.hpp	/^        std::string m_errorMessage; \/\/ Only populated if resultType is an error$/;"	m	class:clara::detail::BasicResult
m_escapeChars	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        std::vector<std::size_t> m_escapeChars;$/;"	m	class:Catch::TestSpecParser
m_exceptionRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            StartupExceptionRegistry m_exceptionRegistry;$/;"	m	class:Catch::__anon107::RegistryHub	file:
m_exceptionRegistry	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^            StartupExceptionRegistry m_exceptionRegistry;$/;"	m	class:Catch::__anon15::RegistryHub	file:
m_exceptionTranslatorRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ExceptionTranslatorRegistry m_exceptionTranslatorRegistry;$/;"	m	class:Catch::__anon107::RegistryHub	file:
m_exceptionTranslatorRegistry	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^            ExceptionTranslatorRegistry m_exceptionTranslatorRegistry;$/;"	m	class:Catch::__anon15::RegistryHub	file:
m_exceptions	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.hpp	/^        std::vector<std::exception_ptr> m_exceptions;$/;"	m	class:Catch::StartupExceptionRegistry
m_exclusion	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        bool m_exclusion = false;$/;"	m	class:Catch::TestSpecParser
m_exeName	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            StringRef m_exeName;$/;"	m	class:Catch::Clara::Args
m_exeName	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            mutable ExeName m_exeName;$/;"	m	class:Catch::Clara::Parser
m_exeName	leak_demo/Catch2/third_party/clara.hpp	/^        mutable ExeName m_exeName;$/;"	m	struct:clara::detail::Parser
m_exeName	leak_demo/Catch2/third_party/clara.hpp	/^        std::string m_exeName;$/;"	m	class:clara::detail::Args
m_expected	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^        int m_expected;$/;"	m	class:__anon75::ExceptionMatcher	file:
m_fatalConditionhandler	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        FatalConditionHandler m_fatalConditionhandler;$/;"	m	class:Catch::final
m_file	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::FILE* m_file = nullptr;$/;"	m	class:Catch::TempFile
m_filters	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        std::vector<Filter> m_filters;$/;"	m	class:Catch::TestSpec
m_filters	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        std::vector<StringRef> m_filters;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
m_first	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        bool m_first = true;$/;"	m	class:__anon94::CustomStringifyGenerator	file:
m_first	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        bool m_first = true;$/;"	m	class:__anon95::StringifyCountingGenerator	file:
m_floats_in_range	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    WidthType m_floats_in_range;$/;"	m	class:Catch::uniform_floating_point_distribution
m_fmt	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        m_fmt(other.m_fmt)$/;"	f	namespace:Catch
m_fmt	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^        m_fmt(other.m_fmt)$/;"	f	namespace:Catch
m_fmt	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^            XmlFormatting m_fmt;$/;"	m	class:Catch::XmlWriter::ScopedElement
m_forWhat	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        ForWhat m_forWhat;$/;"	m	class:Catch::XmlEncode
m_forbidden	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            std::vector<Detail::unique_ptr<Pattern>> m_forbidden;$/;"	m	struct:Catch::TestSpec::Filter
m_fullConfig	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        IConfig const* m_fullConfig;$/;"	m	class:Catch::ColourMode
m_function	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        Func m_function;$/;"	m	class:Catch::Generators::final
m_generator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                GeneratorBasePtr m_generator;$/;"	m	struct:Catch::Generators::__anon123::final	file:
m_generator	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        GeneratorPtr<T> m_generator;$/;"	m	class:Catch::Generators::final
m_generator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        GeneratorWrapper<T> m_generator;$/;"	m	class:Catch::Generators::final
m_generator	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        GeneratorWrapper<U> m_generator;$/;"	m	class:Catch::Generators::final
m_generator	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^                GeneratorBasePtr m_generator;$/;"	m	struct:Catch::Generators::__anon21::final	file:
m_generators	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        std::vector<GeneratorWrapper<T>> m_generators;$/;"	m	class:Catch::Generators::Generators
m_handler	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^        FatalConditionHandler* m_handler;$/;"	m	class:Catch::FatalConditionHandlerGuard
m_handles	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseHandle> m_handles;$/;"	m	class:Catch::TestRegistry
m_hasTestFilters	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool m_hasTestFilters = false;$/;"	m	class:Catch::Config
m_haveNoncapturingReporters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        bool m_haveNoncapturingReporters = false;$/;"	m	class:Catch::final
m_headerPrinted	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        bool m_headerPrinted = false;$/;"	m	class:Catch::final
m_headerPrintedForThisSection	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        bool m_headerPrintedForThisSection = false;$/;"	m	class:Catch::final
m_hint	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                StringRef m_hint;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_hint	leak_demo/Catch2/third_party/clara.hpp	/^        std::string m_hint;$/;"	m	class:clara::detail::ParserRefImpl
m_idx	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        size_t m_idx = 0;$/;"	m	class:Catch::Generators::final
m_impl	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.hpp	/^        Detail::unique_ptr<ReporterRegistryImpl> m_impl;$/;"	m	class:Catch::ReporterRegistry
m_inNanoseconds	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    double m_inNanoseconds;$/;"	m	class:Catch::__anon131::Duration	file:
m_inNanoseconds	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    double m_inNanoseconds;$/;"	m	class:Catch::__anon12::Duration	file:
m_includeSuccessfulResults	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        bool m_includeSuccessfulResults;$/;"	m	class:Catch::final
m_indent	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            size_t m_indent = 0;$/;"	m	class:Catch::TextFlow::Column
m_indent	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        std::string m_indent;$/;"	m	class:Catch::XmlWriter
m_indent	leak_demo/Catch2/third_party/clara.hpp	/^        size_t m_indent = 0;$/;"	m	class:clara::TextFlow::Column
m_indent_level	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::uint64_t m_indent_level;$/;"	m	class:Catch::JsonArrayWriter
m_indent_level	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::uint64_t m_indent_level;$/;"	m	class:Catch::JsonObjectWriter
m_indent_level	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::uint64_t m_indent_level;$/;"	m	class:Catch::JsonValueWriter
m_index	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.hpp	/^        std::size_t m_index;$/;"	m	class:Catch::ReusableStringStream
m_info	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^        AssertionInfo m_info;$/;"	m	class:Catch::AssertionResult
m_info	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        MessageInfo m_info;$/;"	m	class:Catch::ScopedMessage
m_info	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        MessageInfo m_info;$/;"	m	struct:Catch::MessageBuilder
m_info	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        TestCaseInfo* m_info;$/;"	m	class:Catch::TestCaseProperties::TestCaseHandle
m_info	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	/^        SectionInfo m_info;$/;"	m	class:Catch::Section
m_initialIndent	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            size_t m_initialIndent = std::string::npos;$/;"	m	class:Catch::TextFlow::Column
m_initialIndent	leak_demo/Catch2/third_party/clara.hpp	/^        size_t m_initialIndent = std::string::npos;$/;"	m	class:clara::TextFlow::Column
m_insertedListeners	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        size_t m_insertedListeners = 0;$/;"	m	class:Catch::final
m_int_dist	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    uniform_integer_distribution<WidthType> m_int_dist;$/;"	m	class:Catch::uniform_floating_point_distribution
m_invalidSpecs	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        std::vector<std::string> m_invalidSpecs;$/;"	m	class:Catch::TestSpec
m_invoker	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        ITestInvoker* m_invoker;$/;"	m	class:Catch::TestCaseProperties::TestCaseHandle
m_invokers	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<Detail::unique_ptr<ITestInvoker>> m_invokers;$/;"	m	class:Catch::TestRegistry
m_isBinaryExpression	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        bool m_isBinaryExpression;$/;"	m	class:Catch::ITransientExpression
m_isNegated	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^        bool m_isNegated;$/;"	m	class:Catch::LazyExpression
m_isOpen	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool m_isOpen = false;$/;"	m	class:Catch::TablePrinter	file:
m_isOpen	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    bool m_isOpen = false;$/;"	m	class:Catch::TablePrinter	file:
m_iterators	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                std::vector<Column::const_iterator> m_iterators;$/;"	m	class:Catch::TextFlow::Columns::iterator
m_iterators	leak_demo/Catch2/third_party/clara.hpp	/^            std::vector<Column::iterator> m_iterators;$/;"	m	class:clara::TextFlow::Columns::iterator
m_label	leak_demo/Catch2/src/catch2/internal/catch_string_manip.hpp	/^        StringRef m_label;$/;"	m	class:Catch::pluralise
m_lambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                L m_lambda;$/;"	m	struct:Catch::Clara::Detail::BoundFlagLambda
m_lambda	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                L m_lambda;$/;"	m	struct:Catch::Clara::Detail::BoundLambda
m_lambda	leak_demo/Catch2/third_party/clara.hpp	/^        L m_lambda;$/;"	m	struct:clara::detail::BoundFlagLambda
m_lambda	leak_demo/Catch2/third_party/clara.hpp	/^        L m_lambda;$/;"	m	struct:clara::detail::BoundLambda
m_lastAssertionInfo	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        AssertionInfo m_lastAssertionInfo;$/;"	m	class:Catch::final
m_lastAssertionPassed	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        bool m_lastAssertionPassed = false;$/;"	m	class:Catch::final
m_lastResult	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        Optional<AssertionResult> m_lastResult;$/;"	m	class:Catch::final
m_lastSeenPartNumber	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    uint64_t m_lastSeenPartNumber = 0;$/;"	m	class:ValidatingTestListener	file:
m_len	leak_demo/Catch2/third_party/clara.hpp	/^            size_t m_len = 0;$/;"	m	class:clara::TextFlow::Column::iterator
m_lhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^            m_lhs( lhs )$/;"	f	class:Catch::UnaryExpr
m_lhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        LhsT m_lhs;$/;"	m	class:Catch::BinaryExpr
m_lhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        LhsT m_lhs;$/;"	m	class:Catch::ExprLhs
m_lhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        LhsT m_lhs;$/;"	m	class:Catch::UnaryExpr
m_line	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^    std::string m_line;$/;"	m	class:__anon102::final	file:
m_lineLength	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                size_t m_lineLength = 0;$/;"	m	class:Catch::TextFlow::Column::const_iterator
m_lineStart	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                size_t m_lineStart = 0;$/;"	m	class:Catch::TextFlow::Column::const_iterator
m_listenerName	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.hpp	/^            StringRef m_listenerName;$/;"	m	class:Catch::ListenerRegistrar::TypedListenerFactory
m_margin	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        double m_margin;$/;"	m	class:Catch::Approx
m_margin	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        double m_margin;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
m_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
m_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
m_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^    StringMatcherType m_matcher;$/;"	m	class:Catch::Matchers::final
m_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^            Matcher m_matcher;$/;"	m	class:Catch::Matchers::final
m_matcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatcherT const& m_matcher;$/;"	m	class:Catch::Matchers::Detail::final
m_matcher	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^            m_matcher( matcher )$/;"	f	class:Catch::MatchExpr
m_matcher	leak_demo/Catch2/src/catch2/matchers/internal/catch_matchers_impl.hpp	/^        MatcherT const& m_matcher;$/;"	m	class:Catch::MatchExpr
m_matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            std::vector<MatcherBase<ArgT> const*> m_matchers;$/;"	m	class:Catch::Matchers::Detail::final
m_matchers	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            std::array<void const*, sizeof...( MatcherTs )> m_matchers;$/;"	m	class:Catch::Matchers::Detail::final
m_matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TestSpec::Matches m_matches;$/;"	m	class:Catch::__anon108::TestGroup	file:
m_matches	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            TestSpec::Matches m_matches;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_max_steps_in_one_go	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    WidthType m_max_steps_in_one_go;$/;"	m	class:Catch::uniform_floating_point_distribution
m_message	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^    std::string m_message;$/;"	m	class:Catch::Matchers::final
m_messageScopes	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        std::vector<ScopedMessage> m_messageScopes; \/* Keeps owners of so-called unscoped messages. *\/$/;"	m	class:Catch::final
m_messages	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        std::vector<MessageInfo> m_messages;$/;"	m	class:Catch::Capturer
m_messages	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        std::vector<MessageInfo> m_messages;$/;"	m	class:Catch::final
m_mode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        Mode m_mode = None;$/;"	m	class:Catch::TestSpecParser
m_moved	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        bool m_moved = false;$/;"	m	class:Catch::ScopedMessage
m_msg	leak_demo/Catch2/src/catch2/generators/catch_generator_exception.hpp	/^        const char* const m_msg = "";$/;"	m	class:Catch::GeneratorException
m_msg	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        std::string m_msg;$/;"	m	class:__anon71::CustomException	file:
m_msg	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        std::string m_msg;$/;"	m	class:__anon71::CustomStdException	file:
m_name	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            std::string const m_name;$/;"	m	class:Catch::TestSpec::Pattern::std
m_name	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^            StringRef m_name;$/;"	m	struct:Catch::Detail::EnumInfo
m_name	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::shared_ptr<std::string> m_name;$/;"	m	class:Catch::Clara::ExeName
m_name	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        std::string m_name;$/;"	m	class:Catch::ReporterSpec
m_name	leak_demo/Catch2/third_party/clara.hpp	/^        std::shared_ptr<std::string> m_name;$/;"	m	class:clara::detail::ExeName
m_nameAndLocation	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        NameAndLocation m_nameAndLocation;$/;"	m	class:Catch::TestCaseTracking::ITracker
m_nanoseconds	leak_demo/Catch2/src/catch2/catch_timer.hpp	/^        uint64_t m_nanoseconds = 0;$/;"	m	class:Catch::Timer
m_needsNewline	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        bool m_needsNewline = false;$/;"	m	class:Catch::XmlWriter
m_ofs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::ofstream m_ofs;$/;"	m	class:Catch::Detail::__anon119::final	file:
m_ofs	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            std::ofstream m_ofs;$/;"	m	class:Catch::Detail::__anon30::final	file:
m_okToFail	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        bool m_okToFail = false;$/;"	m	class:Catch::final
m_oldErrno	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.hpp	/^        int m_oldErrno;$/;"	m	class:Catch::ErrnoGuard
m_op	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        StringRef m_op;$/;"	m	class:Catch::BinaryExpr
m_operation	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        StringRef m_operation;$/;"	m	class:Catch::Matchers::StringMatcherBase
m_optNames	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::vector<StringRef> m_optNames;$/;"	m	class:Catch::Clara::Opt
m_optNames	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<std::string> m_optNames;$/;"	m	class:clara::detail::Opt
m_optionality	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                Optionality m_optionality = Optionality::Optional;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_optionality	leak_demo/Catch2/third_party/clara.hpp	/^        Optionality m_optionality = Optionality::Optional;$/;"	m	class:clara::detail::ParserRefImpl
m_options	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::vector<Opt> m_options;$/;"	m	class:Catch::Clara::Parser
m_options	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<Opt> m_options;$/;"	m	struct:clara::detail::Parser
m_origin_idx	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        size_t m_origin_idx;$/;"	m	class:with_mocked_iterator_access::basic_iterator
m_originalStderr	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        int m_originalStderr = -1;$/;"	m	class:Catch::OutputRedirect
m_originalStdout	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        int m_originalStdout = -1;$/;"	m	class:Catch::OutputRedirect
m_originalStream	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::ostream& m_originalStream;$/;"	m	class:Catch::RedirectedStream
m_os	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::ostream m_os;$/;"	m	class:Catch::Detail::__anon119::CerrStream	file:
m_os	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::ostream m_os;$/;"	m	class:Catch::Detail::__anon119::final	file:
m_os	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& m_os;$/;"	m	class:Catch::TablePrinter	file:
m_os	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            std::ostream m_os;$/;"	m	class:Catch::Detail::__anon30::CerrStream	file:
m_os	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            std::ostream m_os;$/;"	m	class:Catch::Detail::__anon30::final	file:
m_os	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::ostream& m_os;$/;"	m	class:Catch::JsonArrayWriter
m_os	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::ostream& m_os;$/;"	m	class:Catch::JsonObjectWriter
m_os	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::ostream& m_os;$/;"	m	class:Catch::JsonValueWriter
m_os	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        std::ostream& m_os;$/;"	m	class:Catch::XmlWriter
m_os	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    std::ostream& m_os;$/;"	m	class:Catch::TablePrinter	file:
m_oss	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReusableStringStream m_oss;$/;"	m	class:Catch::TablePrinter	file:
m_oss	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.hpp	/^        std::ostream* m_oss;$/;"	m	class:Catch::ReusableStringStream
m_oss	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    ReusableStringStream m_oss;$/;"	m	class:Catch::TablePrinter	file:
m_other	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            SectionInfo const& m_other;$/;"	m	struct:Catch::__anon132::BySectionInfo	file:
m_other	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^            SectionInfo const& m_other;$/;"	m	struct:Catch::__anon4::BySectionInfo	file:
m_outputFileName	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        Optional<std::string> m_outputFileName;$/;"	m	class:Catch::ReporterSpec
m_owned_test_infos	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<Detail::unique_ptr<TestCaseInfo>> m_owned_test_infos;$/;"	m	class:Catch::TestRegistry
m_parent	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        ITracker* m_parent = nullptr;$/;"	m	class:Catch::TestCaseTracking::ITracker
m_parsedTo	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                size_t m_parsedTo = 0;$/;"	m	class:Catch::TextFlow::Column::const_iterator
m_pattern	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^        std::string m_pattern;$/;"	m	class:Catch::WildcardPattern
m_patternName	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        std::string m_patternName;$/;"	m	class:Catch::TestSpecParser
m_pimpl	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    Catch::Detail::unique_ptr<PImpl> m_pimpl;$/;"	m	class:Catch::Generators::final
m_pos	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        std::size_t m_pos = 0;$/;"	m	class:Catch::TestSpecParser
m_pos	leak_demo/Catch2/third_party/clara.hpp	/^            size_t m_pos = 0;$/;"	m	class:clara::TextFlow::Column::iterator
m_positive	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    bool m_positive;$/;"	m	class:Catch::Generators::final
m_predicate	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        Predicate m_predicate;$/;"	m	class:Catch::Generators::final
m_predicate	leak_demo/Catch2/src/catch2/matchers/catch_matchers_predicate.hpp	/^    Predicate m_predicate;$/;"	m	class:Catch::Matchers::final
m_predicate	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^            Equality m_predicate;$/;"	m	class:Catch::Matchers::final
m_preferences	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        ReporterPreferences m_preferences;$/;"	m	class:Catch::IEventListener
m_prevBuf	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::streambuf* m_prevBuf;$/;"	m	class:Catch::RedirectedStream
m_processedReporterSpecs	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::vector<ProcessedReporterSpec> m_processedReporterSpecs;$/;"	m	class:Catch::Config
m_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            m_ptr(rhs.m_ptr) {$/;"	f	class:Catch::Detail::unique_ptr
m_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        T* m_ptr;$/;"	m	class:Catch::Detail::unique_ptr
m_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^            m_ptr(rhs.m_ptr) {$/;"	f	class:Catch::Detail::unique_ptr
m_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        T* m_ptr;$/;"	m	class:Catch::Detail::unique_ptr
m_rand	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^    std::minstd_rand m_rand;$/;"	m	class:__anon101::final	file:
m_range	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    Range const& m_range;$/;"	m	struct:EqualsRangeMatcher	file:
m_reaction	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        AssertionReaction m_reaction;$/;"	m	class:Catch::AssertionHandler
m_realPatternPos	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        std::size_t m_realPatternPos = 0;$/;"	m	class:Catch::TestSpecParser
m_recorder	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        std::vector<std::string>& m_recorder;$/;"	m	class:__anon98::MockListener	file:
m_recorder	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        std::vector<std::string>& m_recorder;$/;"	m	class:__anon98::MockReporter	file:
m_redirectedCerr	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::string& m_redirectedCerr;$/;"	m	class:Catch::RedirectedStreams
m_redirectedCout	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::string& m_redirectedCout;$/;"	m	class:Catch::RedirectedStreams
m_redirectedStdErr	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        RedirectedStdErr m_redirectedStdErr;$/;"	m	class:Catch::RedirectedStreams
m_redirectedStdOut	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        RedirectedStdOut m_redirectedStdOut;$/;"	m	class:Catch::RedirectedStreams
m_redirectionStream	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::ostream& m_redirectionStream;$/;"	m	class:Catch::RedirectedStream
m_ref	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                T& m_ref;$/;"	m	struct:Catch::Clara::Detail::BoundValueRef
m_ref	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                bool& m_ref;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRef
m_ref	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                std::shared_ptr<BoundRef> m_ref;$/;"	m	class:Catch::Clara::Detail::ParserRefImpl
m_ref	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                std::vector<T>& m_ref;$/;"	m	struct:Catch::Clara::Detail::BoundValueRef
m_ref	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::shared_ptr<Detail::BoundValueRefBase> m_ref;$/;"	m	class:Catch::Clara::ExeName
m_ref	leak_demo/Catch2/third_party/clara.hpp	/^        T &m_ref;$/;"	m	struct:clara::detail::BoundValueRef
m_ref	leak_demo/Catch2/third_party/clara.hpp	/^        bool &m_ref;$/;"	m	struct:clara::detail::BoundFlagRef
m_ref	leak_demo/Catch2/third_party/clara.hpp	/^        std::shared_ptr<BoundRef> m_ref;$/;"	m	class:clara::detail::ParserRefImpl
m_ref	leak_demo/Catch2/third_party/clara.hpp	/^        std::shared_ptr<BoundValueRefBase> m_ref;$/;"	m	class:clara::detail::ExeName
m_ref	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<T> &m_ref;$/;"	m	struct:clara::detail::BoundValueRef
m_referenceStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::ostringstream m_referenceStream; \/\/ Used for copy state\/ flags from$/;"	m	struct:Catch::StringStreams	file:
m_referenceStream	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^        std::ostringstream m_referenceStream; \/\/ Used for copy state\/ flags from$/;"	m	struct:Catch::StringStreams	file:
m_regex	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        std::string m_regex;$/;"	m	class:Catch::Matchers::final
m_registry	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	/^        std::map<std::string, TagAlias> m_registry;$/;"	m	class:Catch::TagAliasRegistry
m_rejection_threshold	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    UnsignedIntegerType m_rejection_threshold = 0;$/;"	m	class:Catch::uniform_integer_distribution
m_remainingTokens	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                TokenStream m_remainingTokens;$/;"	m	class:Catch::Clara::Detail::ParseState
m_remainingTokens	leak_demo/Catch2/third_party/clara.hpp	/^        TokenStream m_remainingTokens;$/;"	m	class:clara::detail::ParseState
m_repeat_index	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        size_t m_repeat_index = 0;$/;"	m	class:Catch::Generators::final
m_reporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            IEventListener* m_reporter;$/;"	m	class:Catch::__anon108::TestGroup	file:
m_reporter	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            IEventListener* m_reporter;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_reporter	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        IEventListenerPtr m_reporter;$/;"	m	class:Catch::final
m_reporterLikes	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        std::vector<IEventListenerPtr> m_reporterLikes;$/;"	m	class:Catch::final
m_reporterRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ReporterRegistry m_reporterRegistry;$/;"	m	class:Catch::__anon107::RegistryHub	file:
m_reporterRegistry	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^            ReporterRegistry m_reporterRegistry;$/;"	m	class:Catch::__anon15::RegistryHub	file:
m_required	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            std::vector<Detail::unique_ptr<Pattern>> m_required;$/;"	m	struct:Catch::TestSpec::Filter
m_result	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        bool m_result;$/;"	m	class:Catch::ITransientExpression
m_resultCapture	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        IResultCapture* m_resultCapture = nullptr;$/;"	m	class:Catch::Context
m_resultCapture	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        IResultCapture& m_resultCapture;$/;"	m	class:Catch::Capturer
m_resultCapture	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        IResultCapture& m_resultCapture;$/;"	m	class:Catch::AssertionHandler
m_resultCapture	leak_demo/Catch2/src/catch2/internal/catch_context.hpp	/^        IResultCapture* m_resultCapture = nullptr;$/;"	m	class:Catch::Context
m_resultData	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^        AssertionResultData m_resultData;$/;"	m	class:Catch::AssertionResult
m_returned	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        mutable std::vector<T> m_returned;$/;"	m	class:Catch::Generators::final
m_returned	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        size_t m_returned = 0;$/;"	m	class:Catch::Generators::final
m_rhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^            m_rhs( rhs )$/;"	f	class:Catch::BinaryExpr
m_rhs	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        RhsT m_rhs;$/;"	m	class:Catch::BinaryExpr
m_rng	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    Catch::SimplePcg32 m_rng;$/;"	m	class:Catch::Generators::final
m_rootSection	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        Detail::unique_ptr<SectionNode> m_rootSection;$/;"	m	class:Catch::CumulativeReporterBase
m_rootTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        ITrackerPtr m_rootTracker;$/;"	m	class:Catch::TestCaseTracking::TrackerContext
m_rows	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::vector<std::string> m_rows;$/;"	m	class:Catch::__anon134::SummaryColumn	file:
m_rows	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            std::vector<std::string> m_rows;$/;"	m	class:Catch::__anon11::SummaryColumn	file:
m_rss	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        ReusableStringStream m_rss;$/;"	m	class:Catch::RedirectedStdErr
m_rss	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        ReusableStringStream m_rss;$/;"	m	class:Catch::RedirectedStdOut
m_runInfo	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        TestRunInfo m_runInfo;$/;"	m	class:Catch::final
m_runState	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        CycleState m_runState = NotStarted;$/;"	m	class:Catch::TestCaseTracking::ITracker
m_runState	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        RunState m_runState = NotStarted;$/;"	m	class:Catch::TestCaseTracking::TrackerContext
m_scale	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        double m_scale;$/;"	m	class:Catch::Approx
m_sectionCounter	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    EventCounter m_sectionCounter;$/;"	m	class:ValidatingTestListener	file:
m_sectionDepth	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        int m_sectionDepth = 0;$/;"	m	class:Catch::XmlReporter
m_sectionIncluded	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	/^        bool m_sectionIncluded;$/;"	m	class:Catch::Section
m_sectionStack	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        std::vector<SectionNode*> m_sectionStack;$/;"	m	class:Catch::CumulativeReporterBase
m_sectionStack	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^        std::vector<SectionInfo> m_sectionStack;$/;"	m	class:Catch::StreamingReporterBase
m_seed	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.hpp	/^        hash_t m_seed;$/;"	m	class:Catch::TestCaseInfoHasher
m_shouldReportUnexpected	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        bool m_shouldReportUnexpected = true;$/;"	m	class:Catch::final
m_shouldStoreFailedAssertions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        bool m_shouldStoreFailedAssertions = true;$/;"	m	class:Catch::CumulativeReporterBase
m_shouldStoreSuccesfulAssertions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        bool m_shouldStoreSuccesfulAssertions = true;$/;"	m	class:Catch::CumulativeReporterBase
m_should_comma	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        bool m_should_comma = false;$/;"	m	class:Catch::JsonArrayWriter
m_should_comma	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        bool m_should_comma = false;$/;"	m	class:Catch::JsonObjectWriter
m_size	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            m_size( size )$/;"	f	class:Catch::StringRef
m_size	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            m_size( stdString.size() )$/;"	f	class:Catch::StringRef
m_size	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        size_type m_size = 0;$/;"	m	class:Catch::StringRef
m_size	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^            m_size( size )$/;"	f	class:Catch::StringRef
m_size	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^            m_size( stdString.size() )$/;"	f	class:Catch::StringRef
m_size	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        size_type m_size = 0;$/;"	m	class:Catch::StringRef
m_sortedFunctions	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        mutable std::vector<TestCaseHandle> m_sortedFunctions;$/;"	m	class:Catch::TestRegistry
m_sstream	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        std::stringstream m_sstream;$/;"	m	class:Catch::JsonValueWriter
m_start	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        char const* m_start = s_empty;$/;"	m	class:Catch::StringRef
m_start	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        char const* m_start = s_empty;$/;"	m	class:Catch::StringRef
m_started	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^        bool m_started = false;$/;"	m	class:Catch::FatalConditionHandler
m_startedListing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        bool m_startedListing = false;$/;"	m	class:Catch::JsonReporter
m_startupExceptions	leak_demo/Catch2/src/catch2/catch_session.hpp	/^        bool m_startupExceptions = false;$/;"	m	class:Catch::Session
m_state	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^        std::uint64_t m_state;$/;"	m	class:Catch::SimplePcg32
m_stderrDest	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::string& m_stderrDest;$/;"	m	class:Catch::OutputRedirect
m_stderrFile	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        TempFile m_stderrFile;$/;"	m	class:Catch::OutputRedirect
m_stdoutDest	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        std::string& m_stdoutDest;$/;"	m	class:Catch::OutputRedirect
m_stdoutFile	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        TempFile m_stdoutFile;$/;"	m	class:Catch::OutputRedirect
m_step	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^    T m_step;$/;"	m	class:Catch::Generators::final
m_str	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        StringRef m_str;$/;"	m	class:Catch::XmlEncode
m_str	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        std::string m_str;$/;"	m	struct:Catch::Matchers::CasedString
m_stream	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^    std::FILE* m_stream;$/;"	m	class:out_buff	file:
m_stream	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^    std::stringstream m_stream;$/;"	m	class:__anon102::final	file:
m_stream	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        ReusableStringStream m_stream;$/;"	m	struct:Catch::MessageStream
m_stream	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        Detail::unique_ptr<IStream> m_stream;$/;"	m	class:Catch::ColourMode
m_stream	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^        IStream* m_stream;$/;"	m	class:Catch::ColourImpl
m_stream	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        std::ostream& m_stream;$/;"	m	class:Catch::ReporterBase
m_stream	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ColourImpl.tests.cpp	/^        std::stringstream m_stream;$/;"	m	class:__anon96::TestStringStream	file:
m_streamBuf	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Detail::unique_ptr<StreamBufImpl<OutputDebugWriter>> m_streamBuf;$/;"	m	class:Catch::Detail::__anon119::final	file:
m_streamBuf	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            Detail::unique_ptr<StreamBufImpl<OutputDebugWriter>> m_streamBuf;$/;"	m	class:Catch::Detail::__anon30::final	file:
m_streams	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::vector<Detail::unique_ptr<std::ostringstream>> m_streams;$/;"	m	struct:Catch::StringStreams	file:
m_streams	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^        std::vector<Detail::unique_ptr<std::ostringstream>> m_streams;$/;"	m	struct:Catch::StringStreams	file:
m_string	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            std::string m_string;$/;"	m	class:Catch::TextFlow::Column
m_stringIndex	leak_demo/Catch2/third_party/clara.hpp	/^            size_t m_stringIndex = 0;$/;"	m	class:clara::TextFlow::Column::iterator
m_stringReprCache	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_generatortracker.hpp	/^            mutable std::string m_stringReprCache;$/;"	m	class:Catch::Generators::GeneratorUntypedBase
m_stringificationCalls	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        mutable size_t m_stringificationCalls = 0;$/;"	m	class:__anon95::StringifyCountingGenerator	file:
m_strings	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<std::string> m_strings;$/;"	m	class:clara::TextFlow::Column
m_substring	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        std::string m_substring;$/;"	m	class:Catch::TestSpecParser
m_suffix	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::string m_suffix;$/;"	m	class:Catch::__anon134::SummaryColumn	file:
m_suffix	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            std::string m_suffix;$/;"	m	class:Catch::__anon11::SummaryColumn	file:
m_suffix	leak_demo/Catch2/third_party/clara.hpp	/^            bool m_suffix = false;$/;"	m	class:clara::TextFlow::Column::iterator
m_tablePrinter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        Detail::unique_ptr<TablePrinter> m_tablePrinter;$/;"	m	class:Catch::final
m_tag	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            std::string m_tag;$/;"	m	class:Catch::TestSpec::TagPattern
m_tagAliasRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TagAliasRegistry m_tagAliasRegistry;$/;"	m	class:Catch::__anon107::RegistryHub	file:
m_tagAliasRegistry	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^            TagAliasRegistry m_tagAliasRegistry;$/;"	m	class:Catch::__anon15::RegistryHub	file:
m_tagAliases	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        ITagAliasRegistry const* m_tagAliases = nullptr;$/;"	m	class:Catch::TestSpecParser
m_tagIsOpen	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        bool m_tagIsOpen = false;$/;"	m	class:Catch::XmlWriter
m_tags	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        std::vector<std::string> m_tags;$/;"	m	class:Catch::XmlWriter
m_target	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        size_t m_target;$/;"	m	class:Catch::Generators::final
m_target	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        double m_target;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
m_target	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        double m_target;$/;"	m	class:Catch::Matchers::Detail::final
m_target	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        std::vector<T, AllocComp> const& m_target;$/;"	m	class:Catch::Matchers::final::std
m_target	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        size_t m_target;$/;"	m	class:__anon50::final	file:
m_target_repeats	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        size_t m_target_repeats;$/;"	m	class:Catch::Generators::final
m_target_size	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^            std::size_t m_target_size;$/;"	m	class:Catch::Matchers::final
m_testAsFunction	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                m_testAsFunction( testAsFunction ) {}$/;"	f	class:Catch::__anon126::final
m_testAsFunction	leak_demo/Catch2/src/catch2/internal/catch_test_registry.cpp	/^                m_testAsFunction( testAsFunction ) {}$/;"	f	class:Catch::__anon25::final
m_testAsMethod	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {}$/;"	f	class:Catch::TestInvokerAsMethod
m_testAsMethod	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^    void (C::*m_testAsMethod)();$/;"	m	class:Catch::TestInvokerAsMethod
m_testCaseCounter	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    EventCounter m_testCaseCounter;$/;"	m	class:ValidatingTestListener	file:
m_testCasePartialCounter	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    EventCounter m_testCasePartialCounter;$/;"	m	class:ValidatingTestListener	file:
m_testCaseRegistry	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TestRegistry m_testCaseRegistry;$/;"	m	class:Catch::__anon107::RegistryHub	file:
m_testCaseRegistry	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^            TestRegistry m_testCaseRegistry;$/;"	m	class:Catch::__anon15::RegistryHub	file:
m_testCaseTimer	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        Timer m_testCaseTimer;$/;"	m	class:Catch::JsonReporter
m_testCaseTimer	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        Timer m_testCaseTimer;$/;"	m	class:Catch::XmlReporter
m_testCaseTracker	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        ITracker* m_testCaseTracker = nullptr;$/;"	m	class:Catch::final
m_testCases	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        std::vector<Detail::unique_ptr<TestCaseNode>> m_testCases;$/;"	m	class:Catch::CumulativeReporterBase
m_testRun	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        Detail::unique_ptr<TestRunNode> m_testRun;$/;"	m	class:Catch::CumulativeReporterBase
m_testRunCounter	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    EventCounter m_testRunCounter;$/;"	m	class:ValidatingTestListener	file:
m_testRunInfoPrinted	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        bool m_testRunInfoPrinted = false;$/;"	m	class:Catch::final
m_testSpec	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        TestSpec m_testSpec;$/;"	m	class:Catch::Config
m_testSpec	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.hpp	/^        TestSpec m_testSpec;$/;"	m	class:Catch::TestSpecParser
m_testTimer	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        Timer m_testTimer;$/;"	m	class:Catch::final
m_tests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::set<TestCaseHandle const*> m_tests;$/;"	m	class:Catch::__anon108::TestGroup	file:
m_tests	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            std::set<TestCaseHandle const*> m_tests;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_timer	leak_demo/Catch2/src/catch2/internal/catch_section.hpp	/^        Timer m_timer;$/;"	m	class:Catch::Section
m_tokenBuffer	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                std::vector<Token> m_tokenBuffer;$/;"	m	class:Catch::Clara::Detail::TokenStream
m_tokenBuffer	leak_demo/Catch2/third_party/clara.hpp	/^        std::vector<Token> m_tokenBuffer;$/;"	m	class:clara::detail::TokenStream
m_totals	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        Totals m_totals;$/;"	m	class:Catch::final
m_trackerContext	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        TrackerContext m_trackerContext;$/;"	m	class:Catch::final
m_transientExpression	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^        ITransientExpression const* m_transientExpression = nullptr;$/;"	m	class:Catch::LazyExpression
m_translateFunction	leak_demo/Catch2/src/catch2/catch_translate_exception.hpp	/^            std::string(*m_translateFunction)( T const& );$/;"	m	class:Catch::ExceptionTranslatorRegistrar::ExceptionTranslator::std
m_translators	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.hpp	/^        ExceptionTranslators m_translators;$/;"	m	class:Catch::ExceptionTranslatorRegistry
m_trimmed_name	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        StringRef m_trimmed_name;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
m_type	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ParseResultType m_type;$/;"	m	class:Catch::Clara::Detail::ParseState
m_type	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultType m_type;$/;"	m	class:Catch::Clara::Detail::ResultBase
m_type	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        Detail::FloatingPointKind m_type;$/;"	m	class:Catch::Matchers::Detail::final
m_type	leak_demo/Catch2/third_party/clara.hpp	/^        ParseResultType m_type;$/;"	m	class:clara::detail::ParseState
m_type	leak_demo/Catch2/third_party/clara.hpp	/^        Type m_type;$/;"	m	class:clara::detail::ResultBase
m_ulp_magnitude	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    FloatType m_ulp_magnitude;$/;"	m	class:Catch::uniform_floating_point_distribution
m_ulps	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        uint64_t m_ulps;$/;"	m	class:Catch::Matchers::Detail::final
m_underlyingMatcher	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            MatcherBase<ArgT> const& m_underlyingMatcher;$/;"	m	class:Catch::Matchers::Detail::final
m_unfinishedSections	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        std::vector<SectionEndInfo> m_unfinishedSections;$/;"	m	class:Catch::final
m_units	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Unit m_units;$/;"	m	class:Catch::__anon131::Duration	file:
m_units	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    Unit m_units;$/;"	m	class:Catch::__anon12::Duration	file:
m_unmatchedTestSpecs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool m_unmatchedTestSpecs = false;$/;"	m	class:Catch::__anon108::TestGroup	file:
m_unmatchedTestSpecs	leak_demo/Catch2/src/catch2/catch_session.cpp	/^            bool m_unmatchedTestSpecs = false;$/;"	m	class:Catch::__anon36::TestGroup	file:
m_unused	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::vector<std::size_t> m_unused;$/;"	m	struct:Catch::StringStreams	file:
m_unused	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^        std::vector<std::size_t> m_unused;$/;"	m	struct:Catch::StringStreams	file:
m_used_up	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^        bool m_used_up = false;$/;"	m	class:Catch::Generators::final
m_value	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        double m_value;$/;"	m	class:Catch::Approx
m_value	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        T m_value;$/;"	m	class:Catch::Generators::final
m_value	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                    T m_value;$/;"	m	union:Catch::Clara::Detail::ResultValueBase::__anon26
m_value	leak_demo/Catch2/tests/SelfTest/UsageTests/Decomposition.tests.cpp	/^    bool m_value;$/;"	m	struct:__anon63::truthy	file:
m_value	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    bool m_value;$/;"	m	struct:Boolable	file:
m_value	leak_demo/Catch2/third_party/clara.hpp	/^            T m_value;$/;"	m	union:clara::detail::ResultValueBase::__anon38
m_values	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        std::vector<T> m_values;$/;"	m	class:Catch::Generators::final
m_values	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^            std::vector<std::pair<int, StringRef>> m_values;$/;"	m	struct:Catch::Detail::EnumInfo
m_viewed_test_infos	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseInfo*> m_viewed_test_infos;$/;"	m	class:Catch::TestRegistry
m_width	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::size_t m_width = 0;$/;"	m	class:Catch::__anon134::SummaryColumn	file:
m_width	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            size_t m_width = CATCH_CONFIG_CONSOLE_WIDTH - 1;$/;"	m	class:Catch::TextFlow::Column
m_width	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^            std::size_t m_width = 0;$/;"	m	class:Catch::__anon11::SummaryColumn	file:
m_width	leak_demo/Catch2/third_party/clara.hpp	/^        size_t m_width = CLARA_TEXTFLOW_CONFIG_CONSOLE_WIDTH;$/;"	m	class:clara::TextFlow::Column
m_wildcard	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.hpp	/^        WildcardPosition m_wildcard = NoWildcard;$/;"	m	class:Catch::WildcardPattern
m_wildcardPattern	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            WildcardPattern m_wildcardPattern;$/;"	m	class:Catch::TestSpec::NamePattern
m_witness	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        std::string m_witness;$/;"	m	class:__anon98::MockListener	file:
m_witness	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        std::string m_witness;$/;"	m	class:__anon98::MockReporter	file:
m_wrapped_stream	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        Detail::unique_ptr<IStream> m_wrapped_stream;$/;"	m	class:Catch::ReporterBase
m_writer	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            WriterF m_writer;$/;"	m	class:Catch::Detail::__anon119::final	file:
m_writer	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            WriterF m_writer;$/;"	m	class:Catch::Detail::__anon30::final	file:
m_writer	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^            XmlWriter* m_writer = nullptr;$/;"	m	class:Catch::XmlWriter::ScopedElement
m_xml	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        XmlWriter m_xml;$/;"	m	class:Catch::XmlReporter
macroName	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::AssertionInfo
macroName	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        StringRef macroName;$/;"	m	struct:Catch::MessageInfo
main	database_binary_and_hash_search.c	/^int main(int argc, char **argv)$/;"	f
main	leak_demo/Catch2/examples/232-Cfg-CustomMain.cpp	/^int main(int argc, char** argv) {$/;"	f
main	leak_demo/Catch2/tests/TestScripts/testPartialTestCaseEvent.py	/^def main():$/;"	f
main	leak_demo/Catch2/tests/TestScripts/testRandomOrder.py	/^def main():$/;"	f
main	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^def main():$/;"	f
main	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^int main(int argc, char** argv) {$/;"	f
main	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	leak_demo/prog.c	/^int main()$/;"	f
main	leak_demo_2.0/prog.c	/^int main(int argc, char **argv)$/;"	f
main	prog.c	/^int main()$/;"	f
majorVersion	leak_demo/Catch2/src/catch2/catch_version.hpp	/^        unsigned int const majorVersion;$/;"	m	struct:Catch::Version
makeColourImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Detail::unique_ptr<ColourImpl> makeColourImpl( ColourMode colourSelection,$/;"	f	namespace:Catch
makeColourImpl	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    Detail::unique_ptr<ColourImpl> makeColourImpl( ColourMode colourSelection,$/;"	f	namespace:Catch
makeCommandLineParser	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Clara::Parser makeCommandLineParser( ConfigData& config ) {$/;"	f	namespace:Catch
makeCommandLineParser	leak_demo/Catch2/src/catch2/internal/catch_commandline.cpp	/^    Clara::Parser makeCommandLineParser( ConfigData& config ) {$/;"	f	namespace:Catch
makeDefaultName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string makeDefaultName() {$/;"	f	namespace:Catch::__anon109
makeDefaultName	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        std::string makeDefaultName() {$/;"	f	namespace:Catch::__anon35
makeDummyRepConfig	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^    Catch::ReporterConfig makeDummyRepConfig( Catch::Config const& config ) {$/;"	f	namespace:__anon97
makeEnumInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Catch::Detail::unique_ptr<EnumInfo> makeEnumInfo( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	namespace:Catch::Detail
makeEnumInfo	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^        Catch::Detail::unique_ptr<EnumInfo> makeEnumInfo( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	namespace:Catch::Detail
makeNAL	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^Catch::TestCaseTracking::NameAndLocationRef makeNAL( StringRef name ) {$/;"	f	namespace:__anon82
makeRatio	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^std::size_t makeRatio( std::uint64_t number, std::uint64_t total ) {$/;"	f	namespace:Catch::__anon131
makeRatio	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^std::size_t makeRatio( std::uint64_t number, std::uint64_t total ) {$/;"	f	namespace:Catch::__anon12
makeString	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static const char* makeString(bool makeNull) {$/;"	f	namespace:__anon62
makeTestCaseInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        makeTestCaseInfo(StringRef _className,$/;"	f	namespace:Catch
makeTestCaseInfo	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        makeTestCaseInfo(StringRef _className,$/;"	f	namespace:Catch
makeTestInvoker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Detail::unique_ptr<ITestInvoker> makeTestInvoker( void(*testAsFunction)() ) {$/;"	f	namespace:Catch
makeTestInvoker	leak_demo/Catch2/src/catch2/internal/catch_test_registry.cpp	/^    Detail::unique_ptr<ITestInvoker> makeTestInvoker( void(*testAsFunction)() ) {$/;"	f	namespace:Catch
makeTestInvoker	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^Detail::unique_ptr<ITestInvoker> makeTestInvoker( void (C::*testAsMethod)() ) {$/;"	f	namespace:Catch
make_base_commandline	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^def make_base_commandline(self_test_exe):$/;"	f
make_data	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^    std::vector<int> make_data() {$/;"	f	namespace:__anon66
make_data_counted	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^    std::vector<int> make_data_counted() {$/;"	f	namespace:__anon66
make_unique	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    unique_ptr<T> make_unique(Args&&... args) {$/;"	f	namespace:Catch::Detail
make_unique	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^    unique_ptr<T> make_unique(Args&&... args) {$/;"	f	namespace:Catch::Detail
make_void	leak_demo/Catch2/src/catch2/internal/catch_void_type.hpp	/^        struct make_void { using type = void; };$/;"	s	namespace:Catch::Detail
manual_clock	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^    struct manual_clock {$/;"	s	namespace:__anon83	file:
manuallyRegisteredTestFunction	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static void manuallyRegisteredTestFunction() {$/;"	f	namespace:__anon62
map	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    GeneratorWrapper<T> map(Func&& function, GeneratorWrapper<U>&& generator) {$/;"	f	namespace:Catch::Generators
margin	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        Approx& margin( T const& newMargin ) {$/;"	f	class:Catch::Approx
margin	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        ApproxMatcher& margin( T const& newMargin ) {$/;"	f	class:Catch::Matchers::final
marginComparison	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:Catch::__anon129
marginComparison	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:__anon105
marginComparison	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:__anon37
marginComparison	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^bool marginComparison(double lhs, double rhs, double margin) {$/;"	f	namespace:Catch::__anon14
markAsNeedingAnotherRun	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ITracker::markAsNeedingAnotherRun() {$/;"	f	class:Catch::TestCaseTracking::ITracker
markAsNeedingAnotherRun	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void ITracker::markAsNeedingAnotherRun() {$/;"	f	class:Catch::TestCaseTracking::ITracker
markdownToclify	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def markdownToclify($/;"	f
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool EndsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::EndsWithMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool RegexMatcher::match(std::string const& matchee) const {$/;"	f	class:Catch::Matchers::RegexMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool StartsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StartsWithMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool StringContainsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringContainsMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool StringEqualsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringEqualsMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool WithinAbsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool WithinRelMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool WithinUlpsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^bool ExceptionMessageMatcher::match(std::exception const& ex) const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
match	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^bool IsNaNMatcher::match( double const& matchee ) const {$/;"	f	class:Catch::Matchers::IsNaNMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            bool match( RangeLike&& rng ) const {$/;"	f	class:Catch::Matchers::final
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_contains.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.cpp	/^bool ExceptionMessageMatcher::match(std::exception const& ex) const {$/;"	f	class:Catch::Matchers::ExceptionMessageMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    bool WithinAbsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinAbsMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    bool WithinRelMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinRelMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^    bool WithinUlpsMatcher::match(double const& matchee) const {$/;"	f	class:Catch::Matchers::WithinUlpsMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^bool IsNaNMatcher::match( double const& matchee ) const {$/;"	f	class:Catch::Matchers::IsNaNMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^            bool match(RangeLike&& rng) const {$/;"	f	class:Catch::Matchers::final
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_range_equals.hpp	/^            bool match( RangeLike&& rng ) const {$/;"	f	class:Catch::Matchers::final
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    bool EndsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::EndsWithMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    bool RegexMatcher::match(std::string const& matchee) const {$/;"	f	class:Catch::Matchers::RegexMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    bool StartsWithMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StartsWithMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    bool StringContainsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringContainsMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.cpp	/^    bool StringEqualsMatcher::match( std::string const& source ) const {$/;"	f	class:Catch::Matchers::StringEqualsMatcher
match	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            bool match(Arg&& arg) const {$/;"	f	class:Catch::Matchers::Detail::final
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( bool b ) const { return b == true; }$/;"	f	struct:MatcherD
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( int const& ) const {$/;"	f	struct:CheckedTestingGenericMatcher
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( int i ) const { return i == 1; }$/;"	f	struct:MatcherA
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( int i ) const { return i == 45; }$/;"	f	struct:EvilMatcher
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( int& i ) const { return i == 22; }$/;"	f	struct:ReferencingMatcher
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( long long l ) const { return l == 1ll; }$/;"	f	struct:MatcherB
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool match( std::string const& s ) const { return s == "1"; }$/;"	f	struct:MatcherA
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    template <typename OtherRange> bool match( OtherRange const& other ) const {$/;"	f	struct:EqualsRangeMatcher
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    template <typename T> bool match( T t ) const { return t == T{ 1 }; }$/;"	f	struct:MatcherC
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    template <typename T> bool match( T&& ) const { return false; }$/;"	f	struct:ImmovableMatcher
match	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    template <typename T> bool match( T&& ) const { return false; }$/;"	f	struct:ThrowOnCopyOrMoveMatcher
matchCalled	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    mutable bool matchCalled = false;$/;"	m	struct:CheckedTestingGenericMatcher	file:
matchCalled	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    mutable bool matchCalled = false;$/;"	m	struct:CheckedTestingMatcher	file:
matchSucceeds	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool matchSucceeds = false;$/;"	m	struct:CheckedTestingGenericMatcher	file:
matchSucceeds	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    bool matchSucceeds = false;$/;"	m	struct:CheckedTestingMatcher	file:
matchTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static bool matchTest( TestCaseHandle const& testCase,$/;"	f	namespace:Catch::__anon125
matchTest	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^        static bool matchTest( TestCaseHandle const& testCase,$/;"	f	namespace:Catch::__anon20
match_all_of	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        bool match_all_of(Arg&& arg, std::array<void const*, N> const& matchers, std::index_sequence<Idx, Indices...>) {$/;"	f	namespace:Catch::Matchers::Detail
match_all_of	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        bool match_all_of(Arg&&, std::array<void const*, N> const&, std::index_sequence<>) {$/;"	f	namespace:Catch::Matchers::Detail
match_any_of	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        bool match_any_of(Arg&& arg, std::array<void const*, N> const& matchers, std::index_sequence<Idx, Indices...>) {$/;"	f	namespace:Catch::Matchers::Detail
match_any_of	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        bool match_any_of(Arg&&, std::array<void const*, N> const&, std::index_sequence<>) {$/;"	f	namespace:Catch::Matchers::Detail
matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpec::Filter::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::Filter
matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpec::NamePattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::NamePattern
matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpec::TagPattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::TagPattern
matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpec::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec
matches	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool WildcardPattern::matches( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
matches	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    bool TestSpec::Filter::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::Filter
matches	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    bool TestSpec::NamePattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::NamePattern
matches	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    bool TestSpec::TagPattern::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec::TagPattern
matches	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    bool TestSpec::matches( TestCaseInfo const& testCase ) const {$/;"	f	class:Catch::TestSpec
matches	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.cpp	/^    bool WildcardPattern::matches( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
matchesByFilter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpec::Matches TestSpec::matchesByFilter( std::vector<TestCaseHandle> const& testCases, IConfig const& config ) const {$/;"	f	class:Catch::TestSpec
matchesByFilter	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    TestSpec::Matches TestSpec::matchesByFilter( std::vector<TestCaseHandle> const& testCases, IConfig const& config ) const {$/;"	f	class:Catch::TestSpec
max	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^        static constexpr result_type (max)() {$/;"	f	class:Catch::SimplePcg32
max_entry_name_size	database_binary_and_hash_search.c	/^    max_entry_name_size  = 60$/;"	e	enum:constants	file:
mean	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            double mean( double const* first, double const* last ) {$/;"	f	namespace:Catch::Benchmark::Detail
mean	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            FDuration mean;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
mean	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Benchmark::Estimate<Benchmark::FDuration> mean;$/;"	m	struct:Catch::BenchmarkStats
mean	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^            FDuration mean;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
mean	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^            Estimate<FDuration> mean;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
mean	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        Benchmark::Estimate<Benchmark::FDuration> mean;$/;"	m	struct:Catch::BenchmarkStats
mean	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            double mean( double const* first, double const* last ) {$/;"	f	namespace:Catch::Benchmark::Detail
mean	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^                Estimate<double> mean;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis
measure	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            void measure(Fun&& fun) { measure(CATCH_FORWARD(fun), is_callable<Fun(int)>()); }$/;"	f	struct:Catch::Benchmark::Chronometer
measure	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            void measure(Fun&& fun, std::false_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
measure	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            void measure(Fun&& fun, std::true_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
measure	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            void measure(Fun&& fun) { measure(CATCH_FORWARD(fun), is_callable<Fun(int)>()); }$/;"	f	struct:Catch::Benchmark::Chronometer
measure	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            void measure(Fun&& fun, std::false_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
measure	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            void measure(Fun&& fun, std::true_type) {$/;"	f	struct:Catch::Benchmark::Chronometer
measure	leak_demo/Catch2/src/catch2/benchmark/detail/catch_measure.hpp	/^            TimingOf<Fun, Args...> measure(Fun&& fun, Args&&... args) {$/;"	f	namespace:Catch::Benchmark::Detail
measure_environment	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            Environment measure_environment() {$/;"	f	namespace:Catch::Benchmark::Detail
measure_one	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	/^            TimingOf<Fun, Chronometer> measure_one(Fun&& fun, int iters, std::true_type) {$/;"	f	namespace:Catch::Benchmark::Detail
measure_one	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	/^            TimingOf<Fun, int> measure_one(Fun&& fun, int iters, std::false_type) {$/;"	f	namespace:Catch::Benchmark::Detail
mesonPath	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^mesonPath = os.path.join(catchPath, 'meson.build')$/;"	v
message	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^        std::string message;$/;"	m	struct:Catch::AssertionResultData
message	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        std::string message;$/;"	m	struct:Catch::MessageInfo
messageLabel	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef messageLabel;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
messageLabel	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    StringRef messageLabel;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
messages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::vector<MessageInfo> const& messages;$/;"	m	class:Catch::__anon138::TapAssertionPrinter::std	file:
messages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<MessageInfo> const& messages;$/;"	m	class:Catch::__anon130::AssertionPrinter::std	file:
messages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<MessageInfo> const& messages;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter::std	file:
messages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    std::vector<MessageInfo> const& messages;$/;"	m	class:Catch::__anon9::AssertionPrinter::std	file:
messages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    std::vector<MessageInfo> const& messages;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter::std	file:
messages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            std::vector<MessageInfo> const& messages;$/;"	m	class:Catch::__anon7::TapAssertionPrinter::std	file:
min	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^        static constexpr result_type (min)() {$/;"	f	class:Catch::SimplePcg32
minDuration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    double Config::minDuration() const                 { return m_data.minDuration; }$/;"	f	class:Catch::Config
minDuration	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    double Config::minDuration() const                 { return m_data.minDuration; }$/;"	f	class:Catch::Config
minDuration	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        double minDuration = -1;$/;"	m	struct:Catch::ConfigData
minStackSizeForErrors	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    constexpr std::size_t minStackSizeForErrors = 32 * 1024;$/;"	m	namespace:__anon118	file:
minStackSizeForErrors	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    constexpr std::size_t minStackSizeForErrors = 32 * 1024;$/;"	m	namespace:__anon19	file:
minTocEntries	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^minTocEntries = 4$/;"	v
minimal_allocator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        minimal_allocator(const minimal_allocator<U>&) {}$/;"	f	struct:__anon53::minimal_allocator
minimal_allocator	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVector.tests.cpp	/^    struct minimal_allocator {$/;"	s	namespace:__anon53	file:
minimum_ticks	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto minimum_ticks = 1000;$/;"	m	namespace:Catch::Benchmark::Detail
minorVersion	leak_demo/Catch2/src/catch2/catch_version.hpp	/^        unsigned int const minorVersion;$/;"	m	struct:Catch::Version
mismatched	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    mismatched = 0$/;"	v
missingAssertions	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        bool missingAssertions;$/;"	m	struct:Catch::SectionStats
model	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                    model(Fun const& fun_) : fun(fun_) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                    model(Fun&& fun_) : fun(CATCH_MOVE(fun_)) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                struct model : public callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
model	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                    model(Fun const& fun_) : fun(fun_) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                    model(Fun&& fun_) : fun(CATCH_MOVE(fun_)) {}$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::model
model	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                struct model : public callable {$/;"	s	struct:Catch::Benchmark::Detail::BenchmarkFunction
moveToParent	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerBase::moveToParent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToParent	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::moveToParent() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToThis	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerBase::moveToThis() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
moveToThis	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::moveToThis() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
move_detector	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^    struct move_detector {$/;"	s	namespace:__anon79	file:
mpl_	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^namespace mpl_{$/;"	n
mpl_	leak_demo/Catch2/src/catch2/internal/catch_meta.hpp	/^namespace mpl_{$/;"	n
name	leak_demo/Catch2/conanfile.py	/^    name = "catch2"$/;"	v	class:CatchConan
name	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        const char* name;$/;"	m	struct:Catch::SignalDefs	file:
name	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef Config::name() const { return m_data.name.empty() ? m_data.processName : m_data.name; }$/;"	f	class:Catch::Config
name	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string const& TestSpec::Pattern::name() const {$/;"	f	class:Catch::std::TestSpec::Pattern
name	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string name;$/;"	m	struct:Catch::ColumnInfo	file:
name	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
name	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        std::string name;$/;"	m	struct:Catch::BenchmarkInfo
name	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            std::string name;$/;"	m	struct:Catch::Benchmark::Benchmark
name	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        std::string name;$/;"	m	struct:Catch::BenchmarkInfo
name	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    StringRef Config::name() const { return m_data.name.empty() ? m_data.processName : m_data.name; }$/;"	f	class:Catch::Config
name	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::string name;$/;"	m	struct:Catch::ConfigData
name	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::string name;$/;"	m	struct:Catch::ProcessedReporterSpec
name	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^        std::string name;$/;"	m	struct:Catch::SectionInfo
name	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        std::string name;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
name	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    std::string const& TestSpec::Pattern::name() const {$/;"	f	class:Catch::std::TestSpec::Pattern
name	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            std::string name;$/;"	m	struct:Catch::TestSpec::FilterMatch
name	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            std::string const& name() const { return *m_name; }$/;"	f	class:Catch::Clara::ExeName::std
name	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^        const char* name;$/;"	m	struct:Catch::SignalDefs	file:
name	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    struct SignalDefs { DWORD id; const char* name; };$/;"	m	struct:Catch::SignalDefs	file:
name	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^        StringRef name;$/;"	m	struct:Catch::ListenerDescription
name	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^        std::string name, description;$/;"	m	struct:Catch::ReporterDescription
name	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        std::string const& name() const { return m_name; }$/;"	f	class:Catch::ReporterSpec::std
name	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        StringRef name;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocationRef
name	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        std::string name;$/;"	m	struct:Catch::TestCaseTracking::NameAndLocation
name	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^    StringRef name;$/;"	m	struct:Catch::NameAndTags
name	leak_demo/Catch2/src/catch2/internal/catch_test_run_info.hpp	/^        StringRef name;$/;"	m	struct:Catch::TestRunInfo
name	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    std::string name;$/;"	m	struct:Catch::ColumnInfo	file:
nameAndLocation	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        NameAndLocation const& nameAndLocation() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
needs_ADL_begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        needs_ADL_begin( std::initializer_list<T> init ): m_elements( init ) {}$/;"	f	class:unrelated::needs_ADL_begin
needs_ADL_begin	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    class needs_ADL_begin {$/;"	c	namespace:unrelated
newlineIfNecessary	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlWriter::newlineIfNecessary() {$/;"	f	class:Catch::XmlWriter
newlineIfNecessary	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void XmlWriter::newlineIfNecessary() {$/;"	f	class:Catch::XmlWriter
next	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool RandomFloatingGenerator<long double>::next() {$/;"	f	class:Catch::Generators::RandomFloatingGenerator
next	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^        bool next() {$/;"	f	class:Catch::Generators::final
next	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^        bool RandomFloatingGenerator<long double>::next() {$/;"	f	class:Catch::Generators::RandomFloatingGenerator
nextafter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    double nextafter( double x, double y ) { return ::nextafter( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    double nextafter( double x, double y ) { return std::nextafter( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    float nextafter( float x, float y ) { return ::nextafterf( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    float nextafter( float x, float y ) { return std::nextafter( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^    double nextafter( double x, double y ) { return ::nextafter( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^    double nextafter( double x, double y ) { return std::nextafter( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^    float nextafter( float x, float y ) { return ::nextafterf( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/src/catch2/internal/catch_polyfills.cpp	/^    float nextafter( float x, float y ) { return std::nextafter( x, y ); }$/;"	f	namespace:Catch
nextafter	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static double nextafter( double from, double to ) {$/;"	f	namespace:__anon75
nextafter	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static float nextafter( float from, float to ) {$/;"	f	namespace:__anon75
noMatchingTestCases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void CompactReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::CompactReporter
noMatchingTestCases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::noMatchingTestCases( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
noMatchingTestCases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::MultiReporter
noMatchingTestCases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TAPReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::TAPReporter
noMatchingTestCases	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::ConsoleReporter
noMatchingTestCases	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::CompactReporter
noMatchingTestCases	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::ConsoleReporter
noMatchingTestCases	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::noMatchingTestCases( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
noMatchingTestCases	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::MultiReporter
noMatchingTestCases	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^    void TAPReporter::noMatchingTestCases( StringRef unmatchedSpec ) {$/;"	f	class:Catch::TAPReporter
noThrow	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool noThrow = false;$/;"	m	struct:Catch::ConfigData
no_whitespace	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const no_whitespace = "There is no extra whitespace here";$/;"	v	file:
noexcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                BenchmarkFunction( BenchmarkFunction&& that ) noexcept:$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction
noexcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            NonCopyable() noexcept = default;$/;"	m	class:Catch::Detail::NonCopyable
noexcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        StringRef( char const* rawChars ) noexcept;$/;"	m	class:Catch::StringRef
noexcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        bool operator<(StringRef rhs) const noexcept;$/;"	m	class:Catch::StringRef
noexcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        constexpr StringRef() noexcept = default;$/;"	m	class:Catch::StringRef
noexcept	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        virtual void registerStartupException() noexcept = 0;$/;"	m	class:Catch::IMutableRegistryHub
noexcept	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction( BenchmarkFunction&& that ) noexcept:$/;"	m	struct:Catch::Benchmark::Detail::BenchmarkFunction
noexcept	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        ScopedMessage( ScopedMessage&& old ) noexcept;$/;"	m	class:Catch::ScopedMessage
noexcept	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_registry_hub.hpp	/^        virtual void registerStartupException() noexcept = 0;$/;"	m	class:Catch::IMutableRegistryHub
noexcept	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ColourGuard& operator=( ColourGuard&& rhs ) noexcept;$/;"	m	class:Catch::ColourImpl::ColourGuard
noexcept	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ColourGuard( ColourGuard&& rhs ) noexcept;$/;"	m	class:Catch::ColourImpl::ColourGuard
noexcept	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^        void disengage_platform() noexcept;$/;"	m	class:Catch::FatalConditionHandler
noexcept	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        JsonArrayWriter( JsonArrayWriter&& source ) noexcept;$/;"	m	class:Catch::JsonArrayWriter
noexcept	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        JsonObjectWriter( JsonObjectWriter&& source ) noexcept;$/;"	m	class:Catch::JsonObjectWriter
noexcept	leak_demo/Catch2/src/catch2/internal/catch_noncopyable.hpp	/^            NonCopyable() noexcept = default;$/;"	m	class:Catch::Detail::NonCopyable
noexcept	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^        bool operator < ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^        bool operator == ( SourceLineInfo const& other ) const noexcept;$/;"	m	struct:Catch::SourceLineInfo
noexcept	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.hpp	/^        constexpr SourceLineInfo( char const* _file, std::size_t _line ) noexcept:$/;"	m	struct:Catch::SourceLineInfo
noexcept	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.hpp	/^        std::vector<std::exception_ptr> const& getExceptions() const noexcept;$/;"	m	class:Catch::StartupExceptionRegistry
noexcept	leak_demo/Catch2/src/catch2/internal/catch_startup_exception_registry.hpp	/^        void add(std::exception_ptr const& exception) noexcept;$/;"	m	class:Catch::StartupExceptionRegistry
noexcept	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        StringRef( char const* rawChars ) noexcept;$/;"	m	class:Catch::StringRef
noexcept	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        bool operator<(StringRef rhs) const noexcept;$/;"	m	class:Catch::StringRef
noexcept	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        constexpr StringRef() noexcept = default;$/;"	m	class:Catch::StringRef
noexcept	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^                           StringRef tags_ = StringRef() ) noexcept:$/;"	m	struct:Catch::NameAndTags
noexcept	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^    AutoReg( Detail::unique_ptr<ITestInvoker> invoker, SourceLineInfo const& lineInfo, StringRef classOrMethod, NameAndTags const& nameAndTags ) noexcept;$/;"	m	struct:Catch::AutoReg
noexcept	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^            ScopedElement& operator=( ScopedElement&& other ) noexcept;$/;"	m	class:Catch::XmlWriter::ScopedElement
noexcept	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^            ScopedElement( ScopedElement&& other ) noexcept;$/;"	m	class:Catch::XmlWriter::ScopedElement
nonDevelopRelease	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def nonDevelopRelease(self):$/;"	m	class:Version
non_copyable	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^struct non_copyable {$/;"	s	namespace:__anon92	file:
none	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        bool none() const { return nullableValue == nullptr; }$/;"	f	class:Catch::Optional
none_to_empty_str	leak_demo/Catch2/tests/TestScripts/testRandomOrder.py	/^def none_to_empty_str(e):$/;"	f
normal_cdf	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            double normal_cdf( double x ) {$/;"	f	namespace:Catch::Benchmark::Detail
normal_cdf	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            double normal_cdf( double x ) {$/;"	f	namespace:Catch::Benchmark::Detail
normal_quantile	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            double normal_quantile(double p) {$/;"	f	namespace:Catch::Benchmark::Detail
normal_quantile	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            double normal_quantile(double p) {$/;"	f	namespace:Catch::Benchmark::Detail
normaliseOpt	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Catch::StringRef normaliseOpt( Catch::StringRef optName ) {$/;"	f	namespace:__anon112
normaliseOpt	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^    Catch::StringRef normaliseOpt( Catch::StringRef optName ) {$/;"	f	namespace:__anon17
normaliseString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string WildcardPattern::normaliseString( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
normaliseString	leak_demo/Catch2/src/catch2/internal/catch_wildcard_pattern.cpp	/^    std::string WildcardPattern::normaliseString( std::string const& str ) const {$/;"	f	class:Catch::WildcardPattern
normalizeFilepath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def normalizeFilepath(line):$/;"	f
normalizeNamespaceMarkers	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static void normalizeNamespaceMarkers(std::string& str) {$/;"	f	namespace:Catch::__anon136
normalizeNamespaceMarkers	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^        static void normalizeNamespaceMarkers(std::string& str) {$/;"	f	namespace:Catch::__anon5
normalize_includes	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def normalize_includes(includes):$/;"	f
normalized_path	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def normalized_path(path):$/;"	f
normalized_paths	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def normalized_paths(paths):$/;"	f
notifyAssertionStarted	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::notifyAssertionStarted( AssertionInfo const& info ) {$/;"	f	class:Catch::RunContext
notifyAssertionStarted	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::notifyAssertionStarted( AssertionInfo const& info ) {$/;"	f	class:Catch::RunContext
now	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static time_point now() {$/;"	f	struct:__anon83::counting_clock
now	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static time_point now() {$/;"	f	struct:__anon83::manual_clock
nullParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^nullParser = re.compile(r'\\b(__null|nullptr)\\b')$/;"	v
nullableValue	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        T* nullableValue;$/;"	m	class:Catch::Optional
num	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    int num = 0;$/;"	m	struct:MoveOnlyTestElement	file:
number_of_shards	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^number_of_shards = 5$/;"	v
okToFail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestCaseInfo::okToFail() const {$/;"	f	class:Catch::TestCaseInfo
okToFail	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool TestCaseInfo::okToFail() const {$/;"	f	class:Catch::TestCaseInfo
oldSigActions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static struct sigaction oldSigActions[sizeof(signalDefs) \/ sizeof(SignalDefs)]{};$/;"	s	namespace:Catch	file:
oldSigActions	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static struct sigaction oldSigActions[sizeof(signalDefs) \/ sizeof(SignalDefs)]{};$/;"	s	namespace:Catch	file:
one	leak_demo/Catch2/examples/030-Asn-Require-Check.cpp	/^static std::string one() {$/;"	f	file:
open	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerBase::open() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
open	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void open() {$/;"	f	class:Catch::TablePrinter
open	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerBase::open() {$/;"	f	class:Catch::TestCaseTracking::TrackerBase
open	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void open() {$/;"	f	class:Catch::TablePrinter
openChild	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ITracker::openChild() {$/;"	f	class:Catch::TestCaseTracking::ITracker
openChild	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void ITracker::openChild() {$/;"	f	class:Catch::TestCaseTracking::ITracker
operator !	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        bool operator !() const { return nullableValue == nullptr; }$/;"	f	class:Catch::Optional
operator !	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^    Detail::MatchNotOf<T> operator! (MatcherBase<T> const& matcher) {$/;"	f	namespace:Catch::Matchers
operator !	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            friend MatcherT const& operator ! (MatchNotOfGeneric<MatcherT> const& matcher) {$/;"	f	class:Catch::Matchers::Detail::final
operator !	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator ! (MatcherT const& matcher) {$/;"	f	namespace:Catch::Matchers
operator !=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator!=(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
operator !=	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator != ( Approx const& lhs, T const& rhs ) {$/;"	f	class:Catch::Approx
operator !=	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator != ( T const& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator !=	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        friend bool operator!=( ProcessedReporterSpec const& lhs,$/;"	f	struct:Catch::ProcessedReporterSpec
operator !=	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        friend bool operator!=(Optional const& a, Optional const& b) {$/;"	f	class:Catch::Optional
operator !=	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^    bool operator!=(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
operator !=	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        friend bool operator!=( ReporterSpec const& lhs,$/;"	f	class:Catch::ReporterSpec
operator !=	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        friend bool operator!=(NameAndLocation const& lhs,$/;"	f	struct:Catch::TestCaseTracking::NameAndLocation
operator !=	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                bool operator!=( const_iterator const& other ) const {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator !=	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator!=( MultipleImplicitConstructors ) const { return true; }$/;"	f	struct:__anon60::MultipleImplicitConstructors
operator !=	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    logic_t operator!=(logic_t) const { return {}; }$/;"	f	struct:logic_t
operator !=	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        bool operator!=( const minimal_allocator<U>& ) const { return false; }$/;"	f	struct:__anon53::minimal_allocator
operator !=	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    bool operator!=(int_iterator rhs) const { return val != rhs.val; }$/;"	f	struct:__anon69::int_iterator
operator !=	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool operator!=( basic_iterator lhs, basic_iterator rhs ) {$/;"	f	class:with_mocked_iterator_access::basic_iterator
operator !=	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool operator!=( iterator iter, iterator_end ) {$/;"	f	class:has_different_begin_end_types::iterator
operator !=	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool operator!=( iterator lhs, iterator rhs ) {$/;"	f	class:has_different_begin_end_types::iterator
operator &	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        TestCaseProperties operator&(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon109
operator &	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlFormatting operator & (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
operator &	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        TestCaseProperties operator&(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon35
operator &	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlFormatting operator & (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
operator &	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        friend HasBitOperators operator& (HasBitOperators lhs, HasBitOperators rhs) {$/;"	f	struct:__anon57::HasBitOperators
operator &	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    EvilMatcher const* operator&() const { throw EvilAddressOfOperatorUsed(); }$/;"	f	struct:EvilMatcher
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            friend MatchAllOf operator&& (MatchAllOf&& lhs, MatcherBase<ArgT> const& rhs) {$/;"	f	class:Catch::Matchers::Detail::final
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            friend MatchAllOf operator&& (MatcherBase<ArgT> const& lhs, MatchAllOf&& rhs) {$/;"	f	class:Catch::Matchers::Detail::final
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^    Detail::MatchAllOf<T> operator&& (MatcherBase<T> const& lhs, MatcherBase<T> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAllOfGeneric<MatcherLHS, MatcherTs...>> operator && ($/;"	f	class:Catch::Matchers::Detail::final
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAllOfGeneric<MatcherTs..., MatcherRHS>> operator && ($/;"	f	class:Catch::Matchers::Detail::final
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAllOfGeneric<MatcherTs..., MatchersRHS...> operator && ($/;"	f	class:Catch::Matchers::Detail::final
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator && (MatcherBase<ArgLHS> const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator && (MatcherLHS const& lhs, MatcherBase<ArgRHS> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator &&	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator && (MatcherLHS const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ()	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool operator()($/;"	f	struct:Catch::__anon132::BySectionInfo
operator ()	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void operator()( std::string const& str ) {$/;"	f	struct:Catch::Detail::__anon119::OutputDebugWriter
operator ()	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        CaseInsensitiveEqualTo::operator()( StringRef lhs,$/;"	f	class:Catch::Detail::CaseInsensitiveEqualTo
operator ()	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        bool CaseInsensitiveLess::operator()( StringRef lhs,$/;"	f	class:Catch::Detail::CaseInsensitiveLess
operator ()	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SimplePcg32::result_type SimplePcg32::operator()() {$/;"	f	class:Catch::SimplePcg32
operator ()	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    uint32_t TestCaseInfoHasher::operator()( TestCaseInfo const& t ) const {$/;"	f	class:Catch::TestCaseInfoHasher
operator ()	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::do_nothing
operator ()	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                void operator()(Chronometer meter) const { f->call(meter); }$/;"	f	namespace:Catch::Benchmark::Detail
operator ()	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                struct do_nothing { void operator()() const {} };$/;"	f	struct:Catch::Benchmark::Detail::BenchmarkFunction::do_nothing
operator ()	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                void operator()(Chronometer meter) const { f->call(meter); }$/;"	f	namespace:Catch::Benchmark::Detail
operator ()	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^                void operator()(int k) const {$/;"	f	struct:Catch::Benchmark::Detail::repeater
operator ()	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        Approx operator()( T const& value ) const {$/;"	f	class:Catch::Approx
operator ()	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.cpp	/^        CaseInsensitiveEqualTo::operator()( StringRef lhs,$/;"	f	class:Catch::Detail::CaseInsensitiveEqualTo
operator ()	leak_demo/Catch2/src/catch2/internal/catch_case_insensitive_comparisons.cpp	/^        bool CaseInsensitiveLess::operator()( StringRef lhs,$/;"	f	class:Catch::Detail::CaseInsensitiveLess
operator ()	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                DerivedT& operator()( StringRef description ) & {$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
operator ()	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                DerivedT&& operator()( StringRef description ) && {$/;"	f	class:Catch::Clara::Detail::ParserRefImpl
operator ()	leak_demo/Catch2/src/catch2/internal/catch_istream.cpp	/^            void operator()( std::string const& str ) {$/;"	f	struct:Catch::Detail::__anon30::OutputDebugWriter
operator ()	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^    SimplePcg32::result_type SimplePcg32::operator()() {$/;"	f	class:Catch::SimplePcg32
operator ()	leak_demo/Catch2/src/catch2/internal/catch_test_case_info_hasher.cpp	/^    uint32_t TestCaseInfoHasher::operator()( TestCaseInfo const& t ) const {$/;"	f	class:Catch::TestCaseInfoHasher
operator ()	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    result_type operator()( Generator& g ) {$/;"	f	class:Catch::uniform_floating_point_distribution
operator ()	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    result_type operator()( Generator& g ) {$/;"	f	class:Catch::uniform_integer_distribution
operator ()	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^            bool operator()($/;"	f	struct:Catch::__anon4::BySectionInfo
operator *	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string Column::const_iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator *	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::string Columns::iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator *	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        T const& operator*() const {$/;"	f	class:Catch::Detail::unique_ptr
operator *	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        T& operator*() {$/;"	f	class:Catch::Detail::unique_ptr
operator *	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                Token operator*() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator *	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        T const& operator*() const {$/;"	f	class:Catch::Optional
operator *	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        T& operator*() {$/;"	f	class:Catch::Optional
operator *	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        std::string Column::const_iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator *	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        std::string Columns::iterator::operator*() const {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator *	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        T const& operator*() const {$/;"	f	class:Catch::Detail::unique_ptr
operator *	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        T& operator*() {$/;"	f	class:Catch::Detail::unique_ptr
operator *	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    value_type operator*() const { return val; }$/;"	f	struct:__anon69::int_iterator
operator *	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        const_reference operator*() const { return *m_start; }$/;"	f	class:has_different_begin_end_types::iterator
operator *	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        const_reference operator*() const {$/;"	f	class:with_mocked_iterator_access::basic_iterator
operator +	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns operator+( Columns const& lhs, Column const& rhs ) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns operator+( Columns&& lhs, Column&& rhs ) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns operator+(Column const& lhs, Column const& rhs) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns operator+(Column&& lhs, Column&& rhs) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string operator+(StringRef lhs, StringRef rhs) {$/;"	f	namespace:Catch
operator +	leak_demo/Catch2/src/catch2/internal/catch_stream_end_stop.hpp	/^        constexpr StringRef operator+() const { return StringRef(); }$/;"	f	struct:Catch::StreamEndStop
operator +	leak_demo/Catch2/src/catch2/internal/catch_stream_end_stop.hpp	/^        constexpr friend T const& operator+( T const& value, StreamEndStop ) {$/;"	f	struct:Catch::StreamEndStop
operator +	leak_demo/Catch2/src/catch2/internal/catch_stringref.cpp	/^    std::string operator+(StringRef lhs, StringRef rhs) {$/;"	f	namespace:Catch
operator +	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns operator+( Columns const& lhs, Column const& rhs ) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns operator+( Columns&& lhs, Column&& rhs ) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns operator+(Column const& lhs, Column const& rhs) {$/;"	f	namespace:Catch::TextFlow
operator +	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns operator+(Column&& lhs, Column&& rhs) {$/;"	f	namespace:Catch::TextFlow
operator ++	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            TokenStream& TokenStream::operator++() {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator ++	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Column::const_iterator Column::const_iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator ++	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Column::const_iterator& Column::const_iterator::operator++() {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator ++	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns::iterator Columns::iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns::iterator& Columns::iterator::operator++() {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            TokenStream& TokenStream::operator++() {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator ++	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Column::const_iterator Column::const_iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator ++	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Column::const_iterator& Column::const_iterator::operator++() {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator ++	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns::iterator Columns::iterator::operator++( int ) {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns::iterator& Columns::iterator::operator++() {$/;"	f	class:Catch::TextFlow::Columns::iterator
operator ++	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator operator++() { ++val; return *this; }$/;"	f	struct:__anon69::int_iterator
operator ++	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int_iterator operator++(int) {$/;"	f	struct:__anon69::int_iterator
operator ++	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        basic_iterator operator++( int ) {$/;"	f	class:with_mocked_iterator_access::basic_iterator
operator ++	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        basic_iterator& operator++() {$/;"	f	class:with_mocked_iterator_access::basic_iterator
operator ++	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        iterator operator++( int ) {$/;"	f	class:has_different_begin_end_types::iterator
operator ++	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        iterator& operator++() {$/;"	f	class:has_different_begin_end_types::iterator
operator +=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns& operator+=(Columns& lhs, Column const& rhs) {$/;"	f	namespace:Catch::TextFlow
operator +=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Columns& operator+=(Columns& lhs, Column&& rhs) {$/;"	f	namespace:Catch::TextFlow
operator +=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Counts& Counts::operator += ( Counts const& other ) {$/;"	f	class:Catch::Counts
operator +=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Totals& Totals::operator += ( Totals const& other ) {$/;"	f	class:Catch::Totals
operator +=	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    Counts& Counts::operator += ( Counts const& other ) {$/;"	f	class:Catch::Counts
operator +=	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    Totals& Totals::operator += ( Totals const& other ) {$/;"	f	class:Catch::Totals
operator +=	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns& operator+=(Columns& lhs, Column const& rhs) {$/;"	f	namespace:Catch::TextFlow
operator +=	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        Columns& operator+=(Columns& lhs, Column&& rhs) {$/;"	f	namespace:Catch::TextFlow
operator ,	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    int operator,( EvilMatcher const& ) const { throw EvilCommaOperatorUsed(); }$/;"	f	struct:EvilMatcher
operator -	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Approx Approx::operator-() const {$/;"	f	class:Catch::Approx
operator -	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Counts Counts::operator - ( Counts const& other ) const {$/;"	f	class:Catch::Counts
operator -	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Totals Totals::operator - ( Totals const& other ) const {$/;"	f	class:Catch::Totals
operator -	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    Approx Approx::operator-() const {$/;"	f	class:Catch::Approx
operator -	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    Counts Counts::operator - ( Counts const& other ) const {$/;"	f	class:Catch::Counts
operator -	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    Totals Totals::operator - ( Totals const& other ) const {$/;"	f	class:Catch::Totals
operator ->	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                Token const* operator->() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator ->	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        T* operator->() {$/;"	f	class:Catch::Optional
operator ->	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        const T* operator->() const {$/;"	f	class:Catch::Optional
operator ->	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        pointer operator->() const { return m_start; }$/;"	f	class:has_different_begin_end_types::iterator
operator ->	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        pointer operator->() const {$/;"	f	class:with_mocked_iterator_access::basic_iterator
operator <	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator<(  Tag const& lhs, Tag const& rhs ) {$/;"	f	namespace:Catch
operator <	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator<( TestCaseInfo const& lhs, TestCaseInfo const& rhs ) {$/;"	f	namespace:Catch
operator <	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool operator<(  Tag const& lhs, Tag const& rhs ) {$/;"	f	namespace:Catch
operator <	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool operator<( TestCaseInfo const& lhs, TestCaseInfo const& rhs ) {$/;"	f	namespace:Catch
operator <	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        bool operator < (MessageInfo const& other) const {$/;"	f	struct:Catch::MessageInfo
operator <	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator<( MultipleImplicitConstructors ) const { return true; }$/;"	f	struct:__anon60::MultipleImplicitConstructors
operator <	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    logic_t operator< (logic_t) const { return {}; }$/;"	f	struct:logic_t
operator <<	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^std::ostream& operator<<( std::ostream& os, std::vector<T> const& v ) {$/;"	f	namespace:__anon103
operator <<	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^std::ostream& operator<<(std::ostream& out, Catch::Tag t) {$/;"	f	namespace:__anon103
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::ostream& operator<<( std::ostream& os, Column const& col ) {$/;"	f	namespace:Catch::TextFlow
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::ostream& operator<<( std::ostream& os, Columns const& cols ) {$/;"	f	namespace:Catch::TextFlow
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    friend TablePrinter& operator<< (TablePrinter& tp, ColumnBreak) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    friend TablePrinter& operator<< (TablePrinter& tp, RowBreak) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    friend TablePrinter& operator<< (TablePrinter& tp, T const& value) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    friend TablePrinter& operator<<(TablePrinter& tp, OutputFlush) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, SourceLineInfo const& info ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, Version const& version ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, XmlEncode const& xmlEncode ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& operator << ( std::ostream& os, pluralise const& pluraliser ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& operator<<( std::ostream& out, lineOfChars value ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        MessageBuilder&& operator << ( T const& value ) && {$/;"	f	struct:Catch::MessageBuilder
operator <<	leak_demo/Catch2/src/catch2/catch_message.hpp	/^        MessageStream& operator << ( T const& value ) {$/;"	f	struct:Catch::MessageStream
operator <<	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            friend std::ostream& operator<<(std::ostream& out, Filter const& f) {$/;"	f	struct:Catch::TestSpec::Filter
operator <<	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            friend std::ostream& operator<<(std::ostream& out,$/;"	f	class:Catch::TestSpec::Pattern
operator <<	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^        friend std::ostream& operator<<(std::ostream& out,$/;"	f	class:Catch::TestSpec
operator <<	leak_demo/Catch2/src/catch2/catch_version.cpp	/^    std::ostream& operator << ( std::ostream& os, Version const& version ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            friend std::ostream& operator<<( std::ostream& lhs,$/;"	f	class:Catch::ColourImpl::ColourGuard
operator <<	leak_demo/Catch2/src/catch2/internal/catch_decomposer.hpp	/^        friend std::ostream& operator<<(std::ostream& out, ITransientExpression const& expr) {$/;"	f	class:Catch::ITransientExpression
operator <<	leak_demo/Catch2/src/catch2/internal/catch_source_line_info.cpp	/^    std::ostream& operator << ( std::ostream& os, SourceLineInfo const& info ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    std::ostream& operator << ( std::ostream& os, pluralise const& pluraliser ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        std::ostream& operator<<( std::ostream& os, Column const& col ) {$/;"	f	namespace:Catch::TextFlow
operator <<	leak_demo/Catch2/src/catch2/internal/catch_textflow.cpp	/^        std::ostream& operator<<( std::ostream& os, Columns const& cols ) {$/;"	f	namespace:Catch::TextFlow
operator <<	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    std::ostream& operator << ( std::ostream& os, XmlEncode const& xmlEncode ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator<< (TablePrinter& tp, ColumnBreak) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator<< (TablePrinter& tp, RowBreak) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator<< (TablePrinter& tp, T const& value) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    friend TablePrinter& operator<<(TablePrinter& tp, OutputFlush) {$/;"	f	class:Catch::TablePrinter
operator <<	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    std::ostream& operator<<( std::ostream& out, lineOfChars value ) {$/;"	f	namespace:Catch
operator <<	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Json.tests.cpp	/^    static std::ostream& operator<<( std::ostream& os, Custom const& ) {$/;"	f	namespace:__anon80
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/Approx.tests.cpp	/^    static std::ostream& operator<<(std::ostream& os, StrongDoubleTypedef td) {$/;"	f	namespace:__anon48
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        friend std::ostream& operator<<(std::ostream& out, HasBitOperators val) {$/;"	f	struct:__anon57::HasBitOperators
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^static std::ostream &operator<<(std::ostream &o, const A &) { return o << 0; }$/;"	f	file:
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^static std::ostream& operator<<(std::ostream& out, foo::helper_1403 const&) {$/;"	f	file:
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/Decomposition.tests.cpp	/^std::ostream& operator<<(std::ostream& o, truthy) {$/;"	f	namespace:__anon63
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^std::ostream& operator<<( std::ostream& os, Enum2 v ) {$/;"	f	namespace:__anon73
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/EnumToString.tests.cpp	/^std::ostream& operator<<( std::ostream& os, EnumClass2 e2 ) {$/;"	f	namespace:__anon74
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    friend std::ostream& operator<<(std::ostream& out, MoveOnlyTestElement const& elem) {$/;"	f	struct:MoveOnlyTestElement
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^std::ostream& operator<<(std::ostream& out, helper_1436<T1, T2> const& helper) {$/;"	f
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^std::ostream& operator<<(std::ostream& out, OperatorException const&) {$/;"	f	namespace:__anon61
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^StreamT& operator<<(StreamT& os, const has_template_operator&) {$/;"	f	namespace:__anon68
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::ostream& operator<<(std::ostream& os, const has_maker_and_operator&) {$/;"	f	namespace:__anon68
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::ostream& operator<<(std::ostream& os, const has_operator&) {$/;"	f	namespace:__anon68
operator <<	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^std::ostream& operator<<(std::ostream& os, const streamable_range&) {$/;"	f	namespace:__anon69
operator <<	leak_demo/Catch2/third_party/clara.hpp	/^        inline friend std::ostream& operator << ( std::ostream& os, Column const& col ) {$/;"	f	class:clara::TextFlow::Column
operator <<	leak_demo/Catch2/third_party/clara.hpp	/^        inline friend std::ostream& operator << ( std::ostream& os, Columns const& cols ) {$/;"	f	class:clara::TextFlow::Columns
operator <=	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator <= ( Approx const& lhs, T const& rhs ) {$/;"	f	class:Catch::Approx
operator <=	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator <= ( T const& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator <=	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator<=( MultipleImplicitConstructors ) const { return true; }$/;"	f	struct:__anon60::MultipleImplicitConstructors
operator <=	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    logic_t operator<=(logic_t) const { return {}; }$/;"	f	struct:logic_t
operator =	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                BenchmarkFunction& operator=(BenchmarkFunction const& that) {$/;"	f	namespace:Catch::Benchmark::Detail
operator =	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        unique_ptr& operator=(unique_ptr<U>&& from) {$/;"	f	class:Catch::Detail::unique_ptr
operator =	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^                Benchmark & operator=(Fun func) {$/;"	f	struct:Catch::Benchmark::Benchmark
operator =	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_function.hpp	/^                BenchmarkFunction& operator=(BenchmarkFunction const& that) {$/;"	f	namespace:Catch::Benchmark::Detail
operator =	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase& operator=( ResultValueBase const& other ) {$/;"	f	class:Catch::Clara::Detail::ResultValueBase
operator =	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ResultValueBase& operator=( ResultValueBase&& other ) {$/;"	f	class:Catch::Clara::Detail::ResultValueBase
operator =	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional& operator=( Optional const& _other ) {$/;"	f	class:Catch::Optional
operator =	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional& operator=( Optional&& _other ) {$/;"	f	class:Catch::Optional
operator =	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional& operator=( T const& _value ) {$/;"	f	class:Catch::Optional
operator =	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        Optional& operator=( T&& _value ) {$/;"	f	class:Catch::Optional
operator =	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        unique_ptr& operator=(unique_ptr<U>&& from) {$/;"	f	class:Catch::Detail::unique_ptr
operator =	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    ThrowOnCopyOrMoveMatcher& operator=( ThrowOnCopyOrMoveMatcher const& ) {$/;"	f	struct:ThrowOnCopyOrMoveMatcher
operator =	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    ThrowOnCopyOrMoveMatcher& operator=( ThrowOnCopyOrMoveMatcher&& ) {$/;"	f	struct:ThrowOnCopyOrMoveMatcher
operator =	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    MyType1& operator=(MyType1 const&) { throw 3; }$/;"	f	struct:MyType1
operator =	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVariant.tests.cpp	/^    MyType2& operator=(MyType2 const&) { throw 4; }$/;"	f	struct:MyType2
operator ==	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator==( ProcessedReporterSpec const& lhs,$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator==( ReporterSpec const& lhs, ReporterSpec const& rhs ) {$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator==( Tag const& lhs, Tag const& rhs ) {$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool operator==(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator == ( Approx const& lhs, const T& rhs ) {$/;"	f	class:Catch::Approx
operator ==	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator == ( const T& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator ==	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool operator==( ProcessedReporterSpec const& lhs,$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool operator==( Tag const& lhs, Tag const& rhs ) {$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        bool operator == (MessageInfo const& other) const {$/;"	f	struct:Catch::MessageInfo
operator ==	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        friend bool operator==(Optional const& a, Optional const& b) {$/;"	f	class:Catch::Optional
operator ==	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^            bool operator==( ExtendedMultResult const& rhs ) const {$/;"	f	struct:Catch::Detail::ExtendedMultResult
operator ==	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^    bool operator==(SimplePcg32 const& lhs, SimplePcg32 const& rhs) {$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^    bool operator==( ReporterSpec const& lhs, ReporterSpec const& rhs ) {$/;"	f	namespace:Catch
operator ==	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        friend bool operator==( NameAndLocation const& lhs,$/;"	f	struct:Catch::TestCaseTracking::NameAndLocationRef
operator ==	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        friend bool operator==( NameAndLocationRef const& lhs,$/;"	f	struct:Catch::TestCaseTracking::NameAndLocationRef
operator ==	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        friend bool operator==(NameAndLocation const& lhs, NameAndLocation const& rhs) {$/;"	f	struct:Catch::TestCaseTracking::NameAndLocation
operator ==	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^                bool operator==( const_iterator const& other ) const {$/;"	f	class:Catch::TextFlow::Column::const_iterator
operator ==	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            bool operator == (SectionNode const& other) const {$/;"	f	struct:Catch::CumulativeReporterBase::SectionNode
operator ==	leak_demo/Catch2/tests/ExtraTests/X11-DisableStringification.cpp	/^    bool operator==(Hidden, Hidden) { return true; }$/;"	f	namespace:__anon44
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator==( MultipleImplicitConstructors ) const { return true; }$/;"	f	struct:__anon60::MultipleImplicitConstructors
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator==(helper_1403) const { return true; }$/;"	f	struct:foo::helper_1403
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        friend bool operator==(ImmovableType const&, ImmovableType const&) {$/;"	f	struct:__anon58::ImmovableType
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    bool operator==(int) const { return true; }$/;"	f	struct:B
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    logic_t operator==(logic_t) const { return {}; }$/;"	f	struct:logic_t
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^bool operator==(const T& val, dummy_809 f) {$/;"	f
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^        friend bool operator==( SomeType lhs, SomeType rhs ) {$/;"	f	struct:__anon76::SomeType
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    friend bool operator==(MoveOnlyTestElement const& lhs, MoveOnlyTestElement const& rhs) {$/;"	f	struct:MoveOnlyTestElement
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringVector.tests.cpp	/^        bool operator==( const minimal_allocator<U>& ) const { return true; }$/;"	f	struct:__anon53::minimal_allocator
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    bool operator==(int_iterator rhs) const { return val == rhs.val; }$/;"	f	struct:__anon69::int_iterator
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    bool operator ==( const Opaque& o ) const$/;"	f	struct:Opaque
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^inline bool operator==(const A::X& lhs, const B::Y& rhs)$/;"	f
operator ==	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^inline bool operator==(const B::Y& lhs, const A::X& rhs)$/;"	f
operator ==	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool operator==( basic_iterator lhs, basic_iterator rhs ) {$/;"	f	class:with_mocked_iterator_access::basic_iterator
operator ==	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool operator==( iterator iter, iterator_end ) {$/;"	f	class:has_different_begin_end_types::iterator
operator ==	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend bool operator==(iterator lhs, iterator rhs) {$/;"	f	class:has_different_begin_end_types::iterator
operator >	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator>( MultipleImplicitConstructors ) const { return true; }$/;"	f	struct:__anon60::MultipleImplicitConstructors
operator >	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    logic_t operator> (logic_t) const { return {}; }$/;"	f	struct:logic_t
operator >=	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator >= ( Approx const& lhs, T const& rhs ) {$/;"	f	class:Catch::Approx
operator >=	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        friend bool operator >= ( T const& lhs, Approx const& rhs ) {$/;"	f	class:Catch::Approx
operator >=	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        bool operator>=( MultipleImplicitConstructors ) const { return true; }$/;"	f	struct:__anon60::MultipleImplicitConstructors
operator >=	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    logic_t operator>=(logic_t) const { return {}; }$/;"	f	struct:logic_t
operator []	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Opt& operator[]( StringRef optName ) & {$/;"	f	class:Catch::Clara::Opt
operator []	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Opt&& operator[]( StringRef optName ) && {$/;"	f	class:Catch::Clara::Opt
operator []	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^        constexpr T operator[]( size_t ) { return T{}; }$/;"	f	struct:__anon47::custom_index_op
operator ^	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        friend HasBitOperators operator^ (HasBitOperators lhs, HasBitOperators rhs) {$/;"	f	struct:__anon57::HasBitOperators
operator bool	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Section::operator bool() const {$/;"	f	class:Catch::Section
operator bool	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::Detail::unique_ptr
operator bool	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            explicit operator bool() {$/;"	f	struct:Catch::Benchmark::Benchmark
operator bool	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit operator bool() const {$/;"	f	class:Catch::Clara::Detail::BasicResult
operator bool	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                explicit operator bool() const {$/;"	f	class:Catch::Clara::Detail::TokenStream
operator bool	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::LazyExpression
operator bool	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::Optional
operator bool	leak_demo/Catch2/src/catch2/internal/catch_section.cpp	/^    Section::operator bool() const {$/;"	f	class:Catch::Section
operator bool	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        explicit operator bool() const {$/;"	f	class:Catch::Detail::unique_ptr
operator bool	leak_demo/Catch2/tests/ExtraTests/X10-FallbackStringifier.cpp	/^    explicit operator bool() const {$/;"	f	struct:foo
operator bool	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        explicit operator bool() const {$/;"	f	struct:__anon57::HasBitOperators
operator bool	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    explicit operator bool() const { return true; }$/;"	f	struct:adl::always_true
operator bool	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    explicit operator bool() const { return true; }$/;"	f	struct:logic_t
operator bool	leak_demo/Catch2/tests/SelfTest/UsageTests/Decomposition.tests.cpp	/^    operator bool() const {$/;"	f	struct:__anon63::truthy
operator bool	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        explicit operator bool() const$/;"	f	struct:__anon51::ConvertibleToBool
operator bool	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    explicit operator bool() const {$/;"	f	struct:Boolable
operator bool	leak_demo/Catch2/third_party/clara.hpp	/^        explicit operator bool() const { return m_type == ResultBase::Ok; }$/;"	f	class:clara::detail::BasicResult
operator bool	leak_demo/Catch2/third_party/clara.hpp	/^        explicit operator bool() const {$/;"	f	class:clara::detail::TokenStream
operator double	leak_demo/Catch2/tests/SelfTest/UsageTests/Approx.tests.cpp	/^        explicit operator double() const { return d_; }$/;"	f	class:__anon48::StrongDoubleTypedef
operator int	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    operator int() const { return 7; }$/;"	f	struct:Awkward
operator std::string	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        explicit operator std::string() const {$/;"	f	class:Catch::StringRef
operator std::string	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        explicit operator std::string() const {$/;"	f	class:Catch::StringRef
operator unsigned int	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^        operator unsigned int() const {return 0xc0000000;}$/;"	f	struct:ObjectWithConversions::Object
operator |	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        TestCaseProperties operator|(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon109
operator |	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlFormatting operator | (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
operator |	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        TestCaseProperties operator|(TestCaseProperties lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon35
operator |	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ComposableParserImpl<DerivedT>::operator|(T const& other) const {$/;"	f	class:Catch::Clara::Detail::ComposableParserImpl
operator |	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            friend Parser operator|( Parser const& p, T&& rhs ) {$/;"	f	class:Catch::Clara::Parser
operator |	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            friend Parser operator|( Parser&& p, T&& rhs ) {$/;"	f	class:Catch::Clara::Parser
operator |	leak_demo/Catch2/src/catch2/internal/catch_result_type.cpp	/^    ResultDisposition::Flags operator | ( ResultDisposition::Flags lhs, ResultDisposition::Flags rhs ) {$/;"	f	namespace:Catch
operator |	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlFormatting operator | (XmlFormatting lhs, XmlFormatting rhs) {$/;"	f	namespace:Catch
operator |	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        friend HasBitOperators operator| (HasBitOperators lhs, HasBitOperators rhs) {$/;"	f	struct:__anon57::HasBitOperators
operator |=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Parser& Parser::operator|=( Parser const& other ) {$/;"	f	class:Catch::Clara::Parser
operator |=	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        TestCaseProperties& operator|=(TestCaseProperties& lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon109
operator |=	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        TestCaseProperties& operator|=(TestCaseProperties& lhs, TestCaseProperties rhs) {$/;"	f	namespace:Catch::__anon35
operator |=	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Parser& Parser::operator|=( Parser const& other ) {$/;"	f	class:Catch::Clara::Parser
operator |=	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            friend Parser& operator|=( Parser& p, Opt const& opt ) {$/;"	f	class:Catch::Clara::Parser
operator |=	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            friend Parser& operator|=( Parser& p, Opt&& opt ) {$/;"	f	class:Catch::Clara::Parser
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            friend MatchAnyOf operator|| (MatchAnyOf&& lhs, MatcherBase<ArgT> const& rhs) {$/;"	f	class:Catch::Matchers::Detail::final
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^            friend MatchAnyOf operator|| (MatcherBase<ArgT> const& lhs, MatchAnyOf&& rhs) {$/;"	f	class:Catch::Matchers::Detail::final
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers.hpp	/^    Detail::MatchAnyOf<T> operator|| (MatcherBase<T> const& lhs, MatcherBase<T> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAnyOfGeneric<MatcherLHS, MatcherTs...>> operator || ($/;"	f	class:Catch::Matchers::Detail::final
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            MatchAnyOfGeneric<MatcherTs..., MatcherRHS>> operator || ($/;"	f	class:Catch::Matchers::Detail::final
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^            friend MatchAnyOfGeneric<MatcherTs..., MatchersRHS...> operator || ($/;"	f	class:Catch::Matchers::Detail::final
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator || (MatcherBase<ArgLHS> const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator || (MatcherLHS const& lhs, MatcherBase<ArgRHS> const& rhs) {$/;"	f	namespace:Catch::Matchers
operator ||	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        operator || (MatcherLHS const& lhs, MatcherRHS const& rhs) {$/;"	f	namespace:Catch::Matchers
optimized_away_error	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            struct optimized_away_error : std::exception {$/;"	s	namespace:Catch::Benchmark::Detail	file:
optimized_away_error	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.cpp	/^            struct optimized_away_error : std::exception {$/;"	s	namespace:Catch::Benchmark::Detail	file:
optimizer_barrier	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            inline void optimizer_barrier() { keep_memory(); }$/;"	f	namespace:Catch::Benchmark::Detail
optimizer_barrier	leak_demo/Catch2/src/catch2/benchmark/catch_optimizer.hpp	/^            inline void optimizer_barrier() { keep_memory(); }$/;"	f	namespace:Catch::Benchmark::Detail
options	leak_demo/Catch2/conanfile.py	/^    options = {$/;"	v	class:CatchConan
original	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        StringRef original;$/;"	m	struct:Catch::Tag
originalBackgroundAttributes	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        WORD originalBackgroundAttributes;$/;"	m	class:Catch::__anon114::final	file:
originalBackgroundAttributes	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        WORD originalBackgroundAttributes;$/;"	m	class:Catch::__anon32::final	file:
originalForegroundAttributes	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        WORD originalForegroundAttributes;$/;"	m	class:Catch::__anon114::final	file:
originalForegroundAttributes	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        WORD originalForegroundAttributes;$/;"	m	class:Catch::__anon32::final	file:
ostream	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^        friend auto operator << ( std::ostream& os, LazyExpression const& lazyExpr ) -> std::ostream&;$/;"	m	class:Catch::LazyExpression::std
other	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            BySectionInfo( BySectionInfo const& other ) = default;$/;"	m	struct:Catch::__anon132::BySectionInfo	file:
other	leak_demo/Catch2/src/catch2/internal/catch_lazy_expr.hpp	/^        LazyExpression(LazyExpression const& other) = default;$/;"	m	class:Catch::LazyExpression
other	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^            BySectionInfo( BySectionInfo const& other ) = default;$/;"	m	struct:Catch::__anon4::BySectionInfo	file:
out_buff	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^    out_buff(std::FILE* stream):m_stream(stream) {}$/;"	f	class:out_buff
out_buff	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^class out_buff : public std::stringbuf {$/;"	c	file:
outlierVariance	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        double outlierVariance;$/;"	m	struct:Catch::BenchmarkStats
outlierVariance	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        double outlierVariance;$/;"	m	struct:Catch::BenchmarkStats
outlier_variance	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                static double outlier_variance( Estimate<double> mean,$/;"	f	namespace:Catch::Benchmark::Detail::__anon104
outlier_variance	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^            double outlier_variance;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
outlier_variance	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^                static double outlier_variance( Estimate<double> mean,$/;"	f	namespace:Catch::Benchmark::Detail::__anon1
outlier_variance	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^                double outlier_variance;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis
outliers	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
outliers	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Benchmark::OutlierClassification outliers;$/;"	m	struct:Catch::BenchmarkStats
outliers	leak_demo/Catch2/src/catch2/benchmark/catch_environment.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::EnvironmentEstimate
outliers	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^            OutlierClassification outliers;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
outliers	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        Benchmark::OutlierClassification outliers;$/;"	m	struct:Catch::BenchmarkStats
outputDirBasePath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^    outputDirBasePath = sys.argv[2]$/;"	v
outputDirPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^    outputDirPath = os.path.join(outputDirBasePath, 'ApprovalTests')$/;"	v
outputDirPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^outputDirPath = None$/;"	v
outputFile	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.hpp	/^        Optional<std::string> const& outputFile() const {$/;"	f	class:Catch::ReporterSpec
outputFilename	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::string outputFilename;$/;"	m	struct:Catch::ProcessedReporterSpec
outputMarkdown	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def outputMarkdown(markdown_cont, output_file):$/;"	f
output_base_path	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    output_base_path = sys.argv[2]$/;"	v
output_cpp	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^output_cpp = os.path.join(catchPath, 'extras', 'catch_amalgamated.cpp')$/;"	v
output_dir	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^output_dir = os.path.abspath(sys.argv[2])$/;"	v
output_dir	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^output_dir = os.path.abspath(sys.argv[2])$/;"	v
output_file	leak_demo/Catch2/tests/TestScripts/testConfigureDefaultReporter.py	/^output_file = f"{build_dir_path}\/foo.xml"$/;"	v
output_header	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^output_header = os.path.join(catchPath, 'extras', 'catch_amalgamated.hpp')$/;"	v
overallResult	leak_demo/Catch2/tools/scripts/approvalTests.py	/^overallResult = 0$/;"	v
overflow	leak_demo/Catch2/fuzzing/NullOStream.cpp	/^int NullStreambuf::overflow(int c){$/;"	f	class:NullStreambuf
override	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^    ~MyListener() override;$/;"	m	struct:__anon103::MyListener	file:
override	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^    ~out_buff() override;$/;"	m	class:out_buff	file:
override	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^    int const& get() const override;$/;"	m	class:__anon101::final	file:
override	leak_demo/Catch2/examples/301-Gen-MapTypeConversion.cpp	/^    std::string const& get() const override;$/;"	m	class:__anon102::final	file:
override	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                const char* what() const noexcept override;$/;"	m	struct:Catch::Benchmark::Detail::optimized_away_error	file:
override	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.cpp	/^                const char* what() const noexcept override;$/;"	m	struct:Catch::Benchmark::Detail::optimized_away_error	file:
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ColourMode defaultColourMode() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ShowDurations showDurations() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        StringRef name() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        TestRunOrder runOrder() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        TestSpec const& testSpec() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        Verbosity verbosity() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool allowThrows() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool benchmarkNoAnalysis() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool hasTestFilters() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool includeSuccessfulResults() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool shouldDebugBreak() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool showInvisibles() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool skipBenchmarks() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool warnAboutMissingAssertions() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool warnAboutUnmatchedTestSpecs() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool zeroTestsCountAsSuccess() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        double benchmarkConfidenceInterval() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        double minDuration() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        int abortAfter() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::chrono::milliseconds benchmarkWarmupTime() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::vector<std::string> const& getSectionsToRun() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::vector<std::string> const& getTestsOrTags() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        uint32_t rngSeed() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int benchmarkResamples() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int benchmarkSamples() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int shardCount() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int shardIndex() const override;$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ~Config() override; \/\/ = default in the cpp file$/;"	m	class:Catch::Config
override	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            bool matches( TestCaseInfo const& testCase ) const override;$/;"	m	class:Catch::TestSpec::NamePattern
override	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            bool matches( TestCaseInfo const& testCase ) const override;$/;"	m	class:Catch::TestSpec::TagPattern
override	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            void serializeTo( std::ostream& out ) const override;$/;"	m	class:Catch::TestSpec::NamePattern
override	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            void serializeTo( std::ostream& out ) const override;$/;"	m	class:Catch::TestSpec::TagPattern
override	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    bool next() override;$/;"	m	class:Catch::Generators::final
override	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^    ~RandomFloatingGenerator() override; \/\/ = default$/;"	m	class:Catch::Generators::final
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                      Detail::TokenStream tokens) const override;$/;"	m	class:Catch::Clara::Arg
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                      Detail::TokenStream tokens) const override;$/;"	m	class:Catch::Clara::ExeName
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                      Detail::TokenStream tokens) const override;$/;"	m	class:Catch::Clara::Opt
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                      Detail::TokenStream tokens) const override;$/;"	m	class:Catch::Clara::Parser
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ParserResult setFlag( bool flag ) override;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRef
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                bool isFlag() const override;$/;"	m	struct:Catch::Clara::Detail::BoundFlagRefBase
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Detail::Result validate() const override;$/;"	m	class:Catch::Clara::Opt
override	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^            Detail::Result validate() const override;$/;"	m	class:Catch::Clara::Parser
override	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.hpp	/^            EnumInfo const& registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values) override;$/;"	m	class:Catch::Detail::EnumValuesRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.hpp	/^        std::string translateActiveException() const override;$/;"	m	class:Catch::ExceptionTranslatorRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.hpp	/^        ~ExceptionTranslatorRegistry() override;$/;"	m	class:Catch::ExceptionTranslatorRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^                                 SourceLineInfo const& lineInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^                             Counts& assertions ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^                    AssertionReaction &reaction ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^                    AssertionReaction& reaction ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^                (   AssertionInfo const& info ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^            Generators::GeneratorBasePtr&& generator ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        bool lastAssertionPassed() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        const AssertionResult* getLastResult() const override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        std::string getCurrentTestName() const override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void assertionPassed() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& stats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void benchmarkFailed( StringRef error ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void benchmarkPreparing( StringRef name ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void benchmarkStarting( BenchmarkInfo const& info ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void emplaceUnscopedMessage( MessageBuilder&& builder ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void exceptionEarlyReported() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void handleFatalErrorCondition( StringRef message ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void notifyAssertionStarted( AssertionInfo const& info ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void popScopedMessage( MessageInfo const& message ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void pushScopedMessage( MessageInfo const& message ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void sectionEnded( SectionEndInfo&& endInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        void sectionEndedEarly( SectionEndInfo&& endInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_run_context.hpp	/^        ~RunContext() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	/^        TagAlias const* find( std::string const& alias ) const override;$/;"	m	class:Catch::TagAliasRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	/^        std::string expandAliases( std::string const& unexpandedTestSpec ) const override;$/;"	m	class:Catch::TagAliasRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_tag_alias_registry.hpp	/^        ~TagAliasRegistry() override;$/;"	m	class:Catch::TagAliasRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseHandle> const& getAllTests() const override;$/;"	m	class:Catch::TestRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseHandle> const& getAllTestsSorted( IConfig const& config ) const override;$/;"	m	class:Catch::TestRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.hpp	/^        std::vector<TestCaseInfo*> const& getAllInfos() const override;$/;"	m	class:Catch::TestRegistry
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        bool isComplete() const override;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        bool isComplete() const override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        bool isSectionTracker() const override;$/;"	m	class:Catch::TestCaseTracking::SectionTracker
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        void close() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        void fail() override;$/;"	m	class:Catch::TestCaseTracking::TrackerBase
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_container_properties.hpp	/^            std::string describe() const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^    bool match(std::exception const& ex) const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_exception.hpp	/^    std::string describe() const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        bool match( double const& matchee ) const override;$/;"	m	class:Catch::Matchers::Detail::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        bool match(double const& matchee) const override;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        bool match(double const& matchee) const override;$/;"	m	class:Catch::Matchers::Detail::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        std::string describe() const override;$/;"	m	class:Catch::Matchers::Detail::FloatingPointKind
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.hpp	/^        std::string describe() const override;$/;"	m	class:Catch::Matchers::Detail::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_quantifiers.hpp	/^            std::string describe() const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        bool match( std::string const& matchee ) const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        bool match( std::string const& source ) const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        std::string describe() const override;$/;"	m	class:Catch::Matchers::StringMatcherBase
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_string.hpp	/^        std::string describe() const override;$/;"	m	class:Catch::Matchers::final
override	leak_demo/Catch2/src/catch2/matchers/catch_matchers_templated.hpp	/^        ~MatcherGenericBase() override; \/\/ = default;$/;"	m	class:Catch::Matchers::MatcherGenericBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^        void skipTest(TestCaseInfo const& testInfo) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^        void testCaseEnded(TestCaseStats const& _testCaseStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.hpp	/^        ~AutomakeReporter() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^            std::vector<ListenerDescription> const& descriptions ) override;$/;"	m	class:Catch::ReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^            std::vector<ReporterDescription> const& descriptions ) override;$/;"	m	class:Catch::ReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        void listTags( std::vector<TagInfo> const& tags ) override;$/;"	m	class:Catch::ReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        void listTests( std::vector<TestCaseHandle> const& tests ) override;$/;"	m	class:Catch::ReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_common_base.hpp	/^        ~ReporterBase() override; \/\/ = default;$/;"	m	class:Catch::ReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^        void assertionEnded(AssertionStats const& _assertionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^        void noMatchingTestCases( StringRef unmatchedSpec ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^        void sectionEnded(SectionStats const& _sectionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^        void testRunEnded(TestRunStats const& _testRunStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^        void testRunStarting( TestRunInfo const& _testInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.hpp	/^        ~CompactReporter() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void assertionEnded(AssertionStats const& _assertionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void assertionStarting(AssertionInfo const&) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void benchmarkEnded(BenchmarkStats<> const& stats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void benchmarkFailed( StringRef error ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void benchmarkPreparing( StringRef name ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void benchmarkStarting(BenchmarkInfo const& info) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void noMatchingTestCases( StringRef unmatchedSpec ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void reportInvalidTestSpec( StringRef arg ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void sectionEnded(SectionStats const& _sectionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void sectionStarting(SectionInfo const& _sectionInfo) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void testCaseEnded(TestCaseStats const& _testCaseStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void testRunEnded(TestRunStats const& _testRunStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        void testRunStarting(TestRunInfo const& _testRunInfo) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.hpp	/^        ~ConsoleReporter() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        void assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        void testRunEnded( TestRunStats const& testRunStats ) override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^        ~CumulativeReporterBase() override;$/;"	m	class:Catch::CumulativeReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^                                      uint64_t partNumber ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^                                   uint64_t partNumber ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^            std::vector<ListenerDescription> const& descriptions ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^            std::vector<ReporterDescription> const& descriptions ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void assertionStarting( AssertionInfo const& assertionInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void benchmarkFailed( StringRef error ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void benchmarkPreparing( StringRef name ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void fatalErrorEncountered( StringRef error ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void listTags( std::vector<TagInfo> const& tagInfos ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void listTests( std::vector<TestCaseHandle> const& tests ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void noMatchingTestCases( StringRef unmatchedSpec ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void reportInvalidTestSpec( StringRef unmatchedSpec ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void testRunEnded( TestRunStats const& testRunStats ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.hpp	/^        void testRunStarting( TestRunInfo const& testRunInfo ) override;$/;"	m	class:Catch::EventListenerBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^                                      uint64_t index ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^                                   uint64_t index ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^            std::vector<ListenerDescription> const& descriptions ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^            std::vector<ReporterDescription> const& descriptions ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void assertionStarting( AssertionInfo const& assertionInfo ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void benchmarkFailed( StringRef error ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void benchmarkPreparing( StringRef name ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void benchmarkStarting( BenchmarkInfo const& ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void listTags( std::vector<TagInfo> const& tags ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void listTests( std::vector<TestCaseHandle> const& tests ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void testCaseEnded( TestCaseStats const& tcStats ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void testCaseStarting( TestCaseInfo const& tcInfo ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void testRunEnded( TestRunStats const& runStats ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        void testRunStarting( TestRunInfo const& runInfo ) override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.hpp	/^        ~JsonReporter() override;$/;"	m	class:Catch::JsonReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        void assertionEnded(AssertionStats const& assertionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        void testCaseStarting(TestCaseInfo const& testCaseInfo) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        void testRunEndedCumulative() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        void testRunStarting(TestRunInfo const& runInfo) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void assertionEnded( AssertionStats const& assertionStats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void assertionStarting( AssertionInfo const& assertionInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void benchmarkEnded( BenchmarkStats<> const& benchmarkStats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void benchmarkFailed( StringRef error ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void benchmarkPreparing( StringRef name ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void benchmarkStarting( BenchmarkInfo const& benchmarkInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void fatalErrorEncountered( StringRef error ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void listListeners(std::vector<ListenerDescription> const& descriptions) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void listReporters(std::vector<ReporterDescription> const& descriptions) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void listTags(std::vector<TagInfo> const& tags) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void listTests(std::vector<TestCaseHandle> const& tests) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void noMatchingTestCases( StringRef unmatchedSpec ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void reportInvalidTestSpec( StringRef arg ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void sectionEnded( SectionStats const& sectionStats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void sectionStarting( SectionInfo const& sectionInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void skipTest( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void testCaseEnded( TestCaseStats const& testCaseStats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void testCasePartialEnded(TestCaseStats const& testStats, uint64_t partNumber) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void testCasePartialStarting(TestCaseInfo const& testInfo, uint64_t partNumber) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void testCaseStarting( TestCaseInfo const& testInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void testRunEnded( TestRunStats const& testRunStats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.hpp	/^        void testRunStarting( TestRunInfo const& testRunInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	/^        void testRunStarting( TestRunInfo const& testRunInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^        void testRunEnded( TestRunStats const& \/* _testRunStats *\/ ) override;$/;"	m	class:Catch::StreamingReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^        void testRunStarting( TestRunInfo const& _testRunInfo ) override;$/;"	m	class:Catch::StreamingReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.hpp	/^        ~StreamingReporterBase() override;$/;"	m	class:Catch::StreamingReporterBase
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        void assertionEnded(AssertionStats const& _assertionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        void noMatchingTestCases( StringRef unmatchedSpec ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        void testRunEnded(TestRunStats const& _testRunStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.hpp	/^        void testRunStarting( TestRunInfo const& testInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        void assertionEnded(AssertionStats const& assertionStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        void testCaseStarting(TestCaseInfo const& testInfo) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        void testRunEnded( TestRunStats const& runStats ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        void testRunStarting( TestRunInfo const& runInfo ) override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.hpp	/^        ~TeamCityReporter() override;$/;"	m	class:Catch::final
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void assertionEnded(AssertionStats const& assertionStats) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void assertionStarting(AssertionInfo const&) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void benchmarkEnded(BenchmarkStats<> const&) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void benchmarkFailed( StringRef error ) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void benchmarkPreparing( StringRef name ) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void benchmarkStarting(BenchmarkInfo const&) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void listListeners(std::vector<ListenerDescription> const& descriptions) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void listReporters(std::vector<ReporterDescription> const& descriptions) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void listTags(std::vector<TagInfo> const& tags) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void listTests(std::vector<TestCaseHandle> const& tests) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void sectionEnded(SectionStats const& sectionStats) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void sectionStarting(SectionInfo const& sectionInfo) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void testCaseEnded(TestCaseStats const& testCaseStats) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void testCaseStarting(TestCaseInfo const& testInfo) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void testRunEnded(TestRunStats const& testRunStats) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        void testRunStarting(TestRunInfo const& testInfo) override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.hpp	/^        ~XmlReporter() override;$/;"	m	class:Catch::XmlReporter
override	leak_demo/Catch2/tests/ExtraTests/X21-PartialTestCaseEvents.cpp	/^    ~PartialReporter() override; \/\/ = default$/;"	m	class:PartialReporter	file:
override	leak_demo/Catch2/tests/ExtraTests/X22-BenchmarksInCumulativeReporter.cpp	/^    void testRunEndedCumulative() override;$/;"	m	class:final	file:
override	leak_demo/Catch2/tests/ExtraTests/X23-CasingInReporterNames.cpp	/^    ~TestReporter() override;$/;"	m	class:TestReporter	file:
override	leak_demo/Catch2/tests/ExtraTests/X26-ReporterPreferencesForPassingAssertionsIsRespected.cpp	/^      ~TestReporter() override;$/;"	m	class:__anon40::TestReporter	file:
override	leak_demo/Catch2/tests/ExtraTests/X27-CapturedStdoutInTestCaseEvents.cpp	/^    ~TestReporter() override;$/;"	m	class:TestReporter	file:
override	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^        ~TestReporter() override;$/;"	m	class:__anon46::TestReporter	file:
override	leak_demo/Catch2/tests/ExtraTests/X29-CustomArgumentsForReporters.cpp	/^    ~TestReporter() override;$/;"	m	class:TestReporter	file:
override	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        bool const& get() const override;$/;"	m	class:__anon94::CustomStringifyGenerator	file:
override	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        bool const& get() const override;$/;"	m	class:__anon95::StringifyCountingGenerator	file:
override	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    int const& get() const override;$/;"	m	class:__anon92::TestGen	file:
override	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^    ~ValidatingTestListener() override;$/;"	m	class:ValidatingTestListener	file:
override	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^        ~CustomStdException() noexcept override = default;$/;"	m	class:__anon71::CustomStdException	file:
override	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    ~OperatorException() override;$/;"	m	struct:__anon61::OperatorException	file:
override	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    ~StringMakerException() override;$/;"	m	struct:__anon61::StringMakerException	file:
override	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringGeneral.tests.cpp	/^    ~WhatException() override;$/;"	m	struct:__anon61::WhatException	file:
p	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    int p = 0;$/;"	m	struct:Obj	file:
package	leak_demo/Catch2/conanfile.py	/^    def package(self):$/;"	m	class:CatchConan
package_info	leak_demo/Catch2/conanfile.py	/^    def package_info(self):$/;"	m	class:CatchConan
parent	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        ITracker* parent() const {$/;"	f	class:Catch::TestCaseTracking::ITracker
parse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ExeName::parse(std::string const&,$/;"	f	class:Catch::Clara::ExeName
parse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            InternalParseResult ParserBase::parse( Args const& args ) const {$/;"	f	class:Catch::Clara::Detail::ParserBase
parse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Detail::InternalParseResult Arg::parse(std::string const&,$/;"	f	class:Catch::Clara::Arg
parse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Detail::InternalParseResult Opt::parse(std::string const&,$/;"	f	class:Catch::Clara::Opt
parse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Parser::parse( std::string const& exeName,$/;"	f	class:Catch::Clara::Parser
parse	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpecParser& TestSpecParser::parse( std::string const& arg ) {$/;"	f	class:Catch::TestSpecParser
parse	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            ExeName::parse(std::string const&,$/;"	f	class:Catch::Clara::ExeName
parse	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            InternalParseResult ParserBase::parse( Args const& args ) const {$/;"	f	class:Catch::Clara::Detail::ParserBase
parse	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Detail::InternalParseResult Arg::parse(std::string const&,$/;"	f	class:Catch::Clara::Arg
parse	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Detail::InternalParseResult Opt::parse(std::string const&,$/;"	f	class:Catch::Clara::Opt
parse	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Parser::parse( std::string const& exeName,$/;"	f	class:Catch::Clara::Parser
parse	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    TestSpecParser& TestSpecParser::parse( std::string const& arg ) {$/;"	f	class:Catch::TestSpecParser
parseAndCreateSpec	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/TestSpecParser.tests.cpp	/^    static Catch::TestSpec parseAndCreateSpec(std::string const& str) {$/;"	f	namespace:__anon86
parseEnums	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::vector<StringRef> parseEnums( StringRef enums ) {$/;"	f	namespace:Catch::Detail
parseEnums	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^        std::vector<StringRef> parseEnums( StringRef enums ) {$/;"	f	namespace:Catch::Detail
parseReporterSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Optional<ReporterSpec> parseReporterSpec( StringRef reporterSpec ) {$/;"	f	namespace:Catch
parseReporterSpec	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^    Optional<ReporterSpec> parseReporterSpec( StringRef reporterSpec ) {$/;"	f	namespace:Catch
parseSpecialTag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        TestCaseProperties parseSpecialTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon109
parseSpecialTag	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        TestCaseProperties parseSpecialTag( StringRef tag ) {$/;"	f	namespace:Catch::__anon35
parseTestSpec	leak_demo/Catch2/tests/SelfTest/helpers/parse_test_spec.cpp	/^    TestSpec parseTestSpec( std::string const& arg ) {$/;"	f	namespace:Catch
parseUInt	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Optional<unsigned int> parseUInt(std::string const& input, int base) {$/;"	f	namespace:Catch
parseUInt	leak_demo/Catch2/src/catch2/internal/catch_parse_numbers.cpp	/^    Optional<unsigned int> parseUInt(std::string const& input, int base) {$/;"	f	namespace:Catch
parse_log_file_arg	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^int parse_log_file_arg(std::string const& arg) {$/;"	f
passOrFail	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef passOrFail;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
passOrFail	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    StringRef passOrFail;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
passed	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^        std::uint64_t passed = 0;$/;"	m	struct:Catch::Counts
patchNumber	leak_demo/Catch2/src/catch2/catch_version.hpp	/^        unsigned int const patchNumber;$/;"	m	struct:Catch::Version
performUpdates	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^def performUpdates(version):$/;"	f
pluralise	leak_demo/Catch2/src/catch2/internal/catch_string_manip.hpp	/^        constexpr pluralise(std::uint64_t count, StringRef label):$/;"	f	class:Catch::pluralise
pluralise	leak_demo/Catch2/src/catch2/internal/catch_string_manip.hpp	/^    class pluralise {$/;"	c	namespace:Catch
point	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            Type point;$/;"	m	struct:Catch::Benchmark::Estimate
point	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^            Type point;$/;"	m	struct:Catch::Benchmark::Estimate
popScopedMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::popScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
popScopedMessage	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::popScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
populateReaction	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::populateReaction( AssertionReaction& reaction ) {$/;"	f	class:Catch::RunContext
populateReaction	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::populateReaction( AssertionReaction& reaction ) {$/;"	f	class:Catch::RunContext
positioningHeadlines	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def positioningHeadlines(headlines):$/;"	f
precision	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^int StringMaker<double>::precision = 10;$/;"	m	class:Catch::StringMaker	file:
precision	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^int StringMaker<float>::precision = 5;$/;"	m	class:Catch::StringMaker	file:
precision	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^int StringMaker<double>::precision = 10;$/;"	m	class:Catch::StringMaker	file:
precision	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^int StringMaker<float>::precision = 5;$/;"	m	class:Catch::StringMaker	file:
precision	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        CATCH_EXPORT static int precision;$/;"	m	struct:Catch::StringMaker
prepare	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            ExecutionPlan prepare(const IConfig &cfg, Environment env) const {$/;"	f	struct:Catch::Benchmark::Benchmark
prepareReporters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        IEventListenerPtr prepareReporters(Config const* config) {$/;"	f	namespace:Catch::__anon108
prepareReporters	leak_demo/Catch2/src/catch2/catch_session.cpp	/^        IEventListenerPtr prepareReporters(Config const* config) {$/;"	f	namespace:Catch::__anon36
preprocessPattern	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string TestSpecParser::preprocessPattern() {$/;"	f	class:Catch::TestSpecParser
preprocessPattern	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    std::string TestSpecParser::preprocessPattern() {$/;"	f	class:Catch::TestSpecParser
prevAssertions	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^        Counts prevAssertions;$/;"	m	struct:Catch::SectionEndInfo
previousTopLevelExceptionFilter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static LPTOP_LEVEL_EXCEPTION_FILTER previousTopLevelExceptionFilter = nullptr;$/;"	m	namespace:Catch	file:
previousTopLevelExceptionFilter	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static LPTOP_LEVEL_EXCEPTION_FILTER previousTopLevelExceptionFilter = nullptr;$/;"	m	namespace:Catch	file:
previouslyRun	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^static bool previouslyRun = false;$/;"	v	file:
previouslyRunNested	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/PartTracker.tests.cpp	/^static bool previouslyRunNested = false;$/;"	v	file:
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, Catch::MessageInfo const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionInfo const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionResult const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionResultData const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::AssertionStats const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::Counts const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SectionInfo const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SectionStats const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::SourceLineInfo const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestCaseInfo const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestCaseStats const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestRunInfo const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::TestRunStats const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, Catch::Totals const& info ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^void print( std::ostream& os, int const level, std::string const& title, std::vector<Catch::MessageInfo> const& v ) {$/;"	f	namespace:__anon103
print	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void print() {$/;"	f	class:Catch::__anon138::TapAssertionPrinter
print	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void print() const {$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter
print	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void print() {$/;"	f	class:Catch::__anon130::AssertionPrinter
print	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void print() {$/;"	f	class:Catch::__anon9::AssertionPrinter
print	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void print() const {$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter
print	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void print() {$/;"	f	class:Catch::__anon7::TapAssertionPrinter
print	leak_demo/Catch2/tests/ExtraTests/X02-DisabledMacros.cpp	/^    void print() const {$/;"	f	struct:foo
printClosedHeader	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::printClosedHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printClosedHeader	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printClosedHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printExpressionWas	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printExpressionWas() {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printExpressionWas	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printExpressionWas() {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printExpressionWas	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printExpressionWas() {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printExpressionWas	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printExpressionWas() {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printHeaderString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void printHeaderString(std::ostream& os, std::string const& _string, std::size_t indent = 0) {$/;"	f	namespace:Catch::__anon139
printHeaderString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::printHeaderString(std::string const& _string, std::size_t indent) {$/;"	f	class:Catch::ConsoleReporter
printHeaderString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printHeaderString(std::string const& _string, std::size_t indent) {$/;"	f	class:Catch::ConsoleReporter
printHeaderString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^        void printHeaderString(std::ostream& os, std::string const& _string, std::size_t indent = 0) {$/;"	f	namespace:Catch::__anon6
printInfoMessages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            bool printInfoMessages;$/;"	m	class:Catch::__anon138::TapAssertionPrinter	file:
printInfoMessages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon130::AssertionPrinter	file:
printInfoMessages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
printInfoMessages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon9::AssertionPrinter	file:
printInfoMessages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    bool printInfoMessages;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
printInfoMessages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            bool printInfoMessages;$/;"	m	class:Catch::__anon7::TapAssertionPrinter	file:
printIssue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printIssue(StringRef issue) const {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printIssue	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printIssue(char const* issue) const {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printIssue	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printIssue(char const* issue) const {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printIssue	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printIssue(StringRef issue) const {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printMessage() {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printMessage() const {$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter	file:
printMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printMessage() {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printMessage	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printMessage() {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printMessage	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void printMessage() const {$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter	file:
printMessage	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printMessage() {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printOpenHeader	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::printOpenHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printOpenHeader	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printOpenHeader(std::string const& _name) {$/;"	f	class:Catch::ConsoleReporter
printOriginalExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printOriginalExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printOriginalExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter	file:
printOriginalExpression	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printOriginalExpression	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void printOriginalExpression() const {$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter	file:
printOriginalExpression	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printOriginalExpression() const {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printReconstructedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printReconstructedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printReconstructedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter	file:
printReconstructedExpression	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printReconstructedExpression	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void printReconstructedExpression() const {$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter	file:
printReconstructedExpression	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printReconstructedExpression() const {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printRemainingMessages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printRemainingMessages(Colour::Code colour = tapDimColour) {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printRemainingMessages	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printRemainingMessages(Colour::Code colour = compactDimColour) {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printRemainingMessages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printRemainingMessages(Colour::Code colour = compactDimColour) {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printRemainingMessages	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printRemainingMessages(Colour::Code colour = tapDimColour) {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printResultType	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void printResultType(StringRef passOrFail) const {$/;"	f	class:Catch::__anon138::TapAssertionPrinter	file:
printResultType	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printResultType() const {$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter	file:
printResultType	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printResultType(Colour::Code colour, StringRef passOrFail) const {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printResultType	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printResultType(Colour::Code colour, StringRef passOrFail) const {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printResultType	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void printResultType() const {$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter	file:
printResultType	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            void printResultType(StringRef passOrFail) const {$/;"	f	class:Catch::__anon7::TapAssertionPrinter	file:
printSectionHeader	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TeamCityReporter::printSectionHeader(std::ostream& os) {$/;"	f	class:Catch::TeamCityReporter
printSectionHeader	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^    void TeamCityReporter::printSectionHeader(std::ostream& os) {$/;"	f	class:Catch::TeamCityReporter
printSourceInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon130::AssertionPrinter	file:
printSourceInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon131::ConsoleAssertionPrinter	file:
printSourceInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon9::AssertionPrinter	file:
printSourceInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    void printSourceInfo() const {$/;"	f	class:Catch::__anon12::ConsoleAssertionPrinter	file:
printSummaryRow	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void printSummaryRow( std::ostream& stream,$/;"	f	namespace:Catch::__anon134
printSummaryRow	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^        void printSummaryRow( std::ostream& stream,$/;"	f	namespace:Catch::__anon11
printTestCaseAndSectionHeader	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::printTestCaseAndSectionHeader() {$/;"	f	class:Catch::ConsoleReporter
printTestCaseAndSectionHeader	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printTestCaseAndSectionHeader() {$/;"	f	class:Catch::ConsoleReporter
printTestRunTotals	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void printTestRunTotals( std::ostream& stream,$/;"	f	namespace:Catch
printTestRunTotals	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    void printTestRunTotals( std::ostream& stream,$/;"	f	namespace:Catch
printTotalsDivider	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::printTotalsDivider(Totals const& totals) {$/;"	f	class:Catch::ConsoleReporter
printTotalsDivider	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::printTotalsDivider(Totals const& totals) {$/;"	f	class:Catch::ConsoleReporter
print_all_entries	database_binary_and_hash_search.c	/^void print_all_entries(char *const *argv)$/;"	f
print_entry	database_binary_and_hash_search.c	/^void print_entry(char *const *argv)$/;"	f
processName	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::string processName;$/;"	m	struct:Catch::ConfigData
processNameChar	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::processNameChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNameChar	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::processNameChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNoneChar	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpecParser::processNoneChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processNoneChar	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::processNoneChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processOtherChar	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpecParser::processOtherChar( char c ) {$/;"	f	class:Catch::TestSpecParser
processOtherChar	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::processOtherChar( char c ) {$/;"	f	class:Catch::TestSpecParser
prop	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    int* prop;$/;"	m	struct:Obj	file:
properties	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        TestCaseProperties properties = TestCaseProperties::None;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
pushScopedMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::pushScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
pushScopedMessage	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::pushScopedMessage(MessageInfo const & message) {$/;"	f	class:Catch::RunContext
qnxnto	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	leak_demo/build/CMakeFiles/3.29.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
random	leak_demo/Catch2/examples/300-Gen-OwnGenerator.cpp	/^Catch::Generators::GeneratorWrapper<int> random(int low, int high) {$/;"	f	namespace:__anon101
random	leak_demo/Catch2/src/catch2/generators/catch_generators_random.hpp	/^random(T a, T b) {$/;"	f	namespace:Catch::Generators
range	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^GeneratorWrapper<T> range(T const& start, T const& end) {$/;"	f	namespace:Catch::Generators
range	leak_demo/Catch2/src/catch2/generators/catch_generators_range.hpp	/^GeneratorWrapper<T> range(T const& start, T const& end, T const& step) {$/;"	f	namespace:Catch::Generators
rangeToString	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        std::string rangeToString(InputIterator first, Sentinel last) {$/;"	f	namespace:Catch::Detail
rate	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static rep& rate() {$/;"	f	struct:__anon83::counting_clock	file:
rawMemoryToString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string rawMemoryToString( const void *object, std::size_t size ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^    std::string rawMemoryToString( const void *object, std::size_t size ) {$/;"	f	namespace:Catch::Detail
rawMemoryToString	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        std::string rawMemoryToString( const T& object ) {$/;"	f	namespace:Catch::Detail
rdbuf	leak_demo/Catch2/fuzzing/NullOStream.h	/^  NullStreambuf *rdbuf() { return this; }$/;"	f	class:final
readBazelEnvVars	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Config::readBazelEnvVars() {$/;"	f	class:Catch::Config
readBazelEnvVars	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    void Config::readBazelEnvVars() {$/;"	f	class:Catch::Config
readBazelShardingOptions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static Optional<bazelShardingOptions> readBazelShardingOptions() {$/;"	f	namespace:Catch::__anon106
readBazelShardingOptions	leak_demo/Catch2/src/catch2/catch_config.cpp	/^        static Optional<bazelShardingOptions> readBazelShardingOptions() {$/;"	f	namespace:Catch::__anon3
readLines	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def readLines(in_file):$/;"	f
read_error_handling	database_binary_and_hash_search.c	/^void read_error_handling(FILE *file, const char *file_name)$/;"	f
readmePath	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^readmePath = os.path.join( catchPath, "README.md" )$/;"	v
rebind	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    template <typename U> struct rebind { using other = CustomAllocator<U>; };$/;"	s	struct:CustomAllocator	file:
reconstructExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string AssertionResultData::reconstructExpression() const {$/;"	f	class:Catch::AssertionResultData
reconstructExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    std::string AssertionResultData::reconstructExpression() const {$/;"	f	class:Catch::AssertionResultData
reconstructedExpression	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^        mutable std::string reconstructedExpression;$/;"	m	struct:Catch::AssertionResultData
reference	leak_demo/Catch2/.conan/build.py	/^    def reference(self):$/;"	m	class:BuilderSettings
registerEnum	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	class:Catch::Detail::EnumValuesRegistry
registerEnum	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_enum_values_registry.hpp	/^        Detail::EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::initializer_list<E> values ) {$/;"	f	class:Catch::IMutableEnumValuesRegistry::Detail
registerEnum	leak_demo/Catch2/src/catch2/internal/catch_enum_values_registry.cpp	/^        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {$/;"	f	class:Catch::Detail::EnumValuesRegistry
registerListener	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReporterRegistry::registerListener($/;"	f	class:Catch::ReporterRegistry
registerListener	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    void ReporterRegistry::registerListener($/;"	f	class:Catch::ReporterRegistry
registerListenerImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void registerListenerImpl( Detail::unique_ptr<EventListenerFactory> listenerFactory ) {$/;"	f	namespace:Catch::Detail
registerListenerImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.cpp	/^        void registerListenerImpl( Detail::unique_ptr<EventListenerFactory> listenerFactory ) {$/;"	f	namespace:Catch::Detail
registerReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReporterRegistry::registerReporter( std::string const& name,$/;"	f	class:Catch::ReporterRegistry
registerReporter	leak_demo/Catch2/src/catch2/internal/catch_reporter_registry.cpp	/^    void ReporterRegistry::registerReporter( std::string const& name,$/;"	f	class:Catch::ReporterRegistry
registerReporterImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void registerReporterImpl( std::string const& name,$/;"	f	namespace:Catch::Detail
registerReporterImpl	leak_demo/Catch2/src/catch2/reporters/catch_reporter_registrars.cpp	/^        void registerReporterImpl( std::string const& name,$/;"	f	namespace:Catch::Detail
registerTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestRegistry::registerTest(Detail::unique_ptr<TestCaseInfo> testInfo, Detail::unique_ptr<ITestInvoker> testInvoker) {$/;"	f	class:Catch::TestRegistry
registerTest	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    void TestRegistry::registerTest(Detail::unique_ptr<TestCaseInfo> testInfo, Detail::unique_ptr<ITestInvoker> testInvoker) {$/;"	f	class:Catch::TestRegistry
registerTranslator	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ExceptionTranslatorRegistry::registerTranslator( Detail::unique_ptr<IExceptionTranslator>&& translator ) {$/;"	f	class:Catch::ExceptionTranslatorRegistry
registerTranslator	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.cpp	/^    void ExceptionTranslatorRegistry::registerTranslator( Detail::unique_ptr<IExceptionTranslator>&& translator ) {$/;"	f	class:Catch::ExceptionTranslatorRegistry
registerTranslatorImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void registerTranslatorImpl($/;"	f	namespace:Catch::Detail
registerTranslatorImpl	leak_demo/Catch2/src/catch2/catch_translate_exception.cpp	/^        void registerTranslatorImpl($/;"	f	namespace:Catch::Detail
release	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void release( std::size_t index ) {$/;"	f	struct:Catch::StringStreams
release	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        T* release() {$/;"	f	class:Catch::Detail::unique_ptr
release	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^        void release( std::size_t index ) {$/;"	f	struct:Catch::StringStreams
release	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        T* release() {$/;"	f	class:Catch::Detail::unique_ptr
releaseNotesName	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^releaseNotesName = 'release-notes.md'$/;"	v
remainingTokens	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                TokenStream const& remainingTokens() const& {$/;"	f	class:Catch::Clara::Detail::ParseState
remainingTokens	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                TokenStream&& remainingTokens() && {$/;"	f	class:Catch::Clara::Detail::ParseState
removeLines	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def removeLines(lines, remove=('[[back to top]', '<a class="mk-toclify"')):$/;"	f
removeToC	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def removeToC(lines):$/;"	f
repeat	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^            repeater<std::decay_t<Fun>> repeat(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark::Detail
repeat	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    GeneratorWrapper<T> repeat(size_t repeats, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
repeater	leak_demo/Catch2/src/catch2/benchmark/detail/catch_repeat.hpp	/^            struct repeater {$/;"	s	namespace:Catch::Benchmark::Detail
repeats	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int repeats;$/;"	m	struct:Catch::Benchmark::Chronometer
repeats	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            int repeats;$/;"	m	struct:Catch::Benchmark::Chronometer
replaceInPlace	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool replaceInPlace( std::string& str, std::string const& replaceThis, std::string const& withThis ) {$/;"	f	namespace:Catch
replaceInPlace	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    bool replaceInPlace( std::string& str, std::string const& replaceThis, std::string const& withThis ) {$/;"	f	namespace:Catch
reportExpr	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::reportExpr($/;"	f	class:Catch::RunContext
reportExpr	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::reportExpr($/;"	f	class:Catch::RunContext
reportFatal	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void reportFatal( char const * const message ) {$/;"	f	namespace:__anon118
reportFatal	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    void reportFatal( char const * const message ) {$/;"	f	namespace:__anon19
reportInvalidTestSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::reportInvalidTestSpec( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
reportInvalidTestSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::reportInvalidTestSpec( StringRef arg ) {$/;"	f	class:Catch::MultiReporter
reportInvalidTestSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::reportInvalidTestSpec( StringRef arg ) {$/;"	f	class:Catch::ConsoleReporter
reportInvalidTestSpec	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::reportInvalidTestSpec( StringRef arg ) {$/;"	f	class:Catch::ConsoleReporter
reportInvalidTestSpec	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::reportInvalidTestSpec( StringRef ) {}$/;"	f	class:Catch::EventListenerBase
reportInvalidTestSpec	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::reportInvalidTestSpec( StringRef arg ) {$/;"	f	class:Catch::MultiReporter
reporterSpecifications	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::vector<ReporterSpec> reporterSpecifications;$/;"	m	struct:Catch::ConfigData
reporter_args	leak_demo/Catch2/tools/scripts/approvalTests.py	/^reporter_args = []$/;"	v
reporters	leak_demo/Catch2/tools/scripts/approvalTests.py	/^reporters = ('console', 'junit', 'xml', 'compact', 'sonarqube', 'tap', 'teamcity', 'automake')$/;"	v
required_output	leak_demo/Catch2/tests/TestScripts/testConfigureDisableStringification.py	/^required_output = 'Disabled by CATCH_CONFIG_DISABLE_STRINGIFICATION'$/;"	v
requirements	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    def requirements(self):$/;"	m	class:TestPackageConan
resample	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                resample( URng& rng,$/;"	f	namespace:Catch::Benchmark::Detail::__anon104
resample	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^                resample( URng& rng,$/;"	f	namespace:Catch::Benchmark::Detail::__anon1
resamples	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        unsigned int resamples;$/;"	m	struct:Catch::BenchmarkInfo
resamples	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        unsigned int resamples;$/;"	m	struct:Catch::BenchmarkInfo
reset	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        void reset(T* ptr = nullptr) {$/;"	f	class:Catch::Detail::unique_ptr
reset	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        void reset() {$/;"	f	class:Catch::Optional
reset	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        void reset(T* ptr = nullptr) {$/;"	f	class:Catch::Detail::unique_ptr
resetAssertionInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::resetAssertionInfo() {$/;"	f	class:Catch::RunContext
resetAssertionInfo	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::resetAssertionInfo() {$/;"	f	class:Catch::RunContext
resolution	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            std::vector<double> resolution(int k) {$/;"	f	namespace:Catch::Benchmark::Detail
result	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            AssertionResult const& result;$/;"	m	class:Catch::__anon138::TapAssertionPrinter	file:
result	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon130::AssertionPrinter	file:
result	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
result	leak_demo/Catch2/src/catch2/benchmark/detail/catch_timing.hpp	/^            Result result;$/;"	m	struct:Catch::Benchmark::Timing
result	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon9::AssertionPrinter	file:
result	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    AssertionResult const& result;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
result	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            AssertionResult const& result;$/;"	m	class:Catch::__anon7::TapAssertionPrinter	file:
resultDisposition	leak_demo/Catch2/src/catch2/catch_assertion_info.hpp	/^        ResultDisposition::Flags resultDisposition;$/;"	m	struct:Catch::AssertionInfo
resultType	leak_demo/Catch2/src/catch2/catch_assertion_result.hpp	/^        ResultWas::OfType resultType;$/;"	m	struct:Catch::AssertionResultData
ret	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^    ret = subprocess.run($/;"	v
ret	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^    ret = subprocess.run($/;"	v
returnsConstNull	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^    static const char* returnsConstNull() { return nullptr; }$/;"	f	namespace:__anon55
returnsNull	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^    static char* returnsNull() { return nullptr; }$/;"	f	namespace:__anon55
revertBackToLastMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::revertBackToLastMode() {$/;"	f	class:Catch::TestSpecParser
revertBackToLastMode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::revertBackToLastMode() {$/;"	f	class:Catch::TestSpecParser
rhs	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ColourGuard& operator=( ColourGuard const& rhs ) = delete;$/;"	m	class:Catch::ColourImpl::ColourGuard
rhs	leak_demo/Catch2/src/catch2/internal/catch_console_colour.hpp	/^            ColourGuard( ColourGuard const& rhs ) = delete;$/;"	m	class:Catch::ColourImpl::ColourGuard
rhs	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Details.tests.cpp	/^        MoveChecker& operator=( MoveChecker const& rhs ) = default;$/;"	m	struct:__anon89::MoveChecker	file:
rhs	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Details.tests.cpp	/^        MoveChecker( MoveChecker const& rhs ) = default;$/;"	m	struct:__anon89::MoveChecker	file:
rhs	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^        move_detector& operator=(move_detector const& rhs) = default;$/;"	m	struct:__anon79::move_detector	file:
rhs	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^        move_detector(move_detector const& rhs) = default;$/;"	m	struct:__anon79::move_detector	file:
rhs	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    MoveOnlyTestElement& operator=(MoveOnlyTestElement&& rhs) = default;$/;"	m	struct:MoveOnlyTestElement	file:
rhs	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^    MoveOnlyTestElement(MoveOnlyTestElement&& rhs) = default;$/;"	m	struct:MoveOnlyTestElement	file:
right	leak_demo/Catch2/third_party/clara.hpp	/^        std::string right;$/;"	m	struct:clara::detail::HelpColumns
rng	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            Catch::SimplePcg32 rng;$/;"	m	struct:Catch::Generators::RandomFloatingGenerator::PImpl	file:
rng	leak_demo/Catch2/src/catch2/generators/catch_generators_random.cpp	/^            Catch::SimplePcg32 rng;$/;"	m	struct:Catch::Generators::RandomFloatingGenerator::PImpl	file:
rngSeed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    uint32_t Config::rngSeed() const                   { return m_data.rngSeed; }$/;"	f	class:Catch::Config
rngSeed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    unsigned int rngSeed() {$/;"	f	namespace:Catch
rngSeed	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    uint32_t Config::rngSeed() const                   { return m_data.rngSeed; }$/;"	f	class:Catch::Config
rngSeed	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        uint32_t rngSeed = generateRandomSeed(GenerateFrom::Default);$/;"	m	struct:Catch::ConfigData
rngSeed	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    unsigned int rngSeed() {$/;"	f	namespace:Catch
rootPath	leak_demo/Catch2/tools/scripts/approvalTests.py	/^rootPath = os.path.join(catchPath, 'tests\/SelfTest\/Baselines')$/;"	v
rootPath	leak_demo/Catch2/tools/scripts/approve.py	/^rootPath = os.path.join( catchPath, 'tests\/SelfTest\/Baselines' )$/;"	v
rootPath	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^rootPath = os.path.join( catchPath, 'src\/catch2' )$/;"	v
root_path	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^root_path = os.path.join(catchPath, 'src')$/;"	v
rotate_right	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        uint32_t rotate_right(uint32_t val, uint32_t count) {$/;"	f	namespace:Catch::__anon121
rotate_right	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^        uint32_t rotate_right(uint32_t val, uint32_t count) {$/;"	f	namespace:Catch::__anon29
run	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int Session::run() {$/;"	f	class:Catch::Session
run	leak_demo/Catch2/src/catch2/benchmark/catch_benchmark.hpp	/^            void run() {$/;"	f	struct:Catch::Benchmark::Benchmark
run	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^            std::vector<FDuration> run(const IConfig &cfg, Environment env) const {$/;"	f	struct:Catch::Benchmark::ExecutionPlan
run	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    int Session::run() {$/;"	f	class:Catch::Session
run	leak_demo/Catch2/src/catch2/catch_session.hpp	/^        int run(int argc, CharT const * const argv[]) {$/;"	f	class:Catch::Session
runCurrentTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::runCurrentTest(std::string & redirectedCout, std::string & redirectedCerr) {$/;"	f	class:Catch::RunContext
runCurrentTest	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::runCurrentTest(std::string & redirectedCout, std::string & redirectedCerr) {$/;"	f	class:Catch::RunContext
runInfo	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        TestRunInfo runInfo;$/;"	m	struct:Catch::TestRunStats
runInternal	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    int Session::runInternal() {$/;"	f	class:Catch::Session
runInternal	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    int Session::runInternal() {$/;"	f	class:Catch::Session
runOrder	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestRunOrder Config::runOrder() const              { return m_data.runOrder; }$/;"	f	class:Catch::Config
runOrder	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    TestRunOrder Config::runOrder() const              { return m_data.runOrder; }$/;"	f	class:Catch::Config
runOrder	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        TestRunOrder runOrder = TestRunOrder::Declared;$/;"	m	struct:Catch::ConfigData
runTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Totals RunContext::runTest(TestCaseHandle const& testCase) {$/;"	f	class:Catch::RunContext
runTest	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    Totals RunContext::runTest(TestCaseHandle const& testCase) {$/;"	f	class:Catch::RunContext
run_and_return_output	leak_demo/Catch2/tests/TestScripts/ConfigureTestsCommon.py	/^def run_and_return_output(base_path: str, binary_name: str, other_options: List[str]) -> Tuple[str, str]:$/;"	f
run_for_at_least	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.hpp	/^                run_for_at_least(IDuration how_long,$/;"	f	namespace:Catch::Benchmark::Detail
run_test	leak_demo/Catch2/tools/scripts/approvalTests.py	/^def run_test(baseName, args):$/;"	f
runs	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int runs() const { return repeats; }$/;"	f	struct:Catch::Benchmark::Chronometer
runs	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^            int runs() const { return repeats; }$/;"	f	struct:Catch::Benchmark::Chronometer
s	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        std::string s;$/;"	m	class:__anon64::TestClass	file:
s_empty	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef
s_empty	leak_demo/Catch2/src/catch2/internal/catch_stringref.hpp	/^        static constexpr char const* const s_empty = "";$/;"	m	class:Catch::StringRef
s_inc	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.hpp	/^        static const std::uint64_t s_inc = (0x13ed0cc53f939476ULL << 1ULL) | 1ULL;$/;"	m	class:Catch::SimplePcg32
s_nanosecondsInAMicrosecond	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInAMicrosecond = 1000;$/;"	m	class:Catch::__anon131::Duration	file:
s_nanosecondsInAMicrosecond	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMicrosecond = 1000;$/;"	m	class:Catch::__anon12::Duration	file:
s_nanosecondsInAMillisecond	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInAMillisecond = 1000 * s_nanosecondsInAMicrosecond;$/;"	m	class:Catch::__anon131::Duration	file:
s_nanosecondsInAMillisecond	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMillisecond = 1000 * s_nanosecondsInAMicrosecond;$/;"	m	class:Catch::__anon12::Duration	file:
s_nanosecondsInAMinute	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInAMinute = 60 * s_nanosecondsInASecond;$/;"	m	class:Catch::__anon131::Duration	file:
s_nanosecondsInAMinute	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInAMinute = 60 * s_nanosecondsInASecond;$/;"	m	class:Catch::__anon12::Duration	file:
s_nanosecondsInASecond	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static const uint64_t s_nanosecondsInASecond = 1000 * s_nanosecondsInAMillisecond;$/;"	m	class:Catch::__anon131::Duration	file:
s_nanosecondsInASecond	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    static const uint64_t s_nanosecondsInASecond = 1000 * s_nanosecondsInAMillisecond;$/;"	m	class:Catch::__anon12::Duration	file:
samples	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        std::vector<Benchmark::FDuration> samples;$/;"	m	struct:Catch::BenchmarkStats
samples	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        unsigned int samples;$/;"	m	struct:Catch::BenchmarkInfo
samples	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^            std::vector<FDuration> samples;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
samples	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        std::vector<Benchmark::FDuration> samples;$/;"	m	struct:Catch::BenchmarkStats
samples	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        unsigned int samples;$/;"	m	struct:Catch::BenchmarkInfo
samples_seen	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int samples_seen = 0;$/;"	m	struct:Catch::Benchmark::OutlierClassification
samples_seen	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^            int samples_seen = 0;$/;"	m	struct:Catch::Benchmark::OutlierClassification
saveLastMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::saveLastMode() {$/;"	f	class:Catch::TestSpecParser
saveLastMode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::saveLastMode() {$/;"	f	class:Catch::TestSpecParser
scale	leak_demo/Catch2/src/catch2/catch_approx.hpp	/^        Approx& scale( T const& newScale ) {$/;"	f	class:Catch::Approx
scale	leak_demo/Catch2/src/catch2/matchers/catch_matchers_vector.hpp	/^        ApproxMatcher& scale( T const& newScale ) {$/;"	f	class:Catch::Matchers::final
scopedElement	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::ScopedElement XmlWriter::scopedElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
scopedElement	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement XmlWriter::scopedElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
search_key	database_binary_and_hash_search.c	/^    char search_key[max_entry_name_size + 1];$/;"	m	struct:tag_entry	file:
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void CompactReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::CompactReporter
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void CumulativeReporterBase::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::CumulativeReporterBase
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::sectionEnded( SectionStats const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::sectionEnded( SectionStats const& \/*sectionStats *\/) {$/;"	f	class:Catch::JsonReporter
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::MultiReporter
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::sectionEnded(SectionEndInfo&& endInfo) {$/;"	f	class:Catch::RunContext
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::XmlReporter
sectionEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::ConsoleReporter
sectionEnded	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::sectionEnded(SectionEndInfo&& endInfo) {$/;"	f	class:Catch::RunContext
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::CompactReporter
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::sectionEnded(SectionStats const& _sectionStats) {$/;"	f	class:Catch::ConsoleReporter
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::CumulativeReporterBase
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::sectionEnded( SectionStats const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::sectionEnded( SectionStats const& \/*sectionStats *\/) {$/;"	f	class:Catch::JsonReporter
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::MultiReporter
sectionEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::sectionEnded( SectionStats const& sectionStats ) {$/;"	f	class:Catch::XmlReporter
sectionEndedEarly	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void RunContext::sectionEndedEarly(SectionEndInfo&& endInfo) {$/;"	f	class:Catch::RunContext
sectionEndedEarly	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void RunContext::sectionEndedEarly(SectionEndInfo&& endInfo) {$/;"	f	class:Catch::RunContext
sectionInfo	leak_demo/Catch2/src/catch2/catch_section_info.hpp	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionEndInfo
sectionInfo	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        SectionInfo sectionInfo;$/;"	m	struct:Catch::SectionStats
sectionStarted	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool RunContext::sectionStarted( StringRef sectionName,$/;"	f	class:Catch::RunContext
sectionStarted	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    bool RunContext::sectionStarted( StringRef sectionName,$/;"	f	class:Catch::RunContext
sectionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    CumulativeReporterBase::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::CumulativeReporterBase
sectionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::sectionStarting( SectionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::JsonReporter
sectionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::MultiReporter
sectionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::XmlReporter
sectionStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::sectionStarting(SectionInfo const& _sectionInfo) {$/;"	f	class:Catch::ConsoleReporter
sectionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::sectionStarting(SectionInfo const& _sectionInfo) {$/;"	f	class:Catch::ConsoleReporter
sectionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    CumulativeReporterBase::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::CumulativeReporterBase
sectionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::sectionStarting( SectionInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
sectionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::JsonReporter
sectionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::MultiReporter
sectionStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::sectionStarting( SectionInfo const& sectionInfo ) {$/;"	f	class:Catch::XmlReporter
sectionsToRun	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::vector<std::string> sectionsToRun;$/;"	m	struct:Catch::ConfigData
seed	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SimplePcg32::seed(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
seed	leak_demo/Catch2/src/catch2/internal/catch_random_number_generator.cpp	/^    void SimplePcg32::seed(result_type seed_) {$/;"	f	class:Catch::SimplePcg32
seed	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^seed = random.randint(0, 2 ** 32 - 1)$/;"	v
seedRng	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void seedRng(IConfig const& config) {$/;"	f	namespace:Catch
seedRng	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    void seedRng(IConfig const& config) {$/;"	f	namespace:Catch
sentinel_distance	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^        sentinel_distance( ForwardIter iter, const Sentinel sentinel ) {$/;"	f	namespace:Catch::Detail
sentinel_distance	leak_demo/Catch2/src/catch2/internal/catch_is_permutation.hpp	/^        std::ptrdiff_t sentinel_distance( ForwardIter first,$/;"	f	namespace:Catch::Detail
separate	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpecParser::separate() {$/;"	f	class:Catch::TestSpecParser
separate	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::separate() {$/;"	f	class:Catch::TestSpecParser
separator	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^const std::string separator = "--sep--";$/;"	v
sequence	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        unsigned int sequence;$/;"	m	struct:Catch::MessageInfo
serializeFilters	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string serializeFilters( std::vector<std::string> const& filters ) {$/;"	f	namespace:Catch
serializeFilters	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    std::string serializeFilters( std::vector<std::string> const& filters ) {$/;"	f	namespace:Catch
serializeTo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpec::Filter::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec::Filter
serializeTo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpec::NamePattern::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec::NamePattern
serializeTo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpec::TagPattern::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec::TagPattern
serializeTo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpec::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec
serializeTo	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    void TestSpec::Filter::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec::Filter
serializeTo	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    void TestSpec::NamePattern::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec::NamePattern
serializeTo	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    void TestSpec::TagPattern::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec::TagPattern
serializeTo	leak_demo/Catch2/src/catch2/catch_test_spec.cpp	/^    void TestSpec::serializeTo( std::ostream& out ) const {$/;"	f	class:Catch::TestSpec
set	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        ParserResult ExeName::set(std::string const& newName) {$/;"	f	class:Catch::Clara::ExeName
set	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        ParserResult ExeName::set(std::string const& newName) {$/;"	f	class:Catch::Clara::ExeName
setConfig	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Context::setConfig( IConfig const* config ) { m_config = config; }$/;"	f	class:Catch::Context
setConfig	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    void Context::setConfig( IConfig const* config ) { m_config = config; }$/;"	f	class:Catch::Context
setCurrentTracker	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TrackerContext::setCurrentTracker( ITracker* tracker ) {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
setCurrentTracker	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void TrackerContext::setCurrentTracker( ITracker* tracker ) {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
setEpsilon	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Approx::setEpsilon(double newEpsilon) {$/;"	f	class:Catch::Approx
setEpsilon	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    void Approx::setEpsilon(double newEpsilon) {$/;"	f	class:Catch::Approx
setFlag	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            ParserResult BoundFlagRef::setFlag( bool flag ) {$/;"	f	class:Catch::Clara::Detail::BoundFlagRef
setFlag	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^            ParserResult BoundFlagRef::setFlag( bool flag ) {$/;"	f	class:Catch::Clara::Detail::BoundFlagRef
setMargin	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Approx::setMargin(double newMargin) {$/;"	f	class:Catch::Approx
setMargin	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    void Approx::setMargin(double newMargin) {$/;"	f	class:Catch::Approx
setResultCapture	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Context::setResultCapture( IResultCapture* resultCapture ) {$/;"	f	class:Catch::Context
setResultCapture	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    void Context::setResultCapture( IResultCapture* resultCapture ) {$/;"	f	class:Catch::Context
setTextAttribute	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void setTextAttribute( WORD _textAttribute ) const {$/;"	f	class:Catch::__anon114::final	file:
setTextAttribute	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        void setTextAttribute( WORD _textAttribute ) const {$/;"	f	class:Catch::__anon32::final	file:
set_rate	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static void set_rate(rep new_rate) { rate() = new_rate; }$/;"	f	struct:__anon83::counting_clock
set_version	leak_demo/Catch2/conanfile.py	/^    def set_version(self):$/;"	m	class:CatchConan
settings	leak_demo/Catch2/.conan/build.py	/^    settings = BuilderSettings()$/;"	v	class:BuilderSettings
settings	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    settings = "os", "compiler", "build_type", "arch"$/;"	v	class:TestPackageConan
settings	leak_demo/Catch2/conanfile.py	/^    settings = "os", "compiler", "build_type", "arch"$/;"	v	class:CatchConan
shardCount	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            unsigned int shardIndex, shardCount;$/;"	m	struct:Catch::__anon106::bazelShardingOptions	file:
shardCount	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    unsigned int Config::shardCount() const            { return m_data.shardCount; }$/;"	f	class:Catch::Config
shardCount	leak_demo/Catch2/src/catch2/catch_config.cpp	/^            unsigned int shardIndex, shardCount;$/;"	m	struct:Catch::__anon3::bazelShardingOptions	file:
shardCount	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    unsigned int Config::shardCount() const            { return m_data.shardCount; }$/;"	f	class:Catch::Config
shardCount	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int shardCount = 1;$/;"	m	struct:Catch::ConfigData
shardFilePath	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::string shardFilePath;$/;"	m	struct:Catch::__anon106::bazelShardingOptions	file:
shardFilePath	leak_demo/Catch2/src/catch2/catch_config.cpp	/^            std::string shardFilePath;$/;"	m	struct:Catch::__anon3::bazelShardingOptions	file:
shardIndex	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            unsigned int shardIndex, shardCount;$/;"	m	struct:Catch::__anon106::bazelShardingOptions	file:
shardIndex	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    unsigned int Config::shardIndex() const            { return m_data.shardIndex; }$/;"	f	class:Catch::Config
shardIndex	leak_demo/Catch2/src/catch2/catch_config.cpp	/^            unsigned int shardIndex, shardCount;$/;"	m	struct:Catch::__anon3::bazelShardingOptions	file:
shardIndex	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    unsigned int Config::shardIndex() const            { return m_data.shardIndex; }$/;"	f	class:Catch::Config
shardIndex	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        unsigned int shardIndex = 0;$/;"	m	struct:Catch::ConfigData
sharedRng	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    SimplePcg32& sharedRng() {$/;"	f	namespace:Catch
sharedRng	leak_demo/Catch2/src/catch2/internal/catch_context.cpp	/^    SimplePcg32& sharedRng() {$/;"	f	namespace:Catch
shouldContinueOnFailure	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldContinueOnFailure	leak_demo/Catch2/src/catch2/internal/catch_result_type.cpp	/^    bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }$/;"	f	namespace:Catch
shouldDebugBreak	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::shouldDebugBreak() const              { return m_data.shouldDebugBreak; }$/;"	f	class:Catch::Config
shouldDebugBreak	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::shouldDebugBreak() const              { return m_data.shouldDebugBreak; }$/;"	f	class:Catch::Config
shouldDebugBreak	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool shouldDebugBreak = false;$/;"	m	struct:Catch::ConfigData
shouldDebugBreak	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        bool shouldDebugBreak = false;$/;"	m	struct:Catch::AssertionReaction
shouldIndent	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool shouldIndent(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon128
shouldIndent	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    bool shouldIndent(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon23
shouldNewline	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool shouldNewline(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon128
shouldNewline	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    bool shouldNewline(XmlFormatting fmt) {$/;"	f	namespace:Catch::__anon23
shouldRedirectStdOut	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        bool shouldRedirectStdOut = false;$/;"	m	struct:Catch::ReporterPreferences
shouldReportAllAssertions	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        bool shouldReportAllAssertions = false;$/;"	m	struct:Catch::ReporterPreferences
shouldShowDuration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool shouldShowDuration( IConfig const& config, double duration ) {$/;"	f	namespace:Catch
shouldShowDuration	leak_demo/Catch2/src/catch2/reporters/catch_reporter_helpers.cpp	/^    bool shouldShowDuration( IConfig const& config, double duration ) {$/;"	f	namespace:Catch
shouldSkip	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        bool shouldSkip = false;$/;"	m	struct:Catch::AssertionReaction
shouldSuppressFailure	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldSuppressFailure	leak_demo/Catch2/src/catch2/internal/catch_result_type.cpp	/^    bool shouldSuppressFailure( int flags )      { return ( flags & ResultDisposition::SuppressFail ) != 0; }$/;"	f	namespace:Catch
shouldThrow	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        bool shouldThrow = false;$/;"	m	struct:Catch::AssertionReaction
showDurations	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ShowDurations Config::showDurations() const        { return m_data.showDurations; }$/;"	f	class:Catch::Config
showDurations	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    ShowDurations Config::showDurations() const        { return m_data.showDurations; }$/;"	f	class:Catch::Config
showDurations	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        ShowDurations showDurations = ShowDurations::DefaultForReporter;$/;"	m	struct:Catch::ConfigData
showHelp	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::showHelp() const { return m_data.showHelp; }$/;"	f	class:Catch::Config
showHelp	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Session::showHelp() const {$/;"	f	class:Catch::Session
showHelp	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::showHelp() const { return m_data.showHelp; }$/;"	f	class:Catch::Config
showHelp	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool showHelp = false;$/;"	m	struct:Catch::ConfigData
showHelp	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    void Session::showHelp() const {$/;"	f	class:Catch::Session
showInvisibles	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::showInvisibles() const                { return m_data.showInvisibles; }$/;"	f	class:Catch::Config
showInvisibles	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::showInvisibles() const                { return m_data.showInvisibles; }$/;"	f	class:Catch::Config
showInvisibles	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool showInvisibles = false;$/;"	m	struct:Catch::ConfigData
showSuccessfulTests	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool showSuccessfulTests = false;$/;"	m	struct:Catch::ConfigData
signalDefs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static SignalDefs signalDefs[] = {$/;"	m	namespace:Catch	file:
signalDefs	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static SignalDefs signalDefs[] = {$/;"	m	namespace:Catch	file:
sinceEpochParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^sinceEpochParser = re.compile(r'\\d+ .+ since epoch')$/;"	v
size	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        size_t size() { return 0; }$/;"	f	struct:__anon64::Template_Foo
size	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        size_t size() { return V; }$/;"	f	struct:__anon64::Template_Foo_2
size	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        size_t size() const {$/;"	f	struct:__anon50::has_size
size	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^        size_t size() { return 0; }$/;"	f	struct:__anon62::Foo
size	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^        size_t size() { return S; }$/;"	f	struct:__anon62::Bar
size	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        friend size_t size( ADL_size s ) { return s.sz(); }$/;"	f	struct:unrelated::ADL_size
sizeOfExtraTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        size_t sizeOfExtraTags(StringRef filepath) {$/;"	f	namespace:Catch::__anon109
sizeOfExtraTags	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^        size_t sizeOfExtraTags(StringRef filepath) {$/;"	f	namespace:Catch::__anon35
skipBenchmarks	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::skipBenchmarks() const                           { return m_data.skipBenchmarks; }$/;"	f	class:Catch::Config
skipBenchmarks	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::skipBenchmarks() const                           { return m_data.skipBenchmarks; }$/;"	f	class:Catch::Config
skipBenchmarks	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        bool skipBenchmarks = false;$/;"	m	struct:Catch::ConfigData
skipTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AutomakeReporter::skipTest(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::AutomakeReporter
skipTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::skipTest( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
skipTest	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::skipTest( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::MultiReporter
skipTest	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.cpp	/^    void AutomakeReporter::skipTest(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::AutomakeReporter
skipTest	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::skipTest( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
skipTest	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::skipTest( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::MultiReporter
skipped	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^        std::uint64_t skipped = 0;$/;"	m	struct:Catch::Counts
some	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        bool some() const { return nullableValue != nullptr; }$/;"	f	class:Catch::Optional
sortTests	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<TestCaseHandle> sortTests( IConfig const& config, std::vector<TestCaseHandle> const& unsortedTestCases ) {$/;"	f	namespace:Catch
sortTests	leak_demo/Catch2/src/catch2/internal/catch_test_case_registry_impl.cpp	/^    std::vector<TestCaseHandle> sortTests( IConfig const& config, std::vector<TestCaseHandle> const& unsortedTestCases ) {$/;"	f	namespace:Catch
source	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        JsonArrayWriter& operator=( JsonArrayWriter&& source ) = delete;$/;"	m	class:Catch::JsonArrayWriter
source	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        JsonObjectWriter& operator=( JsonObjectWriter&& source ) = delete;$/;"	m	class:Catch::JsonObjectWriter
source_path	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^source_path = catchPath + '\/src\/catch2'$/;"	v
source_path	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^source_path = normalized_path(source_path)$/;"	v
sources_dir	leak_demo/Catch2/tests/TestScripts/DiscoverTests/VerifyRegistration.py	/^    sources_dir = os.path.dirname(os.path.abspath(sys.argv[0]))$/;"	v
specialCaseParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^specialCaseParser = re.compile(r'file\\((\\d+)\\)')$/;"	v
spellings	leak_demo/Catch2/src/catch2/internal/catch_list.hpp	/^        std::set<StringRef> spellings;$/;"	m	struct:Catch::TagInfo
split	leak_demo/Catch2/fuzzing/fuzz_textflow.cpp	/^void split(const char *Data, size_t Size, Callback callback) {$/;"	f
splitKVPair	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        kvPair splitKVPair(StringRef kvString) {$/;"	f	namespace:Catch::__anon122
splitKVPair	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^        kvPair splitKVPair(StringRef kvString) {$/;"	f	namespace:Catch::__anon27
splitReporterSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        std::vector<std::string> splitReporterSpec( StringRef reporterSpec ) {$/;"	f	namespace:Catch::Detail
splitReporterSpec	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^        std::vector<std::string> splitReporterSpec( StringRef reporterSpec ) {$/;"	f	namespace:Catch::Detail
splitStringRef	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::vector<StringRef> splitStringRef( StringRef str, char delimiter ) {$/;"	f	namespace:Catch
splitStringRef	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    std::vector<StringRef> splitStringRef( StringRef str, char delimiter ) {$/;"	f	namespace:Catch
sstr	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        std::stringstream sstr;$/;"	m	class:__anon97::StringIStream	file:
stable_branch_pattern	leak_demo/Catch2/.conan/build.py	/^    def stable_branch_pattern(self):$/;"	m	class:BuilderSettings
standardDeviation	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        Benchmark::Estimate<Benchmark::FDuration> standardDeviation;$/;"	m	struct:Catch::BenchmarkStats
standardDeviation	leak_demo/Catch2/src/catch2/benchmark/detail/catch_benchmark_stats.hpp	/^        Benchmark::Estimate<Benchmark::FDuration> standardDeviation;$/;"	m	struct:Catch::BenchmarkStats
standard_deviation	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^                standard_deviation( double const* first, double const* last ) {$/;"	f	namespace:Catch::Benchmark::Detail::__anon104
standard_deviation	leak_demo/Catch2/src/catch2/benchmark/catch_sample_analysis.hpp	/^            Estimate<FDuration> standard_deviation;$/;"	m	struct:Catch::Benchmark::SampleAnalysis
standard_deviation	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^                standard_deviation( double const* first, double const* last ) {$/;"	f	namespace:Catch::Benchmark::Detail::__anon1
standard_deviation	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.hpp	/^                Estimate<double> standard_deviation;$/;"	m	struct:Catch::Benchmark::Detail::bootstrap_analysis
start	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Timer::start() {$/;"	f	class:Catch::Timer
start	leak_demo/Catch2/src/catch2/catch_timer.cpp	/^    void Timer::start() {$/;"	f	class:Catch::Timer
startArray	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter& JsonReporter::startArray( StringRef key ) {$/;"	f	class:Catch::JsonReporter
startArray	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter& JsonReporter::startArray() {$/;"	f	class:Catch::JsonReporter
startArray	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    JsonArrayWriter& JsonReporter::startArray( StringRef key ) {$/;"	f	class:Catch::JsonReporter
startArray	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    JsonArrayWriter& JsonReporter::startArray() {$/;"	f	class:Catch::JsonReporter
startCycle	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.hpp	/^        void startCycle() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
startElement	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::startElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
startElement	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::startElement( std::string const& name, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
startListing	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::startListing() {$/;"	f	class:Catch::JsonReporter
startListing	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::startListing() {$/;"	f	class:Catch::JsonReporter
startNewMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TestSpecParser::startNewMode( Mode mode ) {$/;"	f	class:Catch::TestSpecParser
startNewMode	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    void TestSpecParser::startNewMode( Mode mode ) {$/;"	f	class:Catch::TestSpecParser
startObject	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter& JsonReporter::startObject( StringRef key ) {$/;"	f	class:Catch::JsonReporter
startObject	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter& JsonReporter::startObject() {$/;"	f	class:Catch::JsonReporter
startObject	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    JsonObjectWriter& JsonReporter::startObject( StringRef key ) {$/;"	f	class:Catch::JsonReporter
startObject	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    JsonObjectWriter& JsonReporter::startObject() {$/;"	f	class:Catch::JsonReporter
startRun	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ITracker& TrackerContext::startRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
startRun	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    ITracker& TrackerContext::startRun() {$/;"	f	class:Catch::TestCaseTracking::TrackerContext
started	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^                TimePoint<Clock> started;$/;"	m	struct:Catch::Benchmark::Detail::final
started	leak_demo/Catch2/src/catch2/benchmark/catch_chronometer.hpp	/^                TimePoint<Clock> started;$/;"	m	struct:Catch::Benchmark::Detail::final
started	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        int started = 0;$/;"	m	struct:__anon83::TestChronometerModel	file:
starting	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^        int starting = 0;$/;"	m	struct:ValidatingTestListener::EventCounter	file:
starting_header	leak_demo/Catch2/tools/scripts/generateAmalgamatedFiles.py	/^starting_header = os.path.join(root_path, 'catch2', 'catch_all.hpp')$/;"	v
startsWith	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool startsWith( StringRef s, char prefix ) {$/;"	f	namespace:Catch
startsWith	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool startsWith( std::string const& s, std::string const& prefix ) {$/;"	f	namespace:Catch
startsWith	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    bool startsWith( StringRef s, char prefix ) {$/;"	f	namespace:Catch
startsWith	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    bool startsWith( std::string const& s, std::string const& prefix ) {$/;"	f	namespace:Catch
starts_with	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^bool starts_with(std::string const& str, std::string const& pref) {$/;"	f
stats	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    AssertionStats const& stats;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
stats	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    AssertionStats const& stats;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
stats	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            SectionStats stats;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
stdErr	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        std::string stdErr;$/;"	m	struct:Catch::TestCaseStats
stdErr	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            std::string stdErr;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
stdErrForSuite	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        std::string stdErrForSuite;$/;"	m	class:Catch::final
stdErrString	leak_demo/Catch2/tests/ExtraTests/X27-CapturedStdoutInTestCaseEvents.cpp	/^    std::string stdErrString(uint64_t iter) {$/;"	f	class:TestReporter	file:
stdOut	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        std::string stdOut;$/;"	m	struct:Catch::TestCaseStats
stdOut	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.hpp	/^            std::string stdOut;$/;"	m	struct:Catch::CumulativeReporterBase::SectionNode
stdOutForSuite	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        std::string stdOutForSuite;$/;"	m	class:Catch::final
stdOutString	leak_demo/Catch2/tests/ExtraTests/X27-CapturedStdoutInTestCaseEvents.cpp	/^    std::string stdOutString( uint64_t iter ){$/;"	f	class:TestReporter	file:
stderr	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        stderr=subprocess.PIPE,$/;"	v
stderr	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^        stderr=subprocess.PIPE,$/;"	v
stdout	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        stdout = ex.stdout$/;"	v
stdout	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        stdout=subprocess.PIPE,$/;"	v
stdout	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^    stdout = ret.stdout$/;"	v
stdout	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^        stdout=subprocess.PIPE,$/;"	v
stdout	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^    stdout = ret.stdout$/;"	v
step	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^FP step(FP start, FP direction, uint64_t steps) {$/;"	f	namespace:Catch::__anon129
step	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^FP step(FP start, FP direction, uint64_t steps) {$/;"	f	namespace:Catch::__anon14
storage	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        alignas(alignof(T)) char storage[sizeof(T)];$/;"	m	class:Catch::Optional
stored_object	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                T const& stored_object() const {$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
stored_object	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                T& stored_object() { return *reinterpret_cast<T*>( data ); }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
str	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string ReusableStringStream::str() const {$/;"	f	class:Catch::ReusableStringStream
str	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ReusableStringStream::str( std::string const& str ) {$/;"	f	class:Catch::ReusableStringStream
str	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^    std::string ReusableStringStream::str() const {$/;"	f	class:Catch::ReusableStringStream
str	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^    void ReusableStringStream::str( std::string const& str ) {$/;"	f	class:Catch::ReusableStringStream
str	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/ColourImpl.tests.cpp	/^        std::string str() const { return m_stream.str(); }$/;"	f	class:__anon96::TestStringStream
str	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/Reporters.tests.cpp	/^        std::string str() const { return sstr.str(); }$/;"	f	class:__anon97::StringIStream
str	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^struct Data { std::string str; size_t len; };$/;"	m	struct:Data	file:
str_hello	leak_demo/Catch2/tests/SelfTest/UsageTests/Condition.tests.cpp	/^        std::string str_hello = "hello";$/;"	m	struct:__anon55::TestData	file:
stream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            std::ostream& stream;$/;"	m	class:Catch::__anon138::TapAssertionPrinter	file:
stream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon130::AssertionPrinter	file:
stream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon131::ConsoleAssertionPrinter	file:
stream	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon9::AssertionPrinter	file:
stream	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    std::ostream& stream;$/;"	m	class:Catch::__anon12::ConsoleAssertionPrinter	file:
stream	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^            std::ostream& stream;$/;"	m	class:Catch::__anon7::TapAssertionPrinter	file:
streamReconstructedExpression	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void ITransientExpression::streamReconstructedExpression($/;"	f	class:Catch::ITransientExpression
streamReconstructedExpression	leak_demo/Catch2/src/catch2/internal/catch_decomposer.cpp	/^    void ITransientExpression::streamReconstructedExpression($/;"	f	class:Catch::ITransientExpression
streamable_range	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct streamable_range {$/;"	s	namespace:__anon69	file:
string	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        auto str() const -> std::string;$/;"	m	class:Catch::RedirectedStdErr::std
string	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.hpp	/^        auto str() const -> std::string;$/;"	m	class:Catch::RedirectedStdOut::std
stringToColourMode	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Optional<ColourMode> stringToColourMode( StringRef colourMode ) {$/;"	f	namespace:Catch::Detail
stringToColourMode	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^        Optional<ColourMode> stringToColourMode( StringRef colourMode ) {$/;"	f	namespace:Catch::Detail
stringificationCalls	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^        size_t stringificationCalls() const { return m_stringificationCalls; }$/;"	f	class:__anon95::StringifyCountingGenerator
stringify	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        std::string stringify(const T& e) {$/;"	f	namespace:Catch::Detail
stringmaker_range	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^struct stringmaker_range {$/;"	s	namespace:__anon69	file:
subroutine_definetly_memory_loss	leak_demo_2.0/prog.c	/^void subroutine_definetly_memory_loss()$/;"	f
succeeded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool AssertionResult::succeeded() const {$/;"	f	class:Catch::AssertionResult
succeeded	leak_demo/Catch2/src/catch2/catch_assertion_result.cpp	/^    bool AssertionResult::succeeded() const {$/;"	f	class:Catch::AssertionResult
succeedingCase	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^        void succeedingCase() { REQUIRE( s == "hello" ); }$/;"	f	class:__anon64::TestClass
suiteTimer	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        Timer suiteTimer;$/;"	m	class:Catch::final
summary_line	leak_demo/Catch2/tests/TestScripts/testConfigureDisable.py	/^summary_line = 'No tests ran'$/;"	v
summary_test_cases	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^summary_test_cases = re.findall(r'test cases: \\d* \\| \\d* passed \\| \\d* failed', stdout)$/;"	v
swap	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        friend void swap(unique_ptr& lhs, unique_ptr& rhs) {$/;"	f	class:Catch::Detail::unique_ptr
swap	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        friend void swap(unique_ptr& lhs, unique_ptr& rhs) {$/;"	f	class:Catch::Detail::unique_ptr
synchronizing_callback	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        inline static void synchronizing_callback( void * ) { }$/;"	f	namespace:utility
sz	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^        size_t sz() const { return 12; }$/;"	f	struct:unrelated::ADL_size
t1	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^    T1 t1;$/;"	m	struct:helper_1436	file:
t2	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^    T2 t2;$/;"	m	struct:helper_1436	file:
table	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    table( std::initializer_list<std::tuple<std::decay_t<Ts>...>> tuples ) {$/;"	f	namespace:Catch::Generators
tag	leak_demo/Catch2/src/catch2/catch_tag_alias.hpp	/^        std::string tag;$/;"	m	struct:Catch::TagAlias
tagAndCollect	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def tagAndCollect(lines, id_tag=True, back_links=False, exclude_h=None):$/;"	f
tag_entry	database_binary_and_hash_search.c	/^typedef struct tag_entry {$/;"	s	file:
tags	leak_demo/Catch2/src/catch2/catch_test_case_info.hpp	/^        std::vector<Tag> tags;$/;"	m	struct:Catch::TestCaseProperties::TestCaseInfo
tags	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^        name( name_ ), tags( tags_ ) {}$/;"	f	struct:Catch::NameAndTags
tags	leak_demo/Catch2/src/catch2/internal/catch_test_registry.hpp	/^    StringRef tags;$/;"	m	struct:Catch::NameAndTags
tagsAsString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string TestCaseInfo::tagsAsString() const {$/;"	f	class:Catch::TestCaseInfo
tagsAsString	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    std::string TestCaseInfo::tagsAsString() const {$/;"	f	class:Catch::TestCaseInfo
take	leak_demo/Catch2/src/catch2/generators/catch_generators_adapters.hpp	/^    GeneratorWrapper<T> take(size_t target, GeneratorWrapper<T>&& generator) {$/;"	f	namespace:Catch::Generators
takeStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Detail::unique_ptr<IStream> ReporterConfig::takeStream() && {$/;"	f	class:Catch::ReporterConfig
takeStream	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.cpp	/^    Detail::unique_ptr<IStream> ReporterConfig::takeStream() && {$/;"	f	class:Catch::ReporterConfig
tapDimColour	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static constexpr Colour::Code tapDimColour = Colour::FileName;$/;"	m	namespace:Catch::__anon138	file:
tapDimColour	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^        static constexpr Colour::Code tapDimColour = Colour::FileName;$/;"	m	namespace:Catch::__anon7	file:
tapFailedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static constexpr StringRef tapFailedString = "not ok"_sr;$/;"	m	namespace:Catch::__anon138	file:
tapFailedString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^        static constexpr StringRef tapFailedString = "not ok"_sr;$/;"	m	namespace:Catch::__anon7	file:
tapPassedString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static constexpr StringRef tapPassedString = "ok"_sr;$/;"	m	namespace:Catch::__anon138	file:
tapPassedString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^        static constexpr StringRef tapPassedString = "ok"_sr;$/;"	m	namespace:Catch::__anon7	file:
tapTestNumParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^tapTestNumParser = re.compile(r'^((?:not ok)|(?:ok)|(?:warning)|(?:info)) (\\d+) -')$/;"	v
templated_tests	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^bool templated_tests(T t) {$/;"	f
test	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    def test(self):$/;"	m	class:TestPackageConan
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void AutomakeReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::AutomakeReporter
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void CumulativeReporterBase::testCaseEnded($/;"	f	class:Catch::CumulativeReporterBase
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::testCaseEnded( TestCaseStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::testCaseEnded( TestCaseStats const& tcStats ) {$/;"	f	class:Catch::JsonReporter
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::JunitReporter
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::MultiReporter
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TeamCityReporter::testCaseEnded(TestCaseStats const& testCaseStats) {$/;"	f	class:Catch::TeamCityReporter
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::XmlReporter
testCaseEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::ConsoleReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_automake.cpp	/^    void AutomakeReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::AutomakeReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testCaseEnded(TestCaseStats const& _testCaseStats) {$/;"	f	class:Catch::ConsoleReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::testCaseEnded($/;"	f	class:Catch::CumulativeReporterBase
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::testCaseEnded( TestCaseStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::testCaseEnded( TestCaseStats const& tcStats ) {$/;"	f	class:Catch::JsonReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::JunitReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::MultiReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testCaseEnded(TestCaseStats const& testCaseStats) {$/;"	f	class:Catch::TeamCityReporter
testCaseEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testCaseEnded( TestCaseStats const& testCaseStats ) {$/;"	f	class:Catch::XmlReporter
testCasePartialEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::testCasePartialEnded(TestCaseStats const&, uint64_t) {}$/;"	f	class:Catch::EventListenerBase
testCasePartialEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::testCasePartialEnded( TestCaseStats const& tcStats,$/;"	f	class:Catch::JsonReporter
testCasePartialEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::testCasePartialEnded( TestCaseStats const& testStats,$/;"	f	class:Catch::MultiReporter
testCasePartialEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::testCasePartialEnded(TestCaseStats const&, uint64_t) {}$/;"	f	class:Catch::EventListenerBase
testCasePartialEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::testCasePartialEnded( TestCaseStats const& tcStats,$/;"	f	class:Catch::JsonReporter
testCasePartialEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::testCasePartialEnded( TestCaseStats const& testStats,$/;"	f	class:Catch::MultiReporter
testCasePartialStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    MultiReporter::testCasePartialStarting( TestCaseInfo const& testInfo,$/;"	f	class:Catch::MultiReporter
testCasePartialStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::testCasePartialStarting(TestCaseInfo const&, uint64_t) {}$/;"	f	class:Catch::EventListenerBase
testCasePartialStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::testCasePartialStarting( TestCaseInfo const& \/*tcInfo*\/,$/;"	f	class:Catch::JsonReporter
testCasePartialStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::testCasePartialStarting(TestCaseInfo const&, uint64_t) {}$/;"	f	class:Catch::EventListenerBase
testCasePartialStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::testCasePartialStarting( TestCaseInfo const& \/*tcInfo*\/,$/;"	f	class:Catch::JsonReporter
testCasePartialStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    MultiReporter::testCasePartialStarting( TestCaseInfo const& testInfo,$/;"	f	class:Catch::MultiReporter
testCaseStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::testCaseStarting( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::testCaseStarting( TestCaseInfo const& tcInfo ) {$/;"	f	class:Catch::JsonReporter
testCaseStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::testCaseStarting( TestCaseInfo const& testCaseInfo ) {$/;"	f	class:Catch::JunitReporter
testCaseStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::MultiReporter
testCaseStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TeamCityReporter::testCaseStarting(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::TeamCityReporter
testCaseStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
testCaseStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::testCaseStarting( TestCaseInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testCaseStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::testCaseStarting( TestCaseInfo const& tcInfo ) {$/;"	f	class:Catch::JsonReporter
testCaseStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testCaseStarting( TestCaseInfo const& testCaseInfo ) {$/;"	f	class:Catch::JunitReporter
testCaseStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::MultiReporter
testCaseStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testCaseStarting(TestCaseInfo const& testInfo) {$/;"	f	class:Catch::TeamCityReporter
testCaseStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testCaseStarting( TestCaseInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
testCases	leak_demo/Catch2/src/catch2/catch_totals.hpp	/^        Counts testCases;$/;"	m	struct:Catch::Totals
testCheckedElse	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static bool testCheckedElse(bool flag) {$/;"	f	namespace:__anon62
testCheckedIf	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^    static bool testCheckedIf(bool flag) {$/;"	f	namespace:__anon62
testForMissingAssertions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool RunContext::testForMissingAssertions(Counts& assertions) {$/;"	f	class:Catch::RunContext
testForMissingAssertions	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    bool RunContext::testForMissingAssertions(Counts& assertions) {$/;"	f	class:Catch::RunContext
testInfo	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        TestCaseInfo const * testInfo;$/;"	m	struct:Catch::TestCaseStats
testMethod_uponComplete_arg	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        signal_t testMethod_uponComplete_arg = nullptr;$/;"	m	struct:TestClass	file:
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void CompactReporter::testRunEnded( TestRunStats const& _testRunStats ) {$/;"	f	class:Catch::CompactReporter
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void CumulativeReporterBase::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::CumulativeReporterBase
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::testRunEnded( TestRunStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::testRunEnded(TestRunStats const& runStats) {$/;"	f	class:Catch::JsonReporter
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::MultiReporter
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void StreamingReporterBase::testRunEnded( TestRunStats const& ) {$/;"	f	class:Catch::StreamingReporterBase
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TAPReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::TAPReporter
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TeamCityReporter::testRunEnded( TestRunStats const& runStats ) {$/;"	f	class:Catch::TeamCityReporter
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::XmlReporter
testRunEnded	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::ConsoleReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::testRunEnded( TestRunStats const& _testRunStats ) {$/;"	f	class:Catch::CompactReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::ConsoleReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_cumulative_base.cpp	/^    void CumulativeReporterBase::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::CumulativeReporterBase
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::testRunEnded( TestRunStats const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::testRunEnded(TestRunStats const& runStats) {$/;"	f	class:Catch::JsonReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::MultiReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.cpp	/^    void StreamingReporterBase::testRunEnded( TestRunStats const& ) {$/;"	f	class:Catch::StreamingReporterBase
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^    void TAPReporter::testRunEnded(TestRunStats const& _testRunStats) {$/;"	f	class:Catch::TAPReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testRunEnded( TestRunStats const& runStats ) {$/;"	f	class:Catch::TeamCityReporter
testRunEnded	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testRunEnded( TestRunStats const& testRunStats ) {$/;"	f	class:Catch::XmlReporter
testRunEndedCumulative	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::testRunEndedCumulative() {$/;"	f	class:Catch::JunitReporter
testRunEndedCumulative	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testRunEndedCumulative() {$/;"	f	class:Catch::JunitReporter
testRunEndedCumulative	leak_demo/Catch2/tests/ExtraTests/X22-BenchmarksInCumulativeReporter.cpp	/^void CumulativeBenchmarkReporter::testRunEndedCumulative() {$/;"	f	class:CumulativeBenchmarkReporter
testRunEndedReceivedByListener	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^    static bool testRunEndedReceivedByListener = false;$/;"	m	namespace:__anon46	file:
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void CompactReporter::testRunStarting( TestRunInfo const& ) {$/;"	f	class:Catch::CompactReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StreamingReporterBase::testRunStarting( TestRunInfo const& _testRunInfo ) {$/;"	f	class:Catch::StreamingReporterBase
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void EventListenerBase::testRunStarting( TestRunInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonReporter::testRunStarting( TestRunInfo const& runInfo ) {$/;"	f	class:Catch::JsonReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::testRunStarting( TestRunInfo const& runInfo )  {$/;"	f	class:Catch::JunitReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::testRunStarting( TestRunInfo const& testRunInfo ) {$/;"	f	class:Catch::MultiReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::testRunStarting(TestRunInfo const& testRunInfo) {$/;"	f	class:Catch::SonarQubeReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TAPReporter::testRunStarting( TestRunInfo const& ) {$/;"	f	class:Catch::TAPReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void TeamCityReporter::testRunStarting( TestRunInfo const& runInfo ) {$/;"	f	class:Catch::TeamCityReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::testRunStarting( TestRunInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
testRunStarting	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void ConsoleReporter::testRunStarting(TestRunInfo const& _testRunInfo) {$/;"	f	class:Catch::ConsoleReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_compact.cpp	/^        void CompactReporter::testRunStarting( TestRunInfo const& ) {$/;"	f	class:Catch::CompactReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^void ConsoleReporter::testRunStarting(TestRunInfo const& _testRunInfo) {$/;"	f	class:Catch::ConsoleReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_event_listener.cpp	/^    void EventListenerBase::testRunStarting( TestRunInfo const& ) {}$/;"	f	class:Catch::EventListenerBase
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    void JsonReporter::testRunStarting( TestRunInfo const& runInfo ) {$/;"	f	class:Catch::JsonReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::testRunStarting( TestRunInfo const& runInfo )  {$/;"	f	class:Catch::JunitReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::testRunStarting( TestRunInfo const& testRunInfo ) {$/;"	f	class:Catch::MultiReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::testRunStarting(TestRunInfo const& testRunInfo) {$/;"	f	class:Catch::SonarQubeReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_streaming_base.cpp	/^    StreamingReporterBase::testRunStarting( TestRunInfo const& _testRunInfo ) {$/;"	f	class:Catch::StreamingReporterBase
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_tap.cpp	/^    void TAPReporter::testRunStarting( TestRunInfo const& ) {$/;"	f	class:Catch::TAPReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_teamcity.cpp	/^    void TeamCityReporter::testRunStarting( TestRunInfo const& runInfo ) {$/;"	f	class:Catch::TeamCityReporter
testRunStarting	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::testRunStarting( TestRunInfo const& testInfo ) {$/;"	f	class:Catch::XmlReporter
testRunStartingReceivedByListener	leak_demo/Catch2/tests/ExtraTests/X28-ListenersGetEventsBeforeReporters.cpp	/^    static bool testRunStartingReceivedByListener = false;$/;"	m	namespace:__anon46	file:
testSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpec TestSpecParser::testSpec() {$/;"	f	class:Catch::TestSpecParser
testSpec	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TestSpec const& Config::testSpec() const { return m_testSpec; }$/;"	f	class:Catch::Config
testSpec	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    TestSpec const& Config::testSpec() const { return m_testSpec; }$/;"	f	class:Catch::Config
testSpec	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    TestSpec TestSpecParser::testSpec() {$/;"	f	class:Catch::TestSpecParser
testStringForMatching	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static const char* testStringForMatching() {$/;"	f	namespace:__anon75
testStringForMatching2	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    static const char* testStringForMatching2() {$/;"	f	namespace:__anon75
test_count	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^    size_t test_count = 0;$/;"	m	namespace:__anon66	file:
test_generator	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^        [[noreturn]] explicit test_generator() {$/;"	f	class:__anon67::test_generator
test_generator	leak_demo/Catch2/tests/SelfTest/UsageTests/Generators.tests.cpp	/^    class test_generator : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon67	file:
test_passing	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        test_passing = False$/;"	v
test_passing	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^test_passing = True$/;"	v
test_sharded_execution	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^def test_sharded_execution(self_test_exe: str, listings: Dict[int, List[str]]):$/;"	f
test_sharded_listing	leak_demo/Catch2/tests/TestScripts/testSharding.py	/^def test_sharded_listing(self_test_exe: str) -> Dict[int, List[str]]:$/;"	f
test_skip_generator	leak_demo/Catch2/tests/SelfTest/UsageTests/Skip.tests.cpp	/^        explicit test_skip_generator() { SKIP( "This generator is empty" ); }$/;"	f	class:__anon56::test_skip_generator
test_skip_generator	leak_demo/Catch2/tests/SelfTest/UsageTests/Skip.tests.cpp	/^    class test_skip_generator : public Catch::Generators::IGenerator<int> {$/;"	c	namespace:__anon56	file:
test_type	leak_demo/Catch2/.conan/test_package/conanfile.py	/^    test_type = "explicit"$/;"	v	class:TestPackageConan
tests	leak_demo/Catch2/src/catch2/catch_test_spec.hpp	/^            std::vector<TestCaseHandle const*> tests;$/;"	m	struct:Catch::TestSpec::FilterMatch
testsOrTags	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        std::vector<std::string> testsOrTags;$/;"	m	struct:Catch::ConfigData
thisDoesntThrow	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^    int thisDoesntThrow() {$/;"	f	namespace:__anon71
thisThrows	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^    int thisThrows() {$/;"	f	namespace:__anon71
this_doesnt_throw	leak_demo/Catch2/tests/ExtraTests/X01-PrefixedMacros.cpp	/^    void this_doesnt_throw() {}$/;"	f	namespace:__anon39
this_throws	leak_demo/Catch2/tests/ExtraTests/X01-PrefixedMacros.cpp	/^    void this_throws() {$/;"	f	namespace:__anon39
throwCustom	leak_demo/Catch2/tests/SelfTest/UsageTests/Exception.tests.cpp	/^    [[noreturn]] void throwCustom() {$/;"	f	namespace:__anon71
throw_and_catch	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^void throw_and_catch()$/;"	f
throw_domain_error	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_domain_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_domain_error	leak_demo/Catch2/src/catch2/internal/catch_enforce.cpp	/^    void throw_domain_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_exception	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch
throw_exception	leak_demo/Catch2/src/catch2/internal/catch_enforce.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch
throw_exception	leak_demo/Catch2/src/catch2/internal/catch_enforce.hpp	/^    void throw_exception(Ex const& e) {$/;"	f	namespace:Catch
throw_exception	leak_demo/Catch2/tests/ExtraTests/X04-DisabledExceptions-CustomHandler.cpp	/^    void throw_exception(std::exception const& e) {$/;"	f	namespace:Catch
throw_generator_exception	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_generator_exception(char const* msg) {$/;"	f	namespace:Catch::Generators::Detail
throw_generator_exception	leak_demo/Catch2/src/catch2/generators/catch_generators.cpp	/^    void throw_generator_exception(char const* msg) {$/;"	f	namespace:Catch::Generators::Detail
throw_logic_error	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_logic_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_logic_error	leak_demo/Catch2/src/catch2/internal/catch_enforce.cpp	/^    void throw_logic_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_no_catch	leak_demo/Catch2/tests/SelfTest/UsageTests/Misc.tests.cpp	/^void throw_no_catch()$/;"	f
throw_optimized_away_error	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            void throw_optimized_away_error() {$/;"	f	namespace:Catch::Benchmark::Detail
throw_optimized_away_error	leak_demo/Catch2/src/catch2/benchmark/detail/catch_run_for_at_least.cpp	/^            void throw_optimized_away_error() {$/;"	f	namespace:Catch::Benchmark::Detail
throw_runtime_error	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_runtime_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_runtime_error	leak_demo/Catch2/src/catch2/internal/catch_enforce.cpp	/^    void throw_runtime_error(std::string const& msg) {$/;"	f	namespace:Catch
throw_test_failure_exception	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_test_failure_exception() {$/;"	f	namespace:Catch
throw_test_failure_exception	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.cpp	/^    void throw_test_failure_exception() {$/;"	f	namespace:Catch
throw_test_skip_exception	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void throw_test_skip_exception() {$/;"	f	namespace:Catch
throw_test_skip_exception	leak_demo/Catch2/src/catch2/internal/catch_test_failure_exception.cpp	/^    void throw_test_skip_exception() {$/;"	f	namespace:Catch
throws	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestCaseInfo::throws() const {$/;"	f	class:Catch::TestCaseInfo
throws	leak_demo/Catch2/src/catch2/catch_test_case_info.cpp	/^    bool TestCaseInfo::throws() const {$/;"	f	class:Catch::TestCaseInfo
throwsAsInt	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    [[noreturn]] static void throwsAsInt( int i ) { throw i; }$/;"	f	namespace:__anon75
throwsDerivedException	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    [[noreturn]] static void throwsDerivedException() {$/;"	f	namespace:__anon75
throwsSpecialException	leak_demo/Catch2/tests/SelfTest/UsageTests/Matchers.tests.cpp	/^    [[noreturn]] static void throwsSpecialException( int i ) {$/;"	f	namespace:__anon75
throws_int	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^static void throws_int(bool b) {$/;"	f	file:
tick	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/InternalBenchmark.tests.cpp	/^        static rep& tick() {$/;"	f	struct:__anon83::manual_clock	file:
timestampsParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^timestampsParser = re.compile(r'\\d{4}-\\d{2}-\\d{2}T\\d{2}\\:\\d{2}\\:\\d{2}Z')$/;"	v
toLower	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    char toLower(char c) {$/;"	f	namespace:Catch
toLower	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string toLower( std::string const& s ) {$/;"	f	namespace:Catch
toLower	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    char toLower(char c) {$/;"	f	namespace:Catch
toLower	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    std::string toLower( std::string const& s ) {$/;"	f	namespace:Catch
toLowerInPlace	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void toLowerInPlace( std::string& s ) {$/;"	f	namespace:Catch
toLowerInPlace	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    void toLowerInPlace( std::string& s ) {$/;"	f	namespace:Catch
toString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string Approx::toString() const {$/;"	f	class:Catch::Approx
toString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string MatcherUntypedBase::toString() const {$/;"	f	class:Catch::Matchers::MatcherUntypedBase
toString	leak_demo/Catch2/src/catch2/catch_approx.cpp	/^    std::string Approx::toString() const {$/;"	f	class:Catch::Approx
toString	leak_demo/Catch2/src/catch2/matchers/catch_matchers.cpp	/^    std::string MatcherUntypedBase::toString() const {$/;"	f	class:Catch::Matchers::MatcherUntypedBase
to_string	leak_demo/Catch2/src/catch2/internal/catch_to_string.hpp	/^    std::string to_string(T const& t) {$/;"	f	namespace:Catch
token	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                StringRef token;$/;"	m	struct:Catch::Clara::Detail::Token
token	leak_demo/Catch2/third_party/clara.hpp	/^        std::string token;$/;"	m	struct:clara::detail::Token
topLevelExceptionFilter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    static LONG CALLBACK topLevelExceptionFilter(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	namespace:Catch
topLevelExceptionFilter	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    static LONG CALLBACK topLevelExceptionFilter(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	namespace:Catch
topics	leak_demo/Catch2/conanfile.py	/^    topics = ("conan", "catch2", "unit-test", "tdd", "bdd")$/;"	v	class:CatchConan
total	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::uint64_t Counts::total() const {$/;"	f	class:Catch::Counts
total	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            int total() const {$/;"	f	struct:Catch::Benchmark::OutlierClassification
total	leak_demo/Catch2/src/catch2/benchmark/catch_outlier_classification.hpp	/^            int total() const {$/;"	f	struct:Catch::Benchmark::OutlierClassification
total	leak_demo/Catch2/src/catch2/catch_totals.cpp	/^    std::uint64_t Counts::total() const {$/;"	f	class:Catch::Counts
totals	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::AssertionStats
totals	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestCaseStats
totals	leak_demo/Catch2/src/catch2/interfaces/catch_interfaces_reporter.hpp	/^        Totals totals;$/;"	m	struct:Catch::TestRunStats
trailingBytes	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    size_t trailingBytes(unsigned char c) {$/;"	f	namespace:Catch::__anon128
trailingBytes	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    size_t trailingBytes(unsigned char c) {$/;"	f	namespace:Catch::__anon23
trailing_whitespace	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const trailing_whitespace = "There is no extra whitespace here \\t \\n \\r ";$/;"	v	file:
translateActiveException	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
translateActiveException	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string translateActiveException() {$/;"	f	namespace:Catch
translateActiveException	leak_demo/Catch2/src/catch2/catch_registry_hub.cpp	/^    std::string translateActiveException() {$/;"	f	namespace:Catch
translateActiveException	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.cpp	/^    std::string ExceptionTranslatorRegistry::translateActiveException() const {$/;"	f	class:Catch::ExceptionTranslatorRegistry
transposeBack	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    static IntegerType transposeBack(UnsignedIntegerType in) {$/;"	f	class:Catch::uniform_integer_distribution
transposeTo	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    static UnsignedIntegerType transposeTo(IntegerType in) {$/;"	f	class:Catch::uniform_integer_distribution
tree	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^    tree = ET.parse(xml_out_path)$/;"	v
trim	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef trim(StringRef ref) {$/;"	f	namespace:Catch
trim	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::string trim( std::string const& str ) {$/;"	f	namespace:Catch
trim	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    StringRef trim(StringRef ref) {$/;"	f	namespace:Catch
trim	leak_demo/Catch2/src/catch2/internal/catch_string_manip.cpp	/^    std::string trim( std::string const& str ) {$/;"	f	namespace:Catch
trimmedName	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef SectionTracker::trimmedName() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
trimmedName	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    StringRef SectionTracker::trimmedName() const {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
true_given	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    struct true_given : std::true_type {};$/;"	s	namespace:Catch
true_given	leak_demo/Catch2/src/catch2/internal/catch_meta.hpp	/^    struct true_given : std::true_type {};$/;"	s	namespace:Catch
truthy	leak_demo/Catch2/tests/SelfTest/UsageTests/Decomposition.tests.cpp	/^    truthy(bool b):m_value(b){}$/;"	f	struct:__anon63::truthy
truthy	leak_demo/Catch2/tests/SelfTest/UsageTests/Decomposition.tests.cpp	/^struct truthy {$/;"	s	namespace:__anon63	file:
tryOpen	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SectionTracker::tryOpen() {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
tryOpen	leak_demo/Catch2/src/catch2/internal/catch_test_case_tracker.cpp	/^    void SectionTracker::tryOpen() {$/;"	f	class:Catch::TestCaseTracking::SectionTracker
tryTranslators	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static std::string tryTranslators($/;"	f	namespace:Catch::__anon117
tryTranslators	leak_demo/Catch2/src/catch2/internal/catch_exception_translator_registry.cpp	/^        static std::string tryTranslators($/;"	f	namespace:Catch::__anon34
type	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^            struct CompleteType<void> { struct type {}; };$/;"	s	struct:Catch::Benchmark::Detail::CompleteType
type	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                ParseResultType type() const { return m_type; }$/;"	f	class:Catch::Clara::Detail::ParseState
type	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                TokenType type;$/;"	m	struct:Catch::Clara::Detail::Token
type	leak_demo/Catch2/src/catch2/internal/catch_message_info.hpp	/^        ResultWas::OfType type;$/;"	m	struct:Catch::MessageInfo
type	leak_demo/Catch2/third_party/clara.hpp	/^        TokenType type;$/;"	m	struct:clara::detail::Token
uint64_t	leak_demo/Catch2/src/catch2/catch_timer.hpp	/^        auto getElapsedMicroseconds() const -> uint64_t;$/;"	m	class:Catch::Timer
uint64_t	leak_demo/Catch2/src/catch2/catch_timer.hpp	/^        auto getElapsedNanoseconds() const -> uint64_t;$/;"	m	class:Catch::Timer
ulpDistance	leak_demo/Catch2/src/catch2/internal/catch_floating_point_helpers.hpp	/^    uint64_t ulpDistance( FP lhs, FP rhs ) {$/;"	f	namespace:Catch
uncaught_exceptions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool uncaught_exceptions() {$/;"	f	namespace:Catch
uncaught_exceptions	leak_demo/Catch2/src/catch2/internal/catch_uncaught_exceptions.cpp	/^    bool uncaught_exceptions() {$/;"	f	namespace:Catch
unexpectedExceptions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        unsigned int unexpectedExceptions = 0;$/;"	m	class:Catch::final
uniform_floating_point_distribution	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^    uniform_floating_point_distribution( FloatType a, FloatType b ):$/;"	f	class:Catch::uniform_floating_point_distribution
uniform_floating_point_distribution	leak_demo/Catch2/src/catch2/internal/catch_uniform_floating_point_distribution.hpp	/^class uniform_floating_point_distribution {$/;"	c	namespace:Catch
uniform_integer_distribution	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^    uniform_integer_distribution( IntegerType a, IntegerType b ):$/;"	f	class:Catch::uniform_integer_distribution
uniform_integer_distribution	leak_demo/Catch2/src/catch2/internal/catch_uniform_integer_distribution.hpp	/^class uniform_integer_distribution {$/;"	c	namespace:Catch
uniqueID	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^    static int uniqueID;$/;"	m	class:UniqueTestsFixture	file:
uniqueID	leak_demo/Catch2/examples/110-Fix-ClassFixture.cpp	/^int UniqueTestsFixture::uniqueID = 0;$/;"	m	class:UniqueTestsFixture	file:
unique_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        constexpr unique_ptr(std::nullptr_t = nullptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        explicit constexpr unique_ptr(T* ptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        unique_ptr(unique_ptr<U>&& from):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^    class unique_ptr {$/;"	c	namespace:Catch::Detail
unique_ptr	leak_demo/Catch2/src/catch2/internal/catch_istream.hpp	/^    auto makeStream( std::string const& filename ) -> Detail::unique_ptr<IStream>;$/;"	m	class:Catch::Detail
unique_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        constexpr unique_ptr(std::nullptr_t = nullptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        explicit constexpr unique_ptr(T* ptr):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        unique_ptr(unique_ptr<U>&& from):$/;"	f	class:Catch::Detail::unique_ptr
unique_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^    class unique_ptr {$/;"	c	namespace:Catch::Detail
unique_ptr_test_helper	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^    struct unique_ptr_test_helper {$/;"	s	namespace:__anon77	file:
unitsAsString	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    StringRef unitsAsString() const {$/;"	f	class:Catch::__anon131::Duration
unitsAsString	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    StringRef unitsAsString() const {$/;"	f	class:Catch::__anon12::Duration
universal_newlines	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^        universal_newlines=True,$/;"	v
universal_newlines	leak_demo/Catch2/tests/TestScripts/testBazelSharding.py	/^        universal_newlines=True,$/;"	v
unprintableString	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^        constexpr StringRef unprintableString = "{?}"_sr;$/;"	m	namespace:Catch::Detail
unrelated	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/UniquePtr.tests.cpp	/^    struct unrelated {};$/;"	s	namespace:__anon78	file:
unrelated	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^namespace unrelated {$/;"	n
unscoped_info	leak_demo/Catch2/tests/SelfTest/UsageTests/Message.tests.cpp	/^static void unscoped_info( T msg ) {$/;"	f	file:
updateCmakeFile	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^def updateCmakeFile(version):$/;"	f
updateDocumentToC	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def updateDocumentToC(paths, min_toc_len, verbose):$/;"	f
updateDocumentToCMain	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def updateDocumentToCMain():$/;"	f
updateDocumentationVersionPlaceholders	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^def updateDocumentationVersionPlaceholders(version):$/;"	f
updateMesonFile	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^def updateMesonFile(version):$/;"	f
updatePreferences	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void MultiReporter::updatePreferences(IEventListener const& reporterish) {$/;"	f	class:Catch::MultiReporter
updatePreferences	leak_demo/Catch2/src/catch2/reporters/catch_reporter_multi.cpp	/^    void MultiReporter::updatePreferences(IEventListener const& reporterish) {$/;"	f	class:Catch::MultiReporter
updateSingleDocumentToC	leak_demo/Catch2/tools/scripts/updateDocumentToC.py	/^def updateSingleDocumentToC(input_file, min_toc_len, verbose=False):$/;"	f
updateVersionDefine	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^def updateVersionDefine(version):$/;"	f
updateVersionFile	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^    def updateVersionFile(self):$/;"	m	class:Version
updateVersionPlaceholder	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^def updateVersionPlaceholder(filename, version):$/;"	f
upload	leak_demo/Catch2/.conan/build.py	/^    def upload(self):$/;"	m	class:BuilderSettings
upload_only_when_stable	leak_demo/Catch2/.conan/build.py	/^    def upload_only_when_stable(self):$/;"	m	class:BuilderSettings
upper	leak_demo/Catch2/src/catch2/internal/catch_random_integer_helpers.hpp	/^            T upper;$/;"	m	struct:Catch::Detail::ExtendedMultResult
upper_bound	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^            Type upper_bound;$/;"	m	struct:Catch::Benchmark::Estimate
upper_bound	leak_demo/Catch2/src/catch2/benchmark/catch_estimate.hpp	/^            Type upper_bound;$/;"	m	struct:Catch::Benchmark::Estimate
url	leak_demo/Catch2/conanfile.py	/^    url = "https:\/\/github.com\/catchorg\/Catch2"$/;"	v	class:CatchConan
useConfigData	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void Session::useConfigData( ConfigData const& configData ) {$/;"	f	class:Catch::Session
useConfigData	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    void Session::useConfigData( ConfigData const& configData ) {$/;"	f	class:Catch::Session
useImplementationForStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static bool useImplementationForStream(IStream const& stream) {$/;"	f	class:Catch::__anon114::final
useImplementationForStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        static bool useImplementationForStream(IStream const& stream) {$/;"	f	class:Catch::__anon115::final
useImplementationForStream	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        static bool useImplementationForStream(IStream const& stream) {$/;"	f	class:Catch::__anon32::final
useImplementationForStream	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^        static bool useImplementationForStream(IStream const& stream) {$/;"	f	class:Catch::__anon33::final
user_code	leak_demo/Catch2/src/catch2/benchmark/detail/catch_complete_invoke.hpp	/^        Detail::CompleteType_t<FunctionReturnType<Fun>> user_code(Fun&& fun) {$/;"	f	namespace:Catch::Benchmark
username	leak_demo/Catch2/.conan/build.py	/^    def username(self):$/;"	m	class:BuilderSettings
utility	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^    namespace utility {$/;"	n	file:
v	leak_demo/Catch2/tests/SelfTest/UsageTests/MatchersRanges.tests.cpp	/^        bool v;$/;"	m	struct:__anon51::ConvertibleToBool	file:
v	leak_demo/Catch2/tools/scripts/developBuild.py	/^v = releaseCommon.Version()$/;"	v
v	leak_demo/Catch2/tools/scripts/majorRelease.py	/^v = releaseCommon.Version()$/;"	v
v	leak_demo/Catch2/tools/scripts/minorRelease.py	/^v = releaseCommon.Version()$/;"	v
v	leak_demo/Catch2/tools/scripts/patchRelease.py	/^v = releaseCommon.Version()$/;"	v
val	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    int val = 5;$/;"	m	struct:__anon69::int_iterator	file:
val	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    int val;$/;"	m	struct:Opaque	file:
validate	leak_demo/Catch2/conanfile.py	/^    def validate(self):$/;"	m	class:CatchConan
validate	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Detail::Result Opt::validate() const {$/;"	f	class:Catch::Clara::Opt
validate	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        Detail::Result Parser::validate() const {$/;"	f	class:Catch::Clara::Parser
validate	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Detail::Result Opt::validate() const {$/;"	f	class:Catch::Clara::Opt
validate	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        Detail::Result Parser::validate() const {$/;"	f	class:Catch::Clara::Parser
value	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            StringRef key, value;$/;"	m	struct:Catch::__anon122::kvPair	file:
value	leak_demo/Catch2/src/catch2/catch_tostring.hpp	/^            static const bool value = decltype(test<std::ostream, const T&>(0))::value;$/;"	m	class:Catch::Detail::IsStreamInsertable
value	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    GeneratorWrapper<DecayedT> value( T&& value ) {$/;"	f	namespace:Catch::Generators
value	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                T const& value() const& {$/;"	f	class:Catch::Clara::Detail::ResultValueBase
value	leak_demo/Catch2/src/catch2/internal/catch_clara.hpp	/^                T&& value() && {$/;"	f	class:Catch::Clara::Detail::ResultValueBase
value	leak_demo/Catch2/src/catch2/internal/catch_reporter_spec_parser.cpp	/^            StringRef key, value;$/;"	m	struct:Catch::__anon27::kvPair	file:
value	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/GeneratorsImpl.tests.cpp	/^    int value = -1;$/;"	m	struct:__anon92::non_copyable	file:
value	leak_demo/Catch2/tests/SelfTest/UsageTests/Class.tests.cpp	/^    template <int V> struct Nttp_Fixture { int value = V; };$/;"	m	struct:__anon64::Nttp_Fixture	file:
value	leak_demo/Catch2/tests/SelfTest/UsageTests/Compilation.tests.cpp	/^        int value;$/;"	m	struct:__anon57::HasBitOperators	file:
value	leak_demo/Catch2/tests/SelfTest/UsageTests/ToStringWhich.tests.cpp	/^    static const bool value = false;$/;"	m	struct:Catch::is_range	file:
value	leak_demo/Catch2/tests/SelfTest/UsageTests/Tricky.tests.cpp	/^    static const bool value = B;$/;"	m	struct:is_true	file:
valueOr	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        T valueOr( T const& defaultValue ) const {$/;"	f	class:Catch::Optional
values	leak_demo/Catch2/src/catch2/generators/catch_generators.hpp	/^    GeneratorWrapper<T> values(std::initializer_list<T> values) {$/;"	f	namespace:Catch::Generators
verbosity	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Verbosity Config::verbosity() const                { return m_data.verbosity; }$/;"	f	class:Catch::Config
verbosity	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    Verbosity Config::verbosity() const                { return m_data.verbosity; }$/;"	f	class:Catch::Config
verbosity	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        Verbosity verbosity = Verbosity::Normal;$/;"	m	struct:Catch::ConfigData
verify_convenience_header	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def verify_convenience_header(folder):$/;"	f
version	leak_demo/Catch2/conanfile.py	/^    version = "latest"$/;"	v	class:CatchConan
versionParser	leak_demo/Catch2/tools/scripts/approvalTests.py	/^versionParser = re.compile(r'[0-9]+\\.[0-9]+\\.[0-9]+(-\\w*\\.[0-9]+)?')$/;"	v
versionParser	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^versionParser = re.compile( r'(\\s*static\\sVersion\\sversion)\\s*\\(\\s*(.*)\\s*,\\s*(.*)\\s*,\\s*(.*)\\s*,\\s*\\"(.*)\\"\\s*,\\s*(.*)\\s*\\).*' )$/;"	v
versionPath	leak_demo/Catch2/tools/scripts/releaseCommon.py	/^versionPath = os.path.join( rootPath, "catch_version.cpp" )$/;"	v
visitChar	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool TestSpecParser::visitChar( char c ) {$/;"	f	class:Catch::TestSpecParser
visitChar	leak_demo/Catch2/src/catch2/internal/catch_test_spec_parser.cpp	/^    bool TestSpecParser::visitChar( char c ) {$/;"	f	class:Catch::TestSpecParser
volatile	leak_demo/build/CMakeFiles/3.29.0/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
waitForKeypress	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        WaitForKeypress::When waitForKeypress = WaitForKeypress::Never;$/;"	m	struct:Catch::ConfigData
walk_source_folders	leak_demo/Catch2/tools/scripts/checkConvenienceHeaders.py	/^def walk_source_folders(current):$/;"	f
warmup	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            int warmup() {$/;"	f	namespace:Catch::Benchmark::Detail
warmup_iterations	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^            int warmup_iterations;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
warmup_iterations	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto warmup_iterations = 10000;$/;"	m	namespace:Catch::Benchmark::Detail
warmup_seed	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto warmup_seed = 10000;$/;"	m	namespace:Catch::Benchmark::Detail
warmup_time	leak_demo/Catch2/src/catch2/benchmark/catch_execution_plan.hpp	/^            FDuration warmup_time;$/;"	m	struct:Catch::Benchmark::ExecutionPlan
warmup_time	leak_demo/Catch2/src/catch2/benchmark/detail/catch_estimate_clock.hpp	/^            constexpr auto warmup_time = std::chrono::milliseconds(100);$/;"	m	namespace:Catch::Benchmark::Detail
warnAboutMissingAssertions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::warnAboutMissingAssertions() const {$/;"	f	class:Catch::Config
warnAboutMissingAssertions	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::warnAboutMissingAssertions() const {$/;"	f	class:Catch::Config
warnAboutUnmatchedTestSpecs	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::warnAboutUnmatchedTestSpecs() const {$/;"	f	class:Catch::Config
warnAboutUnmatchedTestSpecs	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::warnAboutUnmatchedTestSpecs() const {$/;"	f	class:Catch::Config
warnings	leak_demo/Catch2/src/catch2/catch_config.hpp	/^        WarnAbout::What warnings = WarnAbout::Nothing;$/;"	m	struct:Catch::ConfigData
weighted_average_quantile	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            double weighted_average_quantile( int k,$/;"	f	namespace:Catch::Benchmark::Detail
weighted_average_quantile	leak_demo/Catch2/src/catch2/benchmark/detail/catch_stats.cpp	/^            double weighted_average_quantile( int k,$/;"	f	namespace:Catch::Benchmark::Detail
which	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^            static Arch which() {$/;"	f	struct:Catch::Detail::__anon111::Endianness
which	leak_demo/Catch2/src/catch2/catch_tostring.cpp	/^            static Arch which() {$/;"	f	struct:Catch::Detail::__anon16::Endianness
whitespace_at_both_ends	leak_demo/Catch2/tests/SelfTest/IntrospectiveTests/StringManip.tests.cpp	/^static const char * const whitespace_at_both_ends = " \\r\\n \\t There is no extra whitespace here  \\t\\t\\t \\n";$/;"	v	file:
width	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    std::size_t width;$/;"	m	struct:Catch::ColumnInfo	file:
width	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            Column& width( size_t newWidth ) & {$/;"	f	class:Catch::TextFlow::Column
width	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            Column&& width( size_t newWidth ) && {$/;"	f	class:Catch::TextFlow::Column
width	leak_demo/Catch2/src/catch2/internal/catch_textflow.hpp	/^            size_t width() const { return m_width; }$/;"	f	class:Catch::TextFlow::Column
width	leak_demo/Catch2/src/catch2/reporters/catch_reporter_console.cpp	/^    std::size_t width;$/;"	m	struct:Catch::ColumnInfo	file:
windowsify_path	leak_demo/Catch2/tools/misc/coverage-helper.cpp	/^std::string windowsify_path(std::string path) {$/;"	f
with_mocked_iterator_access	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^    with_mocked_iterator_access( std::initializer_list<T> init ):$/;"	f	struct:with_mocked_iterator_access
with_mocked_iterator_access	leak_demo/Catch2/tests/SelfTest/helpers/range_test_helpers.hpp	/^struct with_mocked_iterator_access {$/;"	s
wmain	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^extern "C" int __cdecl wmain (int argc, wchar_t * argv[], wchar_t * []) {$/;"	f
wmain	leak_demo/Catch2/src/catch2/internal/catch_main.cpp	/^extern "C" int __cdecl wmain (int argc, wchar_t * argv[], wchar_t * []) {$/;"	f
write	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter& JsonArrayWriter::write( bool value ) {$/;"	f	class:Catch::JsonArrayWriter
write	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonValueWriter JsonObjectWriter::write( StringRef key ) {$/;"	f	class:Catch::JsonObjectWriter
write	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonValueWriter::write( Catch::StringRef value ) && {$/;"	f	class:Catch::JsonValueWriter
write	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonValueWriter::write( bool value ) && {$/;"	f	class:Catch::JsonValueWriter
write	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^void write(std::ostream& out, FloatingPoint num) {$/;"	f	namespace:Catch::__anon129
write	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonArrayWriter& JsonArrayWriter::write( bool value ) {$/;"	f	class:Catch::JsonArrayWriter
write	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonValueWriter JsonObjectWriter::write( StringRef key ) {$/;"	f	class:Catch::JsonObjectWriter
write	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    void JsonValueWriter::write( Catch::StringRef value ) && {$/;"	f	class:Catch::JsonValueWriter
write	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    void JsonValueWriter::write( bool value ) && {$/;"	f	class:Catch::JsonValueWriter
write	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        JsonArrayWriter& write( T const& value ) {$/;"	f	class:Catch::JsonArrayWriter
write	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        void write( T const& value ) && {$/;"	f	class:Catch::JsonValueWriter
write	leak_demo/Catch2/src/catch2/matchers/catch_matchers_floating_point.cpp	/^void write(std::ostream& out, FloatingPoint num) {$/;"	f	namespace:Catch::__anon14
writeArray	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter JsonArrayWriter::writeArray() {$/;"	f	class:Catch::JsonArrayWriter
writeArray	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter JsonValueWriter::writeArray() && {$/;"	f	class:Catch::JsonValueWriter
writeArray	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonArrayWriter JsonArrayWriter::writeArray() {$/;"	f	class:Catch::JsonArrayWriter
writeArray	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonArrayWriter JsonValueWriter::writeArray() && {$/;"	f	class:Catch::JsonValueWriter
writeAssertion	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::writeAssertion( AssertionStats const& stats ) {$/;"	f	class:Catch::JunitReporter
writeAssertion	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::writeAssertion(AssertionStats const& stats, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertion	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeAssertion( AssertionStats const& stats ) {$/;"	f	class:Catch::JunitReporter
writeAssertion	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeAssertion(AssertionStats const& stats, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::writeAssertions( SectionNode const& sectionNode ) {$/;"	f	class:Catch::JunitReporter
writeAssertions	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::writeAssertions(SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAssertions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeAssertions( SectionNode const& sectionNode ) {$/;"	f	class:Catch::JunitReporter
writeAssertions	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeAssertions(SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeAttribute	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeAttribute( StringRef name, bool attribute ) {$/;"	f	class:Catch::XmlWriter
writeAttribute	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeAttribute( StringRef name,$/;"	f	class:Catch::XmlWriter
writeAttribute	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::ScopedElement::writeAttribute( StringRef name,$/;"	f	class:Catch::XmlWriter::ScopedElement
writeAttribute	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeAttribute( StringRef name, bool attribute ) {$/;"	f	class:Catch::XmlWriter
writeAttribute	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeAttribute( StringRef name,$/;"	f	class:Catch::XmlWriter
writeAttribute	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::writeAttribute( StringRef name,$/;"	f	class:Catch::XmlWriter::ScopedElement
writeAttribute	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^            ScopedElement& writeAttribute( StringRef name,$/;"	f	class:Catch::XmlWriter::ScopedElement
writeAttribute	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.hpp	/^        XmlWriter& writeAttribute( StringRef name, T const& attribute ) {$/;"	f	class:Catch::XmlWriter
writeComment	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeComment( StringRef text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
writeComment	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeComment( StringRef text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
writeCounts	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^     static void writeCounts( JsonObjectWriter&& writer, Counts const& counts ) {$/;"	f	namespace:Catch
writeCounts	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^     static void writeCounts( JsonObjectWriter&& writer, Counts const& counts ) {$/;"	f	namespace:Catch
writeDeclaration	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlWriter::writeDeclaration() {$/;"	f	class:Catch::XmlWriter
writeDeclaration	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void XmlWriter::writeDeclaration() {$/;"	f	class:Catch::XmlWriter
writeImpl	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JsonValueWriter::writeImpl( Catch::StringRef value, bool quote ) {$/;"	f	class:Catch::JsonValueWriter
writeImpl	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    void JsonValueWriter::writeImpl( Catch::StringRef value, bool quote ) {$/;"	f	class:Catch::JsonValueWriter
writeImpl	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        JsonArrayWriter& writeImpl( T const& value ) {$/;"	f	class:Catch::JsonArrayWriter
writeImpl	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.hpp	/^        void writeImpl( T const& value, bool quote_value ) {$/;"	f	class:Catch::JsonValueWriter
writeObject	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter JsonArrayWriter::writeObject() {$/;"	f	class:Catch::JsonArrayWriter
writeObject	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter JsonValueWriter::writeObject() && {$/;"	f	class:Catch::JsonValueWriter
writeObject	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonObjectWriter JsonArrayWriter::writeObject() {$/;"	f	class:Catch::JsonArrayWriter
writeObject	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonObjectWriter JsonValueWriter::writeObject() && {$/;"	f	class:Catch::JsonValueWriter
writeProperties	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void writeProperties( JsonArrayWriter writer,$/;"	f	namespace:Catch::__anon135
writeProperties	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^        void writeProperties( JsonArrayWriter writer,$/;"	f	namespace:Catch::__anon8
writeRun	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::writeRun( TestRunNode const& testRunNode, double suiteTime ) {$/;"	f	class:Catch::JunitReporter
writeRun	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::writeRun( TestRunNode const& runNode ) {$/;"	f	class:Catch::SonarQubeReporter
writeRun	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeRun( TestRunNode const& testRunNode, double suiteTime ) {$/;"	f	class:Catch::JunitReporter
writeRun	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeRun( TestRunNode const& runNode ) {$/;"	f	class:Catch::SonarQubeReporter
writeSection	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::writeSection( std::string const& className,$/;"	f	class:Catch::JunitReporter
writeSection	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::writeSection(std::string const& rootName, SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeSection	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeSection( std::string const& className,$/;"	f	class:Catch::JunitReporter
writeSection	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeSection(std::string const& rootName, SectionNode const& sectionNode, bool okToFail) {$/;"	f	class:Catch::SonarQubeReporter
writeSourceInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void writeSourceInfo( JsonObjectWriter& writer,$/;"	f	namespace:Catch::__anon135
writeSourceInfo	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlReporter::writeSourceInfo( SourceLineInfo const& sourceInfo ) {$/;"	f	class:Catch::XmlReporter
writeSourceInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^        void writeSourceInfo( JsonObjectWriter& writer,$/;"	f	namespace:Catch::__anon8
writeSourceInfo	leak_demo/Catch2/src/catch2/reporters/catch_reporter_xml.cpp	/^    void XmlReporter::writeSourceInfo( SourceLineInfo const& sourceInfo ) {$/;"	f	class:Catch::XmlReporter
writeStylesheetRef	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void XmlWriter::writeStylesheetRef( StringRef url ) {$/;"	f	class:Catch::XmlWriter
writeStylesheetRef	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    void XmlWriter::writeStylesheetRef( StringRef url ) {$/;"	f	class:Catch::XmlWriter
writeTags	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void writeTags( JsonArrayWriter writer, std::vector<Tag> const& tags ) {$/;"	f	namespace:Catch::__anon135
writeTags	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^        void writeTags( JsonArrayWriter writer, std::vector<Tag> const& tags ) {$/;"	f	namespace:Catch::__anon8
writeTestCase	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void JunitReporter::writeTestCase( TestCaseNode const& testCaseNode ) {$/;"	f	class:Catch::JunitReporter
writeTestCase	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::writeTestCase(TestCaseNode const& testCaseNode) {$/;"	f	class:Catch::SonarQubeReporter
writeTestCase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.cpp	/^    void JunitReporter::writeTestCase( TestCaseNode const& testCaseNode ) {$/;"	f	class:Catch::JunitReporter
writeTestCase	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeTestCase(TestCaseNode const& testCaseNode) {$/;"	f	class:Catch::SonarQubeReporter
writeTestFile	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    void SonarQubeReporter::writeTestFile(StringRef filename, std::vector<TestCaseNode const*> const& testCaseNodes) {$/;"	f	class:Catch::SonarQubeReporter
writeTestFile	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.cpp	/^    void SonarQubeReporter::writeTestFile(StringRef filename, std::vector<TestCaseNode const*> const& testCaseNodes) {$/;"	f	class:Catch::SonarQubeReporter
writeText	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter& XmlWriter::writeText( StringRef text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
writeText	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::ScopedElement::writeText( StringRef text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter::ScopedElement
writeText	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter& XmlWriter::writeText( StringRef text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter
writeText	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::writeText( StringRef text, XmlFormatting fmt ) {$/;"	f	class:Catch::XmlWriter::ScopedElement
writeToDebugConsole	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
writeToDebugConsole	leak_demo/Catch2/src/catch2/internal/catch_debug_console.cpp	/^        void writeToDebugConsole( std::string const& text ) {$/;"	f	namespace:Catch
writeToStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        void Parser::writeToStream( std::ostream& os ) const {$/;"	f	class:Catch::Clara::Parser
writeToStream	leak_demo/Catch2/src/catch2/internal/catch_clara.cpp	/^        void Parser::writeToStream( std::ostream& os ) const {$/;"	f	class:Catch::Clara::Parser
writeToStream	leak_demo/Catch2/third_party/clara.hpp	/^        void writeToStream( std::ostream &os ) const {$/;"	f	struct:clara::detail::Parser
write_recent_release_notes_with_introduced_text	leak_demo/Catch2/tools/scripts/extractFeaturesFromReleaseNotes.py	/^def write_recent_release_notes_with_introduced_text():$/;"	f
ws	leak_demo/Catch2/examples/210-Evt-EventListeners.cpp	/^std::string ws(int const level) {$/;"	f	namespace:__anon103
xml	leak_demo/Catch2/src/catch2/reporters/catch_reporter_junit.hpp	/^        XmlWriter xml;$/;"	m	class:Catch::final
xml	leak_demo/Catch2/src/catch2/reporters/catch_reporter_sonarqube.hpp	/^        XmlWriter xml;$/;"	m	class:Catch::final
xml_out_path	leak_demo/Catch2/tests/TestScripts/testBazelReporter.py	/^xml_out_path = os.path.join(output_dir, '{}.xml'.format(os.path.basename(bin_path)))$/;"	v
xml_tag	leak_demo/Catch2/tests/TestScripts/testConfigureDefaultReporter.py	/^xml_tag = '<\/Catch2TestRun>'$/;"	v
zeroTestsCountAsSuccess	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    bool Config::zeroTestsCountAsSuccess() const       { return m_data.allowZeroTests; }$/;"	f	class:Catch::Config
zeroTestsCountAsSuccess	leak_demo/Catch2/src/catch2/catch_config.cpp	/^    bool Config::zeroTestsCountAsSuccess() const       { return m_data.allowZeroTests; }$/;"	f	class:Catch::Config
~AssertionHandler	leak_demo/Catch2/src/catch2/internal/catch_assertion_handler.hpp	/^        ~AssertionHandler() {$/;"	f	class:Catch::AssertionHandler
~Capturer	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Capturer::~Capturer() {$/;"	f	class:Catch::Capturer
~Capturer	leak_demo/Catch2/src/catch2/catch_message.cpp	/^    Capturer::~Capturer() {$/;"	f	class:Catch::Capturer
~ColourGuard	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ColourImpl::ColourGuard::~ColourGuard() {$/;"	f	class:Catch::ColourImpl::ColourGuard
~ColourGuard	leak_demo/Catch2/src/catch2/internal/catch_console_colour.cpp	/^    ColourImpl::ColourGuard::~ColourGuard() {$/;"	f	class:Catch::ColourImpl::ColourGuard
~ErrnoGuard	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^        ErrnoGuard::~ErrnoGuard() { errno = m_oldErrno; }$/;"	f	class:Catch::ErrnoGuard
~ErrnoGuard	leak_demo/Catch2/src/catch2/internal/catch_errno_guard.cpp	/^        ErrnoGuard::~ErrnoGuard() { errno = m_oldErrno; }$/;"	f	class:Catch::ErrnoGuard
~FatalConditionHandler	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    FatalConditionHandler::~FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
~FatalConditionHandler	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.cpp	/^    FatalConditionHandler::~FatalConditionHandler() {$/;"	f	class:Catch::FatalConditionHandler
~FatalConditionHandlerGuard	leak_demo/Catch2/src/catch2/internal/catch_fatal_condition_handler.hpp	/^        ~FatalConditionHandlerGuard() {$/;"	f	class:Catch::FatalConditionHandlerGuard
~JsonArrayWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonArrayWriter::~JsonArrayWriter() {$/;"	f	class:Catch::JsonArrayWriter
~JsonArrayWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonArrayWriter::~JsonArrayWriter() {$/;"	f	class:Catch::JsonArrayWriter
~JsonObjectWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonObjectWriter::~JsonObjectWriter() {$/;"	f	class:Catch::JsonObjectWriter
~JsonObjectWriter	leak_demo/Catch2/src/catch2/internal/catch_jsonwriter.cpp	/^    JsonObjectWriter::~JsonObjectWriter() {$/;"	f	class:Catch::JsonObjectWriter
~JsonReporter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    JsonReporter::~JsonReporter() {$/;"	f	class:Catch::JsonReporter
~JsonReporter	leak_demo/Catch2/src/catch2/reporters/catch_reporter_json.cpp	/^    JsonReporter::~JsonReporter() {$/;"	f	class:Catch::JsonReporter
~LeakDetector	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^Catch::LeakDetector::~LeakDetector() {$/;"	f	class:Catch::LeakDetector
~LeakDetector	leak_demo/Catch2/src/catch2/internal/catch_leak_detector.cpp	/^Catch::LeakDetector::~LeakDetector() {$/;"	f	class:Catch::LeakDetector
~ObjectStorage	leak_demo/Catch2/src/catch2/benchmark/catch_constructor.hpp	/^                ~ObjectStorage() { destruct_on_exit<T>(); }$/;"	f	struct:Catch::Benchmark::Detail::ObjectStorage
~Optional	leak_demo/Catch2/src/catch2/internal/catch_optional.hpp	/^        ~Optional() { reset(); }$/;"	f	class:Catch::Optional
~OutputRedirect	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    OutputRedirect::~OutputRedirect() {$/;"	f	class:Catch::OutputRedirect
~OutputRedirect	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    OutputRedirect::~OutputRedirect() {$/;"	f	class:Catch::OutputRedirect
~RedirectedStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RedirectedStream::~RedirectedStream() {$/;"	f	class:Catch::RedirectedStream
~RedirectedStream	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    RedirectedStream::~RedirectedStream() {$/;"	f	class:Catch::RedirectedStream
~RedirectedStreams	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RedirectedStreams::~RedirectedStreams() {$/;"	f	class:Catch::RedirectedStreams
~RedirectedStreams	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    RedirectedStreams::~RedirectedStreams() {$/;"	f	class:Catch::RedirectedStreams
~ReusableStringStream	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ReusableStringStream::~ReusableStringStream() {$/;"	f	class:Catch::ReusableStringStream
~ReusableStringStream	leak_demo/Catch2/src/catch2/internal/catch_reusable_string_stream.cpp	/^    ReusableStringStream::~ReusableStringStream() {$/;"	f	class:Catch::ReusableStringStream
~RunContext	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    RunContext::~RunContext() {$/;"	f	class:Catch::RunContext
~RunContext	leak_demo/Catch2/src/catch2/internal/catch_run_context.cpp	/^    RunContext::~RunContext() {$/;"	f	class:Catch::RunContext
~ScopedElement	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::ScopedElement::~ScopedElement() {$/;"	f	class:Catch::XmlWriter::ScopedElement
~ScopedElement	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::ScopedElement::~ScopedElement() {$/;"	f	class:Catch::XmlWriter::ScopedElement
~ScopedMessage	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    ScopedMessage::~ScopedMessage() {$/;"	f	class:Catch::ScopedMessage
~ScopedMessage	leak_demo/Catch2/src/catch2/catch_message.cpp	/^    ScopedMessage::~ScopedMessage() {$/;"	f	class:Catch::ScopedMessage
~Section	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Section::~Section() {$/;"	f	class:Catch::Section
~Section	leak_demo/Catch2/src/catch2/internal/catch_section.cpp	/^    Section::~Section() {$/;"	f	class:Catch::Section
~Session	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    Session::~Session() {$/;"	f	class:Catch::Session
~Session	leak_demo/Catch2/src/catch2/catch_session.cpp	/^    Session::~Session() {$/;"	f	class:Catch::Session
~TempFile	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    TempFile::~TempFile() {$/;"	f	class:Catch::TempFile
~TempFile	leak_demo/Catch2/src/catch2/internal/catch_output_redirect.cpp	/^    TempFile::~TempFile() {$/;"	f	class:Catch::TempFile
~ValidatingTestListener	leak_demo/Catch2/tests/SelfTest/TestRegistrations.cpp	/^ValidatingTestListener::~ValidatingTestListener() {$/;"	f	class:ValidatingTestListener
~XmlWriter	leak_demo/Catch2/extras/catch_amalgamated.cpp	/^    XmlWriter::~XmlWriter() {$/;"	f	class:Catch::XmlWriter
~XmlWriter	leak_demo/Catch2/src/catch2/internal/catch_xmlwriter.cpp	/^    XmlWriter::~XmlWriter() {$/;"	f	class:Catch::XmlWriter
~out_buff	leak_demo/Catch2/examples/231-Cfg-OutputStreams.cpp	/^out_buff::~out_buff() { pubsync(); }$/;"	f	class:out_buff
~unique_ptr	leak_demo/Catch2/extras/catch_amalgamated.hpp	/^        ~unique_ptr() {$/;"	f	class:Catch::Detail::unique_ptr
~unique_ptr	leak_demo/Catch2/src/catch2/internal/catch_unique_ptr.hpp	/^        ~unique_ptr() {$/;"	f	class:Catch::Detail::unique_ptr
